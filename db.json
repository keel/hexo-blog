{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":0,"renderable":0},{"_id":"source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":0},{"_id":"source/images/openssh_sshd_config.jpg","path":"images/openssh_sshd_config.jpg","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"3635957ec54e2037893a8dcb854c2af2f7a4eb7b","modified":1446882164000},{"_id":"source/CNAME","hash":"4c54e6c5d6d2ce734500859dc343d2b6a9dd35d7","modified":1457528586000},{"_id":"source/favicon.ico","hash":"c80bb569a8138d0934cac695064109a1a98556c6","modified":1239686277000},{"_id":"source/jQuery_getting_started.html","hash":"ea014968ba5a6bb9f41a1e115c0d4cfcb63f598c","modified":1457530324000},{"_id":"source/json.html","hash":"2242f7b07e78d72c423988b7e6a3c95c5dab2c34","modified":1457530250000},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1509617767846},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1446823703000},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1509617767846},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1509617767847},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1509617767847},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1509617767847},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1509617767848},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1509617767848},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1509617767848},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1509617767848},{"_id":"themes/next/README.cn.md","hash":"6d9177e7dad87e6129760e4b559bd3f7a15429d7","modified":1509617767848},{"_id":"themes/next/README.md","hash":"529d53dfa97678f8ce4c95620b26e61154162a29","modified":1509617767849},{"_id":"themes/next/bower.json","hash":"6d6ae7531cf3fedc97c58cdad664f5793eb3cc88","modified":1509617767849},{"_id":"themes/next/_config.yml","hash":"921f3625071945effffc91491db114f2a8f85abd","modified":1509675703176},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1509617767850},{"_id":"themes/next/package.json","hash":"93a74dbc0fe3a1208a02e9cec3c15c2375339cc1","modified":1509617767881},{"_id":"source/_posts/github-multiple-ssh-key.md","hash":"f613b2f98fc7c2be4659a5a0fc93f8eddcb32068","modified":1447086851000},{"_id":"source/_posts/hexo-ftpsync-bug.md","hash":"86a5030af5103529f69abce1f563013f71a88cca","modified":1447037660000},{"_id":"source/_posts/nodejs-trap.md","hash":"5b15f5bd8764c0ab0c64c9009db39b96c3396807","modified":1462284093000},{"_id":"source/_posts/try-hexo.md","hash":"2f24566283bd3774c30e24d9b23d9088945ec98a","modified":1446833258000},{"_id":"source/_posts/update-openssh-6.md","hash":"20fc64d4a36cf1ea06f083810b5b4430273db412","modified":1446999247000},{"_id":"source/about/index.md","hash":"299eae35e4fa91dec2751a7b2c20913f5c87dfaa","modified":1509620321820},{"_id":"source/categories/index.md","hash":"925633f0494280e969deae67793acc57eb055204","modified":1446825154000},{"_id":"source/images/avatar.jpg","hash":"70faf124ec9826dc8af3acb0d0d4f1d1fbe717b5","modified":1446830765000},{"_id":"source/tags/index.md","hash":"69c249e9fb60ab2c7bc483bfca5495fc098f0439","modified":1446825037000},{"_id":"themes/next/.git/FETCH_HEAD","hash":"b819d1227133306283463d670df496cbb01a048e","modified":1509617767797},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1446823703000},{"_id":"themes/next/.git/ORIG_HEAD","hash":"215a1730f0f05db090946809e5211792036a2efe","modified":1509617767819},{"_id":"themes/next/.git/config","hash":"bf7d1df65cf34d0f25a7184a58c37a09f72e4be7","modified":1446823703000},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1446823207000},{"_id":"themes/next/.git/index","hash":"6377e73fd9a59c41cf222b02fa45b247206f4682","modified":1509617768262},{"_id":"themes/next/.git/packed-refs","hash":"09bb091435681fd3a854183f278d04a509cc2cc0","modified":1446823703000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1509617767846},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"352093a1b210c72136687fd2eee649244cee402c","modified":1509617767847},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1509617767847},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1509617767847},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1509617767850},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1509617767850},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1509617767851},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1509617767850},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1509617767851},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1509617767851},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1509617767851},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1509617767851},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1509617767852},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1509617767852},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1509617767852},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1509617767852},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1509617767853},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1509617767853},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1509617767853},{"_id":"themes/next/layout/_layout.swig","hash":"da0929166674ea637e0ad454f85ad0d7bac4aff2","modified":1509617767854},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1509617767878},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1509617767879},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1509617767879},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1509617767880},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1509617767880},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1509617767881},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1509617767881},{"_id":"themes/next/scripts/merge-configs.js","hash":"cb617ddf692f56e6b6129564d52e302f50b28243","modified":1509617767882},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1509617767883},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1509617767995},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1446823703000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1446823703000},{"_id":"source/images/openssh_sshd_config.jpg","hash":"6cc9957d0881cd0314b8bf1cea936c7338ea21b7","modified":1446051422000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1446823703000},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1446823207000},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"86b9655a9ebbde13ac8dd5795eb4d5b539edab0f","modified":1446823207000},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1446823207000},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"42fa41564917b44183a50c4d94bb03e1768ddad8","modified":1446823207000},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1446823207000},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1446823207000},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1446823207000},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1446823207000},{"_id":"themes/next/.git/hooks/update.sample","hash":"39355a075977d05708ef74e1b66d09a36e486df1","modified":1446823207000},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1446823207000},{"_id":"themes/next/.git/logs/HEAD","hash":"b50354f3d52818de297f2d81ff258326b4c9e867","modified":1509617767998},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1509617767854},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1509617767854},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1509617767855},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1509617767855},{"_id":"themes/next/layout/_macro/post.swig","hash":"7a64914a0a3c893c1aaa8b5349b85898f95af314","modified":1509617767856},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1509617767856},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"9efc455894921a66bbc074055d3b39c8a34a48a4","modified":1509617767856},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1509617767857},{"_id":"themes/next/layout/_partials/comments.swig","hash":"044bc872d7b59655e46f6fb1cf14f767e31a4dfa","modified":1509617767857},{"_id":"themes/next/layout/_partials/footer.swig","hash":"c4d6181f5d3db5365e622f78714af8cc58d7a45e","modified":1509617767858},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1509617767858},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1509617767860},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1509617767861},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1446823703000},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1509617767862},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1509617767867},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1509617767867},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1509617767869},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1509617767875},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1509617767875},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1509617767875},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1509617767875},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1509617767876},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1509617767876},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1509617767876},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1509617767883},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1446823703000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1509617767883},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1509617767884},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1446823703000},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1509617767884},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1509617767884},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1509617767884},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1509617767885},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1509617767938},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1509617767939},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1509617767939},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1509617767939},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1446823703000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1446823703000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1446823703000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1446823703000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1446823703000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1446823703000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1446823703000},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1509617767940},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1509617767940},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1446823703000},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1509617767940},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1446823703000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1446823703000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1446823703000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1446823703000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1509617767868},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1509617767868},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1509617767905},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1446823703000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1446823703000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1509617767937},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1446823703000},{"_id":"themes/next/.git/objects/61/89a2e6b395c9ea3dacc29f97dea841e158450b","hash":"1a5b9dba8a6eeed032c3e7dc05d8c03d04c32d14","modified":1509617512391},{"_id":"themes/next/.git/objects/05/e9f9a2696ca0d1fa37d347e41df7d3e9e8ea88","hash":"4420c8cc205d1b5dab16d96eec1e3789617ce0d8","modified":1509617512385},{"_id":"themes/next/.git/objects/72/7fea6cc049a03ba5065ebc77d5b5ff04b91643","hash":"a86bd6a365a67dd449a07aee5666dddb536b9c41","modified":1509617512384},{"_id":"themes/next/.git/objects/8e/a31edd39c5a98827c413be53e01a800b6349ca","hash":"ee18ed46a059328c12e8c02454421276cc58d5ac","modified":1509617512390},{"_id":"themes/next/.git/objects/c6/fb19b6f18ad19e6ee77851abd8f09d816cf063","hash":"d4803cad5dece5ada15806f3c8a4f06a0e7c2885","modified":1509617512386},{"_id":"themes/next/.git/objects/a1/175770f553d0fc6ac56002abdc88f4d7757a48","hash":"55fce0eb52ad01ce0adae54ace008d830221310f","modified":1509617512388},{"_id":"themes/next/.git/objects/fd/6f8c08450f560037a281fd572e907870022566","hash":"4d16ad3477a82dd9c2cf74d8a133cf5639139fef","modified":1509617512387},{"_id":"themes/next/.git/refs/heads/master","hash":"c1f51bbbdfb8b8e8af5bb02d472e297009ee7cbd","modified":1509617767997},{"_id":"themes/next/.git/refs/tags/v5.0.0","hash":"3db07998a600b0c7d7d15359cb4ef808b6ec8648","modified":1509612220744},{"_id":"themes/next/.git/refs/tags/v5.0.1","hash":"4bd3aae6c4ad63fce23f9306572ecd3961d58a03","modified":1509612220745},{"_id":"themes/next/.git/refs/tags/v5.1.0","hash":"7ec0539e56966d1eaf8b88c1d27165c1f7dfacf5","modified":1509612220746},{"_id":"themes/next/.git/refs/tags/v5.1.1","hash":"3caf2cc30e2bc17ce7c8decb48064104d4845453","modified":1509612220747},{"_id":"themes/next/.git/refs/tags/v5.1.2","hash":"75173e2dd18a6221ff84742ff53d01ac5c6e04b0","modified":1509612220748},{"_id":"themes/next/.git/refs/tags/v5.1.3","hash":"5eec1427a836e6e34c81dc784bafb33c2ccf48f9","modified":1509612220749},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1509617767859},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1509617767859},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1509617767863},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1509617767864},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1446823703000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1509617767865},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1509617767865},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1446823703000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1509617767866},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1509617767868},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1509617767868},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1509617767868},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1509617767869},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1509617767870},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1509617767870},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1509617767870},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1509617767870},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1509617767870},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"2369a8469975e9f64d40b1fb03b5f550ffc133e7","modified":1509617767871},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1509617767871},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1509617767871},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1509617767871},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1509617767872},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1509617767872},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1509617767872},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1509617767872},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1509617767873},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1509617767873},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1509617767873},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1509617767873},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1509617767874},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1509617767874},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"f780973e0f8c2e52a70ac5e927af845d7b547b71","modified":1509617767874},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1509617767874},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1509617767877},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1509617767877},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1509617767877},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1509617767878},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1446823703000},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1509617767905},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1509617767905},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1509617767926},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1509617767936},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1509617767937},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1509617767937},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1509617767938},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1509617767941},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1509617767941},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1509617767941},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1509617767942},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1509617767942},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1509617767942},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1509617767943},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1509617767943},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1509617767944},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1509617767944},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1509617767950},{"_id":"themes/next/source/js/src/utils.js","hash":"dbdc3d1300eec7da9632608ebc0e5b697779dad7","modified":1509617767944},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1509617767954},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1509617767954},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1509617767954},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1509617767955},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1509617767960},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1509617767961},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1509617767961},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1509617767961},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1509617767962},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1509617767963},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1509617767963},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1509617767963},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1509617767963},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1509617767977},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1509617767978},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1509617767979},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1509617767979},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1509617767979},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1509617767979},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1509617767980},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1509617767980},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1509617767980},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1509617767981},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1509617767981},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1509617767981},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1509617767982},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1509617767982},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1509617767982},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1509617767982},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1509617767983},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1509617767983},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1509617767983},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1509617767983},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1509617767984},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1509617767983},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1509617767984},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1509617767984},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1509617767985},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1509617767985},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1509617767986},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1509617767991},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1509617767991},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1509617767994},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1509617767994},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1509617767994},{"_id":"themes/next/.git/objects/pack/pack-c5ba4b4320c455bc01a54da486b4b14b6087eb35.idx","hash":"113531f616c035013060de00f8eb11c5c55b37e7","modified":1446823703000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1509617767978},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"b50354f3d52818de297f2d81ff258326b4c9e867","modified":1509617767998},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1446823703000},{"_id":"themes/next/.git/refs/remotes/origin/button-refactor","hash":"fb495f16a68c230584ab7ce8aa719b0999b96e0b","modified":1509612220704},{"_id":"themes/next/.git/refs/remotes/origin/dev","hash":"c9abcffd1f03a6a76afa09334100c5003cf895a0","modified":1509612220705},{"_id":"themes/next/.git/refs/remotes/origin/master","hash":"c1f51bbbdfb8b8e8af5bb02d472e297009ee7cbd","modified":1509617512401},{"_id":"themes/next/.git/refs/remotes/origin/servant","hash":"ee903ee2112907f4498fdb13674a640c685e95fb","modified":1509612220706},{"_id":"themes/next/.git/refs/remotes/origin/testing","hash":"15660a56eaab85fc3fd3324de8d61dbc2b09b42a","modified":1509612220707},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1509617767876},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1509617767877},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1509617767903},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1509617767904},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1509617767903},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1509617767904},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1509617767904},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1509617767905},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1509617767885},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1509617767885},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1509617767886},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1509617767886},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1509617767886},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1509617767890},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1509617767897},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1509617767903},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1509617767927},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1509617767929},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1509617767928},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1446823703000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1509617767929},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1509617767930},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1509617767930},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1509617767931},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1509617767932},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1509617767932},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"02fb8fa6b6c252b6bed469539cd057716606a787","modified":1509617767933},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1509617767933},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1509617767933},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1509617767934},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1509617767934},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1509617767935},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1509617767935},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"bcf52192942c0afc410c74a0fb458e7936ddc3d5","modified":1509617767935},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1509617767936},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1509617767947},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1509617767949},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1509617767949},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1509617767943},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1509617767955},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1509617767956},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1509617767956},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1509617767957},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1509617767956},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1509617767957},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1509617767959},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1509617767960},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1509617767960},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1509617767962},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1509617767962},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1509617767964},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1509617767965},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1509617767964},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1509617767990},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1509617767990},{"_id":"themes/next/.git/objects/pack/pack-08ae131a3b428f1cb6faaa48a31450fc06c15680.idx","hash":"948f3727cb7c5bc5cc4d31571fc97fe5e0bc34ab","modified":1509612220657},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1509617767948},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1509617767977},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1509617767976},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1509617767993},{"_id":"themes/next/.git/logs/refs/remotes/origin/dev","hash":"fef2d0454a8037acd2127574c8a54a4c0269968d","modified":1509612220705},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"c11d253a0b2bae327ceed4981e2a7ec098ba11dd","modified":1446823703000},{"_id":"themes/next/.git/logs/refs/remotes/origin/button-refactor","hash":"8ef6229b8ebc4f517880c7f7abf2560962647d9a","modified":1509612220705},{"_id":"themes/next/.git/logs/refs/remotes/origin/master","hash":"f68512590d2f63dda9ce2506b3eb8df5c6154c73","modified":1509617512402},{"_id":"themes/next/.git/logs/refs/remotes/origin/servant","hash":"30390b24d942c81bdcc1705eb7d902b551d83359","modified":1509612220706},{"_id":"themes/next/.git/logs/refs/remotes/origin/testing","hash":"fc24a0a76af21735ca97dd9d7289edca7ff37a8d","modified":1509612220707},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1509617767887},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1509617767887},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1509617767886},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1509617767887},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1509617767888},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1509617767888},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1509617767889},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1509617767889},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1509617767890},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1509617767890},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1509617767890},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1509617767888},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1509617767888},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1509617767889},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1509617767891},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1509617767891},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1509617767891},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1509617767892},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1509617767892},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1509617767892},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1509617767892},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1509617767892},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1509617767893},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1509617767893},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1509617767893},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1509617767893},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1509617767894},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1509617767894},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1509617767894},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1509617767894},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1509617767895},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1509617767895},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1509617767895},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1509617767895},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1509617767896},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"77c92a449ce84d558d26d052681f2e0dd77c70c9","modified":1509617767896},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1509617767896},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1509617767897},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1509617767897},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1509617767897},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1509617767898},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1509617767898},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1509617767898},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1509617767899},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1509617767899},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1509617767899},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1509617767899},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1509617767900},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1509617767900},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1509617767900},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1509617767901},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1509617767901},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1509617767901},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1509617767901},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1509617767902},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1509617767902},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1509617767902},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1509617767902},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1509617767931},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1509617767932},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1509617767933},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1509617767945},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1509617767946},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1509617767946},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1509617767947},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1509617767946},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1509617767957},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1509617767958},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1509617767958},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1509617767958},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1509617767958},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1509617767959},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1509617767969},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1509617767967},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1509617767975},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1509617767953},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1509617767989},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1509617767973},{"_id":"themes/next/.git/objects/pack/pack-08ae131a3b428f1cb6faaa48a31450fc06c15680.pack","hash":"4d44c3475d29153ca29bcf4ace38126981669c8c","modified":1509612220651},{"_id":"themes/next/.git/objects/pack/pack-c5ba4b4320c455bc01a54da486b4b14b6087eb35.pack","hash":"a94e1b9175ca5e9eecb4a5dcf49258665f666956","modified":1446823703000},{"_id":"public/atom.xml","hash":"860239a9c7866a2feb77d1c426b3d0075818c11c","modified":1509676260217},{"_id":"public/about/index.html","hash":"42ae06a3d2bc2aaf701d64258b6c628087d3a870","modified":1509676260311},{"_id":"public/categories/index.html","hash":"9782fa468a39725696f3118f196e7db0772584cf","modified":1509676260311},{"_id":"public/tags/index.html","hash":"8bc40673c88387f87ae7018d7b5714be24854898","modified":1509676260311},{"_id":"public/archives/index.html","hash":"60afbf5baaa30bddd2305bee4db001f8597017cb","modified":1509676260311},{"_id":"public/archives/2015/index.html","hash":"4b9b6945d776847a008d526bbda050bb190b1a44","modified":1509676260311},{"_id":"public/archives/2015/11/index.html","hash":"f5d737f00ca29d45df7241d7d0dc42b077d887d3","modified":1509676260311},{"_id":"public/archives/2015/12/index.html","hash":"48e0cc00d7d04699c2e978dfa0d80e4f49cf07b7","modified":1509676260311},{"_id":"public/categories/git/index.html","hash":"24bd894913012229bbf66e9cd2d95e8f145261fe","modified":1509676260311},{"_id":"public/categories/node/index.html","hash":"e59e54408fc0ed0bdb1400b7b6f4b09d0ad6f82b","modified":1509676260311},{"_id":"public/categories/nodejs/index.html","hash":"7137dc83d5244c3ffd2689dd344d6b81f865890a","modified":1509676260311},{"_id":"public/categories/other/index.html","hash":"b2d48d905caa9ee9576963839fe2f5d3d3a2851f","modified":1509676260311},{"_id":"public/categories/linux/index.html","hash":"2085252902032db25bd011cd26d82ec4875ef2e1","modified":1509676260312},{"_id":"public/tags/github/index.html","hash":"66e05ca692059020545994839812ad98acea2908","modified":1509676260312},{"_id":"public/tags/ssh/index.html","hash":"6ed6d32b7585e8669b56f909a9fdcdc3a5ff07be","modified":1509676260312},{"_id":"public/tags/git/index.html","hash":"2bfdcb7833e409baf90c1bc1f6e16d8feacace3d","modified":1509676260312},{"_id":"public/tags/node/index.html","hash":"e09fdae369ddd29f73284a802ec2b079891b574a","modified":1509676260312},{"_id":"public/tags/javascript/index.html","hash":"b67580f2bcca16329ea1c99b1bc62f9d97c8e64d","modified":1509676260312},{"_id":"public/tags/hexo/index.html","hash":"f0dfcdf63041d3f00e89aee80433662c7b4cbdae","modified":1509676260312},{"_id":"public/tags/nodejs/index.html","hash":"1f5341bce0328cde16ea3413298ff556d17c7d5c","modified":1509676260312},{"_id":"public/tags/centos/index.html","hash":"b9d7f0622f804691d4cf8427c46ccde9f4f94931","modified":1509676260312},{"_id":"public/tags/linux/index.html","hash":"97e85bd66a13e14b8f4df4b6a9a58d42ca24a009","modified":1509676260312},{"_id":"public/jQuery_getting_started.html","hash":"b5a6b45440f8f27ed219a2cfb6289ecbf0dc7b12","modified":1509676260312},{"_id":"public/json.html","hash":"bcca682c4dec3af356367901d63c010e33ba436a","modified":1509676260312},{"_id":"public/2015/nodejs-trap/index.html","hash":"0e4f0677c2ab43be1eb0b7b51c53a9efe62172ee","modified":1509676260312},{"_id":"public/2015/github-multiple-ssh-key/index.html","hash":"23601035a34a76dd52ff46c38ed2eda598f9b3b5","modified":1509676260312},{"_id":"public/2015/hexo-ftpsync-bug/index.html","hash":"338825029067fdd3a8cbcf2affc989926599e115","modified":1509676260312},{"_id":"public/2015/update-openssh-6/index.html","hash":"1c3482eaed473cdf1fa60e56010e09b99187f06c","modified":1509676260312},{"_id":"public/2015/try-hexo/index.html","hash":"d675e534ae4454958d76fc7d284cd0b76d677296","modified":1509676260312},{"_id":"public/index.html","hash":"db7995416742a4f75bdc7820490423511790f2aa","modified":1509676260312},{"_id":"public/CNAME","hash":"4c54e6c5d6d2ce734500859dc343d2b6a9dd35d7","modified":1509676260336},{"_id":"public/favicon.ico","hash":"c80bb569a8138d0934cac695064109a1a98556c6","modified":1509676260336},{"_id":"public/images/avatar.jpg","hash":"70faf124ec9826dc8af3acb0d0d4f1d1fbe717b5","modified":1509676260336},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1509676260336},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1509676260336},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1509676260336},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1509676260336},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1509676260336},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1509676260336},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1509676260336},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1509676260336},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1509676260336},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1509676260336},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1509676260336},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1509676260336},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1509676260336},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1509676260336},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1509676260336},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1509676260336},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1509676260336},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1509676260336},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1509676260336},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1509676260337},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1509676260337},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1509676260337},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1509676260337},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1509676260337},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1509676260337},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1509676260337},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1509676260337},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1509676260337},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1509676260337},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1509676260337},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1509676260337},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1509676260337},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1509676260337},{"_id":"public/images/openssh_sshd_config.jpg","hash":"6cc9957d0881cd0314b8bf1cea936c7338ea21b7","modified":1509676261136},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1509676261140},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1509676261163},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1509676261169},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1509676261169},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1509676261169},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1509676261169},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1509676261169},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1509676261169},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1509676261169},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1509676261169},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1509676261169},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1509676261169},{"_id":"public/js/src/utils.js","hash":"dbdc3d1300eec7da9632608ebc0e5b697779dad7","modified":1509676261169},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1509676261169},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1509676261169},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1509676261169},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1509676261170},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1509676261170},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1509676261170},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1509676261170},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1509676261170},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1509676261170},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1509676261170},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1509676261170},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1509676261170},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1509676261170},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1509676261170},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1509676261170},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1509676261170},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1509676261170},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1509676261170},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1509676261170},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1509676261170},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1509676261170},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1509676261170},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1509676261170},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1509676261170},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1509676261170},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1509676261170},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1509676261170},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1509676261170},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1509676261170},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1509676261171},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1509676261171},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1509676261171},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1509676261171},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1509676261171},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1509676261171},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1509676261171},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1509676261171},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1509676261171},{"_id":"public/css/main.css","hash":"50544cfdc3e8ad332e2508b08c0c0d42299d1670","modified":1509676261171},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1509676261171},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1509676261171},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1509676261171},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1509676261171},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1509676261171},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1509676261171},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1509676261171},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1509676261171},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1509676261171},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1509676261171},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1509676261171},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1509676261172},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1509676261172},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1509676261172},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1509676261172},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1509676261173},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1509676261173},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1509676261173},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1509676261173},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1509676261173},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1509676261173},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1509676261174},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1509676261174},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1509676261205}],"Category":[{"name":"git","_id":"cj9ja9jo30006pvvpax2efk6n"},{"name":"node","_id":"cj9ja9jog000bpvvp8896ru2e"},{"name":"nodejs","_id":"cj9ja9joi000epvvp4zjf3y6v"},{"name":"other","_id":"cj9ja9joj000hpvvpywp3oqbb"},{"name":"linux","_id":"cj9ja9jol000mpvvpb6ef3bib"}],"Data":[],"Page":[{"_content":"<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n<title>jQuery中文入门教程_译自Getting Started with jQuery</title>\n<meta name=\"Author\" content=\"Keel\" />\n<meta name=\"Keywords\" content=\"jQuery\" />\n<meta name=\"Description\" content=\"jQuery 中文入门指南，翻译加实例，jQuery的起点教程，译自Getting Started with jQuery\" />\n<style type=\"text/css\">\n<!--\npre {\n\twhite-space: pre;\n\tbackground-color: #eee;\n\twidth: 90%;\n\tborder: 1px dotted black;\n\tdisplay: block;\n\tpadding: 7px;\n}\nh2 {\n\tmargin-top: 2em;\n}\nh4 { margin-bottom: 0em; }\n.log {\n\tcolor:green;\n}\n.red{color:red;font-weight: bold;font-size: 9pt;}\n#ad{position:absolute;left:5px;top:5px;width:728px; height:90px; }\n#org{padding-top:90px;position:relative ;top:1px:width:1px; }\n-->\n</style>\n</head>\n<body>\n<h1>jQuery中文入门指南，翻译加实例，jQuery的起点教程</h1>\n<div>\n\t<h3>中文版译者：<a href=\"http://www.k99k.com/\">Keel</a></h3>\n\t<p>此文以实例为基础一步步说明了jQuery的工作方式。现以中文翻译（添加我的补充说明）如下。如有相关意见或建议请 <a href=\"mailto:keel.sike(at)gmail.com\">EMAIL</a> 告知。或者在 <a href=\"http://cc9c.blogspot.com/\">BLOG</a>中留言。</p>\n\t<p>英文原版：<a href=\"http://docs.jquery.com/Tutorials:Getting_Started_with_jQuery\">http://docs.jquery.com/Tutorials:Getting_Started_with_jQuery<!-- http://jquery.bassistance.de/jquery-getting-started.html --></a> ，感谢原文作者 <a href=\"http://bassistance.de/\">Jörn Zaefferer</a> <strong>本文发布已征求原作者同意。</strong> </p>\n\t<p class=\"red\"> 说明:在本教程发布之后，得到了几个网友的指正，对部分内容作了修正，但在jQuery版本不断更新的情况下，教程中的某些内容已经过时（尤其是1.3以上版本），在忠于原文的基础上，我将这部分内容加以标红的补充说明，希望更多的前端开发者能对此文提出宝贵意见，谢谢！ --2009-3-10</p>\n\t<p>另外我认为在学习过程中,有两个API文档你要打开随时查看:</p>\n\t<ul>\n\t<li><a href=\"http://api.jquery.com/\" target=\"_blank\">http://api.jquery.com/</a> <span class=\"red\">[注：已更新为jquery新地址]</span></li>\n\t<li><a href=\"http://visualjquery.com/\" target=\"_blank\">http://visualjquery.com/</a></li>\n\t</ul>\n如果想了解更多jQuery及插件信息，可<a href=\"http://www.k99k.com\">访问本站首页</a>.</div>\n<div id=\"org\">\n<h4>以下部分为原文翻译:</h4>\n<hr />\n<div>\n<h2>jQuery入门指南教程</h2>\n<p>\n这个指南是一个对jQuery库的说明，要求读者了解HTML(DOM)和CSS的一些常识。它包括了一个简单的Hello World的例子，选择器和事件基础，AJAX、FX的用法，以及如何制作jQuery的插件。\n\n这个指南包括了很多代码，你可以copy它们，并试着修改它们，看看产生的效果。\n</p>\n<h2>内容提要</h2>\n\t<ol>\n\t\t<li><a href=\"#setup\">安装</a></li>\n\t\t<li><a href=\"#hello\">Hello jQuery</a></li>\n\t\t<li><a href=\"#find\">Find me:使用选择器和事件</a></li>\n\t\t<li><a href=\"#rate\">Rate me:使用AJAX</a></li>\n\t\t<li><a href=\"#animate\">Animate me(让我生动起来):使用FX</a></li>\n\t\t<li><a href=\"#sort\">Sort me(将我有序化):使用tablesorter插件(表格排序)</a></li>\n\t\t<li><a href=\"#plug\">Plug me:制作您自己的插件</a></li>\n\t\t<li><a href=\"#next\">Next steps(下一步)</a></li>\n\t</ol>\n</div>\n\n<div>\n\t<h2 id=\"setup\">安装</h2>\n\t<p>一开始,我们需要一个jQuery的库,最新的下载可以到<a\n\t\thref=\"http://docs.jquery.com/Downloading_jQuery\">这里</a>找到。这个指南提供一个基本包含实例的包供下载.</p>\n\t<p>下载：<a class=\"download\" href=\"jquery-starterkit.zip\">jQuery Starterkit</a></p>\n\t<p class=\"log\">\n\t\t(译者Keel注:一定要下载这个包，光看文章不实践肯定是不行的。)\n\t</p>\n\t<p class=\"instruction\">下载后解压缩，然后用你最喜欢的文本编辑器打开starterkit.html和custom.js这两个文件。<span class=\"log\">(译者Keel注:这两个就是例子文件,所有的例子都用这两个例子作出,custom.js写jQuery代码,starterkit.html观察效果.建议用editPlus打开) </span></p>\n\n\t<p>现在,我们就已经做好了一切准备来进行这个著名的\"Hello world\"例子.</p>\n\n\t<h4>本章的相关链接:</h4>\n\t<ul>\n\t\t<li><a href=\"jquery-starterkit.zip\">Starterkit</a></li>\n\t\t<li><a href=\"http://docs.jquery.com/Downloading_jQuery\">jQuery Downloads</a></li>\n\t</ul>\n</div>\n\n<div>\n\t<h2 id=\"hello\">Hello jQuery</h2>\n\t<p>在做所有事情之前,我们要让jQuery读取和处理文档的DOM,必须尽可能快地在DOM载入后开始执行事件,所以,我们用一个ready事件作为处理HTML文档的开始.看看我们打开的custom.js这个文件,里面已经准备好了:</p>\n\t<pre>\n$(document).ready(function() {\n\t// do stuff when DOM is ready\n});</pre>\n\n\t<p>放一个简单的alert事件在需要等DOM完成载入,所以我们把任务稍稍变复杂一点:在点击任何一个链接时显示一个alert.</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"a\").click(function() {\n\t\talert(\"Hello world!\");\n\t});\n});</pre>\n\n\t<p>这样在你点击页面的一个链接时都会触发这个\"Hello world\"的提示。</p>\n\t<p class=\"log\">(译者Keel注:请照此代码修改custom.js并保存,然后用浏览器打开starterkit.html观察效果。)</p>\n\t<p>让我们看一下这些修改是什么含义。$(\"a\") 是一个jQuery选择器(selector),在这里，它选择所有的a标签<span class=\"log\">（译者Keel注：即&lt;a&gt;&lt;/a&gt;）</span>，$号是 jQuery “类”(jQuery \"class\")的一个别称，因此$()构造了一个新的jQuery 对象(jQuery object)。函数 click() 是这个jQuery对象的一个方法，它绑定了一个单击事件到所有选中的标签(这里是所有的a标签),并在事件触发时执行了它所提供的alert方法.</p>\n\t<p>这里有一个拟行相似功能的代码:</p>\n\t<pre>\n&lt;a href=\"#\" onclick=\"alert('Hello world')\"&gt;Link&lt;/a&gt;</pre>\n\n\t<p>不同之处很明显,用jQuery不需要在每个a标签上写onclick事件,所以我们拥有了一个整洁的结构文档(HTML)和一个行为文档(JS),达到了将结构与行为分开的目的,就像我们使用CSS追求的一样.</p>\n\t<p>下面我们会更多地了解到选择器与事件.</p>\n\n\t<h4>本章的相关链接:</h4>\n\t<ul>\n\t\t<li><a href=\"http://docs.jquery.com/Core\">jQuery Core</a></li>\n\t\t<li><a href=\"http://docs.jquery.com/Selectors\">jQuery Selectors</a></li>\n\t\t<li><a href=\"http://docs.jquery.com/Events/\">jQuery  Events</a></li>\n\t</ul>\n</div>\n\n<div>\n\t<h2 id=\"find\">Find me:使用选择器和事件</h2>\n\t<p>jQuery提供两种方式来选择html的elements，第一种是用CSS和Xpath选择器联合起来形成一个字符串来传送到jQuery的构造器（如：$(\"div &gt; ul a\")）；第二种是用jQuery对象的几个methods(方法)。这两种方式还可以联合起来混合使用。</p>\n\t<p>为了测试一下这些选择器，我们来试着在我们starterkit.html中选择并修改第一个ordered list.</p>\n\t<p>一开始，我们需要选择这个list本身，这个list有一个ID叫“orderedlist”，通常的javascript写法是document.getElementById(\"orderedlist\").在jQuery中，我们这样做：</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"#orderedlist\").addClass(\"red\");\n});</pre>\n\t<p>这里将starterkit中的一个CSS样式red附加到了orderedlist上<span class=\"log\">(译者Keel注：参考测试包中的css目录下的core.css，其中定义了red样式)</span>。因此，在你刷新了starterkit.html后，你将会看到第一个有序列表(ordered list )背景色变成了红色，而第二个有序列表没有变化.</p>\n\t<p>现在，让我们添加一些新的样式到list的子节点.</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"#orderedlist &gt; li\").addClass(\"blue\");\n});</pre>\n\t<p>这样，所有orderedlist中的li都附加了样式\"blue\"。</p>\n\t<p>现在我们再做个复杂一点的，当把鼠标放在li对象上面和移开时进行样式切换，但只在list的最后一个element上生效。</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"#orderedlist li:last\").hover(function() {\n\t\t$(this).addClass(\"green\");\n\t}, function() {\n\t\t$(this).removeClass(\"green\");\n\t});\n});</pre>\n\t<p>还有大量的类似的<a class=\"doc\" href=\"http://docs.jquery.com/CSS\"\n\t\ttitle=\"Documentation for CSS selectors\">CSS</a>和<a class=\"doc\"\n\t\thref=\"http://jquery.com/docs/Base/Expression/XPath/\" title=\"Documentation for XPath selectors\">XPath</a>例子，更多的例子和列表可以在<a class=\"doc\"\n\t\thref=\"http://docs.jquery.com/Selectors\" title=\"Documentation for base selectors\">这里</a>找到。<span class=\"log\">（译者Keel注：入门看此文，修行在个人，要想在入门之后懂更多，所以这段话的几个链接迟早是要必看的！不会又要翻译吧...^_^!）</span></p>\n\t<p>每一个onXXX事件都有效，如onclick,onchange,onsubmit等，都有jQuery等价表示方法<span class=\"log\">（译者Keel注：jQuery不喜欢onXXX，所以都改成了XXX，去掉了on）</span>。<a class=\"doc\" href=\"http://docs.jquery.com/Events\"\n\t\ttitle=\"Documentation for advanced events\">其他的一些事件</a>，如ready和hover,也提供了相应的方法。</p>\n\t<p>你可以在<a href=\"http://visualjquery.com/\">Visual jQuery</a>找到全部的事件列表，在Events栏目下.</p>\n\t<p>用这些选择器和事件你已经可以做很多的事情了，但这里有一个更强的好东东！</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"#orderedlist\").find(\"li\").each(function(i) {\n\t\t$(this).html( $(this).html() + \" BAM! \" + i );\n\t});\n});</pre>\n\t<p>find() 让你在已经选择的element中作条件查找,因此 $(\"#orderedlist).find(\"li\") 就像 $(\"#orderedlist li\")一样。each()方法迭代了所有的li，并可以在此基础上作更多的处理。 大部分的方法,如addClass(), 都可以用它们自己的 each() 。在这个例子中, html()用来获取每个li的html文本, 追加一些文字，并将之设置为li的html文本。<span class=\"log\">（译者Keel注：从这个例子可以看到.html()方法是获取对象的html代码，而.html('xxx')是设置'xxx'为对象的html代码）</span></p>\n\t<p>另一个经常碰到的任务是在没有被jQuery覆盖的DOM元素上call一些方法，想像一个在你用AJAX方式成功提交后的reset：</p>\n\t<pre>\n$(document).ready(function() {\n\t// use this to reset a single form\n\t$(\"#reset\").click(function() {\n\t\t$(\"form\")[0].reset();\n\t});\n});</pre>\n<p class=\"log\">（译者Keel注：这里作者将form的id也写成了form，源文件有&lt;form id=\"form\"&gt;，这是非常不好的写法，你可以将这个ID改成form1或者testForm，然后用$(\"#form1\")或者$(\"#testForm\")来表示它，再进行测试。）</p>\n\t<p>上面这个代码选择了所有的\"form\"元素，并在其中的第一个上call了一个reset()。如果你有一个以上的form，你可以这样做：</p>\n\t<pre>\n$(document).ready(function() {\n\t// use this to reset several forms at once\n\t$(\"#reset\").click(function() {\n\t\t$(\"form\").each(function() {\n\t\t\tthis.reset();\n\t\t});\n\t});\n});</pre>\n<p class=\"log\">（译者Keel注：请注意一定要亲自将这些代码写在custom.js中并在starterkit.html上测试效果才能有所体会！必要时要观察starterkit.html的html代码）</p>\n\t<p>这样你在点击Reset链接后，就选择了文档中所有的form元素，并对它们都执行了一次reset()。</p>\n\t<p>还有一个你可能要面对的问题是不希望某些特定的元素被选择。jQuery 提供了filter() 和not() 方法来解决这个问题。 filter()以过滤表达式来减少不符合的被选择项, not()则用来取消所有符合过滤表达式的被选择项. 考虑一个无序的list，你想要选择所有的没有ul子元素的li元素。</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"li\").not(\":has(ul)\").css(\"border\", \"1px solid black\");//原文为$(\"li\").not(\"[ul]\").css(\"border\", \"1px solid black\");\n});</pre>\n\t<p>这个代码选择了所有的li元素，然后去除了有ul子元素的li元素。刷新浏览器后，所有的li元素都有了一个边框，只有ul子元素的那个li元素例外。</p>\n\t<p class=\"log\">（译者Keel注：请注意体会方便之极的css()方法，并再次提醒请务必实际测试观察效果，比方说换个CSS样式呢？再加一个CSS样式呢？像这样：$(\"li\").not(\"[ul]\").css(\"border\", \"1px solid black\").css(\"color\",\"red\");）</p>\n\t<p>上面代码中的[expression] 语法是从XPath而来，可以在子元素和属性(elements and attributes)上用作过滤器，比如你可能想选择所有的带有name属性的链接:</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"a[name]\").css(\"background-color\",\"#eee\"); //原文为“$(\"a[@name]\").background(\"#eee\");”在jQuery1.2及以上版本中,@符号应该去除,background方法被css方法取代\n});</pre>\n\t<p>这个代码给所有带有name属性的链接加了一个背景色。<span class=\"log\">（译者Keel注：这个颜色太不明显了，建议写成$(\"a[name]\").css(\"background-color\",\"#eee\");）</span> <span class=\"red\">[注：在jQuery1.2及以上版本中,@符号应该去除,下文中不再说明]</span></p>\n\t<p>更常见的情况是以name来选择链接，你可能需要选择一个有特点href属性的链接，这在不同的浏览器下对href的理解可能会不一致，所以我们的部分匹配(\"*=\")的方式来代替完全匹配(\"=\")：</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"a[href*=/content/gallery]\").click(function() {\n\t\t// do something with all links that point somewhere to /content/gallery\n\t});\n});</pre>\n\t<p>到现在为止，选择器都用来选择子元素或者是过滤元素。另外还有一种情况是选择上一个或者下一个元素，比如一个FAQ的页面，答案首先会隐藏，当问题点击时，答案显示出来，jQuery代码如下：</p>\n\t<pre>\n$(document).ready(function() {\n\t$('#faq').find('dd').hide().end().find('dt').click(function() {\n         var answer = $(this).next();\n         if (answer.is(':visible')) {\n             answer.slideUp();\n         } else {\n             answer.slideDown();\n         }\n     });\n});</pre>\n\t<p>这里我们用了一些链式表达法来减少代码量，而且看上去更直观更容易理解。像'#faq' 只选择了一次，利用end()方法，第一次find()方法会结束(undone)，所以我们可以接着在后面继续find('dt')，而不需要再写$('#faq').find('dt')。</p>\n\t<p>在点击事件中的，我们用 $(this).next() 来找到dt下面紧接的一个dd元素，这让我们可以快速地选择在被点击问题下面的答案。</p>\n\t<p class=\"log\">（译者Keel注：这个例子真是太酷了，FAQ中的答案可以收缩！从利用next()的思路到实现这些效果都有很多地方需要我们消化，注意 if (answer.is(':visible'))用法，注意answer.slideUp();不懂的地方赶紧查我在最开始提到的两个必看API文档）</p>\n\t<p>除了选择同级别的元素外，你也可以选择父级的元素。可能你想在用户鼠标移到文章某段的某个链接时，它的父级元素--也就是文章的这一段突出显示，试试这个：</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"a\").hover(function() {\n\t\t$(this).parents(\"p\").addClass(\"highlight\");\n\t}, function() {\n\t\t$(this).parents(\"p\").removeClass(\"highlight\");\n\t});\n});</pre>\n\t<p>测试效果可以看到，移到文章某段的链接时，它所在的段全用上highlight样式，移走之后又恢复原样。</p>\n\t<span class=\"log\">（译者Keel注：highlight是core.css中定义的样式，你也可以改变它，注意这里有第二个function()这是hover方法的特点，请在API文档中查阅hover，上面也有例子说明）</span>\n\n\t<p>在我们继续之前我们先来看看这一步： jQuery会让代码变得更短从而更容易理解和维护，下面是$(document).ready(callback)的缩写法：</p>\n\t<pre>\n$(function() {\n\t// code to execute when the DOM is ready\n});</pre>\n\t<p>应用到我们的Hello world例子中，可以这样:</p>\n\t<pre>\n$(function() {\n\t$(\"a\").click(function() {\n\t\talert(\"Hello world!\");\n\t});\n});</pre>\n\t<p>现在，我们手上有了这些基础的知识，我们可以更进一步的探索其它方面的东西，就从AJAX开始！</p>\n\n\t<h4>本章的相关链接:</h4>\n\t<ul>\n\t\t<li><a href=\"http://api.jquery.com/\">jQuery API documentation</a></li>\n\t\t<li><a href=\"http://visualjquery.com/\">Visual jQuery - A categorized browsable API documentation</a></li>\n\t\t<li><a href=\"http://jquery.com/docs/Base/Expression/CSS/\">jQuery Expressions: CSS</a></li>\n\t\t<li><a href=\"http://jquery.com/docs/Base/Expression/XPath/\">jQuery Expressions: XPath</a></li>\n\t\t<li><a href=\"http://jquery.com/docs/Base/Expression/Custom/\">jQuery Expressions: Custom</a></li>\n\t\t<li><a href=\"http://jquery.com/docs/EventModule/\">jQuery Special Events</a></li>\n\t\t<li><a href=\"http://jquery.com/docs/Base/Traverse/\">jQuery DOM Traversing</a></li>\n\t</ul>\n</div>\n\n<div>\n\t<h2 id=\"rate\">Rate me:使用AJAX</h2>\n\t<p>在这一部分我们写了一个小小的AJAX应用，它能够rate一些东西<span class=\"log\">（译Keel注：就是对某些东西投票）</span>，就像在youtube.com上面看到的一样。</p>\n\t<p>首先我们需要一些服务器端代码，这个例子中用到了一个PHP文件，读取rating参数然后返回rating总数和平均数。看一下<a\n\t\thref=\"rate.phps\">rate.php</a>代码.</p>\n\t<p>虽然这些例子也可以不使用AJAX来实现，但显示我们不会那么做，我们用jQuery生成一个DIV容器，ID是\"rating\".</p>\n\t<pre>\n$(document).ready(function() {\n\t// generate markup\n\tvar ratingMarkup = [\"Please rate: \"];\n\tfor(var i=1; i &lt;= 5; i++) {\n\t\tratingMarkup[ratingMarkup.length] = \"&lt;a href='#'&gt;\" + i + \"&lt;/a&gt;&nbsp;\";\n\t}\n\t// add markup to container and applier click handlers to anchors\n\t$(\"#rating\").append( ratingMarkup.join('') ).find(\"a\").click(function(e) {\n\t\te.preventDefault();\n\t\t// send requests\n\t\t$.post(\"rate.php\", {rating: $(this).html()}, function(xml) {\n\t\t\t// format result\n\t\t\tvar result = [\n\t\t\t\t\"Thanks for rating, current average: \",\n\t\t\t\t$(\"average\", xml).text(),\n\t\t\t\t\", number of votes: \",\n\t\t\t\t$(\"count\", xml).text()\n\t\t\t];\n\t\t\t// output result\n\t\t\t$(\"#rating\").html(result.join(''));\n\t\t} );\n\t});\n});</pre>\n\t<p>这段代码生成了5个链接，并将它们追加到id为\"rating\"容器中，当其中一个链接被点击时，该链接标明的分数就会以rating参数形式发送到rate.php，然后，结果将以XML形式会从服务器端传回来，添加到容器中，替代这些链接。</p>\n\t<p>如果你没有一个安装过PHP的webserver，你可以看看这个<a href=\"example-rateme.html\">在线的例子</a>.</p>\n\t<p>不使用javascript实现的例子可以访问 <a\n\t\thref=\"http://www.softonic.de/ie/51494\">softonic.de</a> 点击 \"Kurz bewerten!\"</p>\n\t<p>更多的AJAX方法可以从<a class=\"doc\"\n\t\thref=\"http://jquery.com/docs/AJAXModule/\" title=\"Documentation for AJAX methods\">这里</a> 找到，或者看看<a href=\"http://visualjquery.com/\">API文档</a> 下面的AJAX filed under AJAX.</p>\n\n\t<p class=\"log\">（译者Keel注：这个在线实例从国内访问还是比较慢的，点击后要等一会儿才能看到结果，可以考虑对它进行修改，比如加上loading，投票后加上再投票的返回链接等。此外，这个例子中还是有很多需要进一步消化的地方，看不懂的地方请参考API文档。）</p>\n\n\n\t<p>一个在使用AJAX载入内容时经常发生的问题是：当载入一个事件句柄到一个HTML文档时，还需要在载入内容上应用这些事件，你不得不在内容加载完成后应用这些事件句柄，为了防止代码重复执行，你可能用到如下一个function:</p>\n\t<pre>\n// lets use the shortcut\n$(function() {\n\tvar addClickHandlers = function() {\n\t\t$(\"a.clickMeToLoadContent\").click(function() {\n\t\t\t$(\"#target\").load(this.href, addClickHandlers);\n\t\t});\n\t};\n\taddClickHandlers();\n});</pre>\n\t<p>现在，addClickHandlers只在DOM载入完成后执行一次，这是在用户每次点击具有clickMeToLoadContent 这个样式的链接并且内容加载完成后.</p>\n\t<p>请注意addClickHandlers函数是作为一个局部变量定义的，而不是全局变量(如：function addClickHandlers() {...})，这样做是为了防止与其他的全局变量或者函数相冲突.</p>\n  <p>另一个常见的问题是关于回调(callback)的参数。你可以通过一个额外的参数指定回调的方法，简单的办法是将这个回调方法包含在一个其它的function中:</p>\n  <pre>\n// get some data\nvar foobar = ...;\n// specify handler, it needs data as a paramter\nvar handler = function(data) {\n  ...\n};\n// add click handler and pass foobar!\n$('a').click( function(event) { handler(foobar); } );\n\n// if you need the context of the original handler, use apply:\n$('a').click( function(event) { handler.apply(this, [foobar]); } );</pre>\n\t<p>用到简单的AJAX后，我们可以认为已经非常之“web2.0”了，但是到现在为止，我们还缺少一些酷炫的效果。下一节将会谈到这些效果.</p>\n\n\t<h4>本章的相关链接:</h4>\n\t<ul>\n\t\t<li><a href=\"http://jquery.com/docs/AJAXModule/\">jQuery AJAX Module</a></li>\n\t\t<li><a href=\"http://api.jquery.com/\">jQuery API: Contains description and examples for append and all other jQuery methods</a></li>\n\t\t<li><a href=\"http://jquery.com/demo/thickbox/\">ThickBox: A jQuery plugin that uses jQuery to enhance the famous lightbox</a></li>\n\t</ul>\n</div>\n\n\n<div>\n\t<h2 id=\"animate\">Animate me(让我生动起来):使用FX</h2>\n\t<p>一些动态的效果可以使用 <code>show()</code> 和 <code>hide()</code>来表现:</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"a\").toggle(function() {\n\t\t$(\".stuff\").hide('slow');\n\t}, function() {\n\t\t$(\".stuff\").show('fast');\n\t});\n});</pre>\n\t<p>你可以与 <code>animate()</code>联合起来创建一些效果,如一个带渐显的滑动效果:</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"a\").toggle(function() {\n\t\t$(\".stuff\").animate({\n\t\t\theight: 'hide',\n\t\t\topacity: 'hide'\n\t\t}, 'slow');\n\t}, function() {\n\t\t$(\".stuff\").animate({\n\t\t\theight: 'show',\n\t\t\topacity: 'show'\n\t\t}, 'slow');\n\t});\n});</pre>\n\t<p>很多不错的效果可以访问<a href=\"http://interface.eyecon.ro/\">interface plugin collection</a>. 这个站点提供了很多demos和文档</p>\n\t<p>这些效果插件是位于jQuery插件列表的前面的，当然也有很多其他的插件，比如我们下一章讲到的表格排序插件。</p>\n\n\t<h4>本章的相关链接:</h4>\n\t<ul>\n\t\t<li><a href=\"http://jquery.com/docs/FxModule/\">jQuery FX Module</a></li>\n\t\t<li><a href=\"http://interface.eyecon.ro/\">Interface plugin</a></li>\n\t</ul>\n</div>\n\n\n\n<div>\n\t<h2 id=\"sort\">Sort me(将我有序化):使用tablesorter插件(表格排序)</h2>\n\t<p>这个表格排序插件能让我们在客户端按某一列进行排序，引入jQuery和这个插件的js文件，然后告诉插件你想要哪个表格拥有排序功能。</p>\n\t<p>要测试这个例子，先在starterkit.html中加上像下面这一行的代码：</p>\n<pre>\n&lt;script src=\"lib/jquery.tablesorter.js\" type=\"text/javascript\"&gt;&lt;/script&gt;</pre>\n\t<p>然后可以这样调用不着:</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"#large\").tableSorter();\n});</pre>\n\t<p>现在点击表格的第一行head区域，你可以看到排序的效果，再次点击会按倒过来的顺序进行排列。</p>\n\t<p>这个表格还可以加一些突出显示的效果，我们可以做这样一个隔行背景色（斑马线）效果:</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"#large\").tableSorter({\n\t\tstripingRowClass: ['odd','even'],\t// Class names for striping supplyed as a array.\n\t\tstripRowsOnStartUp: true\t\t// Strip rows on tableSorter init.\n\t});\n});</pre>\n\t<p>关于这个插件的更多例子和文档可以在 <a\n\t\thref=\"http://motherrussia.polyester.se/jquery-plugins/tablesorter/\">tablesorter首页</a>找到.</p>\n\t<p>几乎所有的特件都是这样用的:先include插件的js文件,然后在某些元素上使用插件定义的方法,当然也有一些参数选项是可以配置的</p>\n\t<p>经常更新的插件列表可以从jQuery官方站 <a href=\"http://jquery.com/plugins/\" title=\"Plugins for jQuery\">on the jQuery site</a>找到.</p>\n\t<p>当你更经常地使用jQuery时,你会发现将你自己的代码打包成插件是很有用处的,它能方便地让你的公司或者其他人进行重用.下一章我们将谈到如何构建一个自己的插件.</p>\n\n\t<h4>本章的相关链接:</h4>\n\t<ul>\n\t\t<li><a href=\"http://jquery.com/plugins/\">Plugins for jQuery</a></li>\n\t\t<li><a href=\"http://motherrussia.polyester.se/jquery-plugins/tablesorter/\">Tablesorter Plugin</a></li>\n\t</ul>\n</div>\n\n\n<div>\n\t<h2 id=\"plug\">Plug me:制作自己的插件</h2>\n\t<p>写一个自己的jQuery插件是非常容易的,如果你按照下面的原则来做,可以让其他人也容易地结合使用你的插件.</p>\n\t<ol>\n\t\t<li>为你的插件取一个名字,在这个例子里面我们叫它\"foobar\".</li>\n\t\t<li>创建一个像这样的文件:jquery.[yourpluginname].js,比如我们创建一个jquery.foobar.js</li>\n\t\t<li>创建一个或更多的插件方法,使用继承jQuery对象的方式,如:\n\t\t\t<pre>\njQuery.fn.foobar = function() {\n\t// do something\n};</pre>\n\t\t</li>\n\t\t<li>可选的:创建一个用于帮助说明的函数,如:\n\t\t\t<pre>\njQuery.fooBar = {\n\theight: 5,\n\tcalculateBar = function() { ... },\n\tcheckDependencies = function() { ... }\n};</pre>\n\t\t\t<p>你现在可以在你的插件中使用这些帮助函数了:</p>\n\t\t\t<pre>\njQuery.fn.foobar = function() {\n\t// do something\n\tjQuery.foobar.checkDependencies(value);\n\t// do something else\n};</pre>\n\t\t</li>\n\t\t<li>可选的l:创建一个默认的初始参数配置,这些配置也可以由用户自行设定,如:\n\t\t\t<pre>\njQuery.fn.foobar = function(options) {\n\tvar settings = {\n\t\tvalue: 5,\n\t\tname: \"pete\",\n\t\tbar: 655\n\t};\n\tif(options) {\n\t\tjQuery.extend(settings, options);\n\t}\n};</pre>\n\t\t<p>现在可以无需做任何配置地使用插件了,默认的参数在此时生效:</p>\n\t\t\t<pre>\n$(\"...\").foobar();</pre>\n\t\t<p>或者加入这些参数定义:</p>\n\t\t\t<pre>\n$(\"...\").foobar({\n\tvalue: 123,\n\tbar: 9\n});</pre>\n\t\t</li>\n\t</ol>\n\t<p>如果你release你的插件, 你还应该提供一些例子和文档,大部分的插件都具备这些良好的参考文档.</p>\n\t<p>现在你应该有了写一个插件的基础,让我们试着用这些知识写一个自己的插件.</p>\n\t<p>很多人试着控制所有的radio或者checkbox是否被选中,比如:</p>\n<pre>\n$(\"input[type='checkbox']\").each(function() {\n\tthis.checked = true;\n\t// or, to uncheck\n\tthis.checked = false;\n\t// or, to toggle\n\tthis.checked = !this.checked;\n});</pre>\n\t<div class=\"red\">注：在jQuery1.2及以上版本中，选择所有checkbox应该使用 input:checkbox , 因此以上代码第一行可写为: <br />  $('input:checkbox').each(function() {</div>\n\t<p>无论何时候，当你的代码出现each时，你应该重写上面的代码来构造一个插件,很直接地:</p>\n\t<pre>\n$.fn.check = function() {\n\treturn this.each(function() {\n\t\tthis.checked = true;\n\t});\n};</pre>\n\t<p>这个插件现在可以这样用:</p>\n\t<pre>$('input:checkbox').check();\n</pre> <div class=\"red\">注：在jQuery1.2及以上版本中，选择所有checkbox应该使用 input:checkbox 原文为：$(\"input[type='checkbox']\").check();</div>\n\t<p>现在你应该还可以写出uncheck()和toggleCheck()了.但是先停一下,让我们的插件接收一些参数.</p>\n\t<pre>\n$.fn.check = function(mode) {\n\tvar mode = mode || 'on'; // if mode is undefined, use 'on' as default\n\treturn this.each(function() {\n\t\tswitch(mode) {\n\t\tcase 'on':\n\t\t\tthis.checked = true;\n\t\t\tbreak;\n\t\tcase 'off':\n\t\t\tthis.checked = false;\n\t\t\tbreak;\n\t\tcase 'toggle':\n\t\t\tthis.checked = !this.checked;\n\t\t\tbreak;\n\t\t}\n\t});\n};</pre>\n\t<p>这里我们设置了默认的参数,所以将\"on\"参数省略也是可以的,当然也可以加上\"on\",\"off\", 或 \"toggle\",如:</p>\n<pre>\n$(\"input[type='checkbox']\").check();\n$(\"input[type='checkbox']\").check('on');\n$(\"input[type='checkbox']\").check('off');\n$(\"input[type='checkbox']\").check('toggle');</pre>\n\t<p>如果有多于一个的参数设置会稍稍有点复杂,在使用时如果只想设置第二个参数,则要在第一个参数位置写入null.</p>\n\t<p>从上一章的tablesorter插件用法我们可以看到,既可以省略所有参数来使用或者通过一个 key/value 对来重新设置每个参数.</p>\n\t<p>作为一个练习,你可以试着将 <a href=\"#rate\">第四章</a> 的功能重写为一个插件.这个插件的骨架应该是像这样的:</p>\n\t<pre>\n$.fn.rateMe = function(options) {\n\tvar container = this; // instead of selecting a static container with $(\"#rating\"), we now use the jQuery context\n\n\tvar settings = {\n\t\turl: \"rate.php\"\n\t\t// put more defaults here\n\t\t// remember to put a comma (\",\") after each pair, but not after the last one!\n\t};\n\n\tif(options) { // check if options are present before extending the settings\n\t\t$.extend(settings, options);\n\t}\n\n\t// ...\n\t// rest of the code\n\t// ...\n\n\treturn this; // if possible, return \"this\" to not break the chain\n});</pre>\n</div>\n\n<div>\n\t<h2 id=\"next\">Next steps(下一步)</h2>\n\t<p>如果你想做更好的javascript开发,建议你使用一个叫 <a href=\"http://getfirebug.com/\">FireBug</a>的firefox插件. 它提供了断点调试(比alert强多了)、观察DOM变化等很多漂亮的功能</p>\n\t<p>如果你还有未解决的问题，或者新的想法与建议，你可以使用jQuery的邮件列表 <a href=\"http://jquery.com/discuss\">jQuery mailing\n\tlist</a>.</p>\n\t<p>关于这个指南的任何事情，你可以写<a href=\"mailto:enchos[at]gmx[dot]net\">mail</a>给作者或者发表评论在他的日志：<a href=\"http://bassistance.de/index.php/2006/09/12/jquery-getting-started-guide/\">blog</a>.</p>\n\n\t<p class=\"log\">关于这个指南的翻译任何事情，你可以写<a href=\"mailto:keel.sike[at]gmail.com\">mail</a>给我.或者在 <a href=\"http://cc9c.blogspot.com/\">BLOG</a>中留言.</p>\n</div>\n\n\n<div>\n\t<h3>还有什么...</h3>\n\t<p>大大感谢John Resig创造了这么好的library! 感谢jQuery community 为John提供了如此多的咖啡和其他的一切!</p>\n</div>\n\n<h4><a href=\"http://bassistance.de\">&copy; 2006, Jörn Zaefferer</a> - last update: 2006-09-12</h4>\n<h4>中文版翻译:<a href=\"http://www.k99k.com/\">Keel</a> 上次更新:2006-12-13   --  最后更新: 2009-3-10<!-- 2006-12-13 -->\n<a href=\"http://www.k99k.com\">访问本站首页</a></h4>\n<div id=\"ad\">\n<script type=\"text/javascript\"><!--\ngoogle_ad_client = \"pub-9953772310597878\";\n/* jquery-728x90, 创建于 10-4-6 */\ngoogle_ad_slot = \"0735632391\";\ngoogle_ad_width = 728;\ngoogle_ad_height = 90;\n//-->\n</script>\n<script type=\"text/javascript\"\nsrc=\"http://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n\n</div>\n<script type=\"text/javascript\">\nvar gaJsHost = ((\"https:\" == document.location.protocol) ? \"https://ssl.\" : \"http://www.\");\ndocument.write(unescape(\"%3Cscript src='\" + gaJsHost + \"google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E\"));\n</script>\n<script type=\"text/javascript\">\ntry {\nvar pageTracker = _gat._getTracker(\"UA-333331-1\");\npageTracker._trackPageview();\n} catch(err) {}</script>\n\n\n</body>\n</html>\n","source":"jQuery_getting_started.html","raw":"<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n<title>jQuery中文入门教程_译自Getting Started with jQuery</title>\n<meta name=\"Author\" content=\"Keel\" />\n<meta name=\"Keywords\" content=\"jQuery\" />\n<meta name=\"Description\" content=\"jQuery 中文入门指南，翻译加实例，jQuery的起点教程，译自Getting Started with jQuery\" />\n<style type=\"text/css\">\n<!--\npre {\n\twhite-space: pre;\n\tbackground-color: #eee;\n\twidth: 90%;\n\tborder: 1px dotted black;\n\tdisplay: block;\n\tpadding: 7px;\n}\nh2 {\n\tmargin-top: 2em;\n}\nh4 { margin-bottom: 0em; }\n.log {\n\tcolor:green;\n}\n.red{color:red;font-weight: bold;font-size: 9pt;}\n#ad{position:absolute;left:5px;top:5px;width:728px; height:90px; }\n#org{padding-top:90px;position:relative ;top:1px:width:1px; }\n-->\n</style>\n</head>\n<body>\n<h1>jQuery中文入门指南，翻译加实例，jQuery的起点教程</h1>\n<div>\n\t<h3>中文版译者：<a href=\"http://www.k99k.com/\">Keel</a></h3>\n\t<p>此文以实例为基础一步步说明了jQuery的工作方式。现以中文翻译（添加我的补充说明）如下。如有相关意见或建议请 <a href=\"mailto:keel.sike(at)gmail.com\">EMAIL</a> 告知。或者在 <a href=\"http://cc9c.blogspot.com/\">BLOG</a>中留言。</p>\n\t<p>英文原版：<a href=\"http://docs.jquery.com/Tutorials:Getting_Started_with_jQuery\">http://docs.jquery.com/Tutorials:Getting_Started_with_jQuery<!-- http://jquery.bassistance.de/jquery-getting-started.html --></a> ，感谢原文作者 <a href=\"http://bassistance.de/\">Jörn Zaefferer</a> <strong>本文发布已征求原作者同意。</strong> </p>\n\t<p class=\"red\"> 说明:在本教程发布之后，得到了几个网友的指正，对部分内容作了修正，但在jQuery版本不断更新的情况下，教程中的某些内容已经过时（尤其是1.3以上版本），在忠于原文的基础上，我将这部分内容加以标红的补充说明，希望更多的前端开发者能对此文提出宝贵意见，谢谢！ --2009-3-10</p>\n\t<p>另外我认为在学习过程中,有两个API文档你要打开随时查看:</p>\n\t<ul>\n\t<li><a href=\"http://api.jquery.com/\" target=\"_blank\">http://api.jquery.com/</a> <span class=\"red\">[注：已更新为jquery新地址]</span></li>\n\t<li><a href=\"http://visualjquery.com/\" target=\"_blank\">http://visualjquery.com/</a></li>\n\t</ul>\n如果想了解更多jQuery及插件信息，可<a href=\"http://www.k99k.com\">访问本站首页</a>.</div>\n<div id=\"org\">\n<h4>以下部分为原文翻译:</h4>\n<hr />\n<div>\n<h2>jQuery入门指南教程</h2>\n<p>\n这个指南是一个对jQuery库的说明，要求读者了解HTML(DOM)和CSS的一些常识。它包括了一个简单的Hello World的例子，选择器和事件基础，AJAX、FX的用法，以及如何制作jQuery的插件。\n\n这个指南包括了很多代码，你可以copy它们，并试着修改它们，看看产生的效果。\n</p>\n<h2>内容提要</h2>\n\t<ol>\n\t\t<li><a href=\"#setup\">安装</a></li>\n\t\t<li><a href=\"#hello\">Hello jQuery</a></li>\n\t\t<li><a href=\"#find\">Find me:使用选择器和事件</a></li>\n\t\t<li><a href=\"#rate\">Rate me:使用AJAX</a></li>\n\t\t<li><a href=\"#animate\">Animate me(让我生动起来):使用FX</a></li>\n\t\t<li><a href=\"#sort\">Sort me(将我有序化):使用tablesorter插件(表格排序)</a></li>\n\t\t<li><a href=\"#plug\">Plug me:制作您自己的插件</a></li>\n\t\t<li><a href=\"#next\">Next steps(下一步)</a></li>\n\t</ol>\n</div>\n\n<div>\n\t<h2 id=\"setup\">安装</h2>\n\t<p>一开始,我们需要一个jQuery的库,最新的下载可以到<a\n\t\thref=\"http://docs.jquery.com/Downloading_jQuery\">这里</a>找到。这个指南提供一个基本包含实例的包供下载.</p>\n\t<p>下载：<a class=\"download\" href=\"jquery-starterkit.zip\">jQuery Starterkit</a></p>\n\t<p class=\"log\">\n\t\t(译者Keel注:一定要下载这个包，光看文章不实践肯定是不行的。)\n\t</p>\n\t<p class=\"instruction\">下载后解压缩，然后用你最喜欢的文本编辑器打开starterkit.html和custom.js这两个文件。<span class=\"log\">(译者Keel注:这两个就是例子文件,所有的例子都用这两个例子作出,custom.js写jQuery代码,starterkit.html观察效果.建议用editPlus打开) </span></p>\n\n\t<p>现在,我们就已经做好了一切准备来进行这个著名的\"Hello world\"例子.</p>\n\n\t<h4>本章的相关链接:</h4>\n\t<ul>\n\t\t<li><a href=\"jquery-starterkit.zip\">Starterkit</a></li>\n\t\t<li><a href=\"http://docs.jquery.com/Downloading_jQuery\">jQuery Downloads</a></li>\n\t</ul>\n</div>\n\n<div>\n\t<h2 id=\"hello\">Hello jQuery</h2>\n\t<p>在做所有事情之前,我们要让jQuery读取和处理文档的DOM,必须尽可能快地在DOM载入后开始执行事件,所以,我们用一个ready事件作为处理HTML文档的开始.看看我们打开的custom.js这个文件,里面已经准备好了:</p>\n\t<pre>\n$(document).ready(function() {\n\t// do stuff when DOM is ready\n});</pre>\n\n\t<p>放一个简单的alert事件在需要等DOM完成载入,所以我们把任务稍稍变复杂一点:在点击任何一个链接时显示一个alert.</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"a\").click(function() {\n\t\talert(\"Hello world!\");\n\t});\n});</pre>\n\n\t<p>这样在你点击页面的一个链接时都会触发这个\"Hello world\"的提示。</p>\n\t<p class=\"log\">(译者Keel注:请照此代码修改custom.js并保存,然后用浏览器打开starterkit.html观察效果。)</p>\n\t<p>让我们看一下这些修改是什么含义。$(\"a\") 是一个jQuery选择器(selector),在这里，它选择所有的a标签<span class=\"log\">（译者Keel注：即&lt;a&gt;&lt;/a&gt;）</span>，$号是 jQuery “类”(jQuery \"class\")的一个别称，因此$()构造了一个新的jQuery 对象(jQuery object)。函数 click() 是这个jQuery对象的一个方法，它绑定了一个单击事件到所有选中的标签(这里是所有的a标签),并在事件触发时执行了它所提供的alert方法.</p>\n\t<p>这里有一个拟行相似功能的代码:</p>\n\t<pre>\n&lt;a href=\"#\" onclick=\"alert('Hello world')\"&gt;Link&lt;/a&gt;</pre>\n\n\t<p>不同之处很明显,用jQuery不需要在每个a标签上写onclick事件,所以我们拥有了一个整洁的结构文档(HTML)和一个行为文档(JS),达到了将结构与行为分开的目的,就像我们使用CSS追求的一样.</p>\n\t<p>下面我们会更多地了解到选择器与事件.</p>\n\n\t<h4>本章的相关链接:</h4>\n\t<ul>\n\t\t<li><a href=\"http://docs.jquery.com/Core\">jQuery Core</a></li>\n\t\t<li><a href=\"http://docs.jquery.com/Selectors\">jQuery Selectors</a></li>\n\t\t<li><a href=\"http://docs.jquery.com/Events/\">jQuery  Events</a></li>\n\t</ul>\n</div>\n\n<div>\n\t<h2 id=\"find\">Find me:使用选择器和事件</h2>\n\t<p>jQuery提供两种方式来选择html的elements，第一种是用CSS和Xpath选择器联合起来形成一个字符串来传送到jQuery的构造器（如：$(\"div &gt; ul a\")）；第二种是用jQuery对象的几个methods(方法)。这两种方式还可以联合起来混合使用。</p>\n\t<p>为了测试一下这些选择器，我们来试着在我们starterkit.html中选择并修改第一个ordered list.</p>\n\t<p>一开始，我们需要选择这个list本身，这个list有一个ID叫“orderedlist”，通常的javascript写法是document.getElementById(\"orderedlist\").在jQuery中，我们这样做：</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"#orderedlist\").addClass(\"red\");\n});</pre>\n\t<p>这里将starterkit中的一个CSS样式red附加到了orderedlist上<span class=\"log\">(译者Keel注：参考测试包中的css目录下的core.css，其中定义了red样式)</span>。因此，在你刷新了starterkit.html后，你将会看到第一个有序列表(ordered list )背景色变成了红色，而第二个有序列表没有变化.</p>\n\t<p>现在，让我们添加一些新的样式到list的子节点.</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"#orderedlist &gt; li\").addClass(\"blue\");\n});</pre>\n\t<p>这样，所有orderedlist中的li都附加了样式\"blue\"。</p>\n\t<p>现在我们再做个复杂一点的，当把鼠标放在li对象上面和移开时进行样式切换，但只在list的最后一个element上生效。</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"#orderedlist li:last\").hover(function() {\n\t\t$(this).addClass(\"green\");\n\t}, function() {\n\t\t$(this).removeClass(\"green\");\n\t});\n});</pre>\n\t<p>还有大量的类似的<a class=\"doc\" href=\"http://docs.jquery.com/CSS\"\n\t\ttitle=\"Documentation for CSS selectors\">CSS</a>和<a class=\"doc\"\n\t\thref=\"http://jquery.com/docs/Base/Expression/XPath/\" title=\"Documentation for XPath selectors\">XPath</a>例子，更多的例子和列表可以在<a class=\"doc\"\n\t\thref=\"http://docs.jquery.com/Selectors\" title=\"Documentation for base selectors\">这里</a>找到。<span class=\"log\">（译者Keel注：入门看此文，修行在个人，要想在入门之后懂更多，所以这段话的几个链接迟早是要必看的！不会又要翻译吧...^_^!）</span></p>\n\t<p>每一个onXXX事件都有效，如onclick,onchange,onsubmit等，都有jQuery等价表示方法<span class=\"log\">（译者Keel注：jQuery不喜欢onXXX，所以都改成了XXX，去掉了on）</span>。<a class=\"doc\" href=\"http://docs.jquery.com/Events\"\n\t\ttitle=\"Documentation for advanced events\">其他的一些事件</a>，如ready和hover,也提供了相应的方法。</p>\n\t<p>你可以在<a href=\"http://visualjquery.com/\">Visual jQuery</a>找到全部的事件列表，在Events栏目下.</p>\n\t<p>用这些选择器和事件你已经可以做很多的事情了，但这里有一个更强的好东东！</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"#orderedlist\").find(\"li\").each(function(i) {\n\t\t$(this).html( $(this).html() + \" BAM! \" + i );\n\t});\n});</pre>\n\t<p>find() 让你在已经选择的element中作条件查找,因此 $(\"#orderedlist).find(\"li\") 就像 $(\"#orderedlist li\")一样。each()方法迭代了所有的li，并可以在此基础上作更多的处理。 大部分的方法,如addClass(), 都可以用它们自己的 each() 。在这个例子中, html()用来获取每个li的html文本, 追加一些文字，并将之设置为li的html文本。<span class=\"log\">（译者Keel注：从这个例子可以看到.html()方法是获取对象的html代码，而.html('xxx')是设置'xxx'为对象的html代码）</span></p>\n\t<p>另一个经常碰到的任务是在没有被jQuery覆盖的DOM元素上call一些方法，想像一个在你用AJAX方式成功提交后的reset：</p>\n\t<pre>\n$(document).ready(function() {\n\t// use this to reset a single form\n\t$(\"#reset\").click(function() {\n\t\t$(\"form\")[0].reset();\n\t});\n});</pre>\n<p class=\"log\">（译者Keel注：这里作者将form的id也写成了form，源文件有&lt;form id=\"form\"&gt;，这是非常不好的写法，你可以将这个ID改成form1或者testForm，然后用$(\"#form1\")或者$(\"#testForm\")来表示它，再进行测试。）</p>\n\t<p>上面这个代码选择了所有的\"form\"元素，并在其中的第一个上call了一个reset()。如果你有一个以上的form，你可以这样做：</p>\n\t<pre>\n$(document).ready(function() {\n\t// use this to reset several forms at once\n\t$(\"#reset\").click(function() {\n\t\t$(\"form\").each(function() {\n\t\t\tthis.reset();\n\t\t});\n\t});\n});</pre>\n<p class=\"log\">（译者Keel注：请注意一定要亲自将这些代码写在custom.js中并在starterkit.html上测试效果才能有所体会！必要时要观察starterkit.html的html代码）</p>\n\t<p>这样你在点击Reset链接后，就选择了文档中所有的form元素，并对它们都执行了一次reset()。</p>\n\t<p>还有一个你可能要面对的问题是不希望某些特定的元素被选择。jQuery 提供了filter() 和not() 方法来解决这个问题。 filter()以过滤表达式来减少不符合的被选择项, not()则用来取消所有符合过滤表达式的被选择项. 考虑一个无序的list，你想要选择所有的没有ul子元素的li元素。</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"li\").not(\":has(ul)\").css(\"border\", \"1px solid black\");//原文为$(\"li\").not(\"[ul]\").css(\"border\", \"1px solid black\");\n});</pre>\n\t<p>这个代码选择了所有的li元素，然后去除了有ul子元素的li元素。刷新浏览器后，所有的li元素都有了一个边框，只有ul子元素的那个li元素例外。</p>\n\t<p class=\"log\">（译者Keel注：请注意体会方便之极的css()方法，并再次提醒请务必实际测试观察效果，比方说换个CSS样式呢？再加一个CSS样式呢？像这样：$(\"li\").not(\"[ul]\").css(\"border\", \"1px solid black\").css(\"color\",\"red\");）</p>\n\t<p>上面代码中的[expression] 语法是从XPath而来，可以在子元素和属性(elements and attributes)上用作过滤器，比如你可能想选择所有的带有name属性的链接:</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"a[name]\").css(\"background-color\",\"#eee\"); //原文为“$(\"a[@name]\").background(\"#eee\");”在jQuery1.2及以上版本中,@符号应该去除,background方法被css方法取代\n});</pre>\n\t<p>这个代码给所有带有name属性的链接加了一个背景色。<span class=\"log\">（译者Keel注：这个颜色太不明显了，建议写成$(\"a[name]\").css(\"background-color\",\"#eee\");）</span> <span class=\"red\">[注：在jQuery1.2及以上版本中,@符号应该去除,下文中不再说明]</span></p>\n\t<p>更常见的情况是以name来选择链接，你可能需要选择一个有特点href属性的链接，这在不同的浏览器下对href的理解可能会不一致，所以我们的部分匹配(\"*=\")的方式来代替完全匹配(\"=\")：</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"a[href*=/content/gallery]\").click(function() {\n\t\t// do something with all links that point somewhere to /content/gallery\n\t});\n});</pre>\n\t<p>到现在为止，选择器都用来选择子元素或者是过滤元素。另外还有一种情况是选择上一个或者下一个元素，比如一个FAQ的页面，答案首先会隐藏，当问题点击时，答案显示出来，jQuery代码如下：</p>\n\t<pre>\n$(document).ready(function() {\n\t$('#faq').find('dd').hide().end().find('dt').click(function() {\n         var answer = $(this).next();\n         if (answer.is(':visible')) {\n             answer.slideUp();\n         } else {\n             answer.slideDown();\n         }\n     });\n});</pre>\n\t<p>这里我们用了一些链式表达法来减少代码量，而且看上去更直观更容易理解。像'#faq' 只选择了一次，利用end()方法，第一次find()方法会结束(undone)，所以我们可以接着在后面继续find('dt')，而不需要再写$('#faq').find('dt')。</p>\n\t<p>在点击事件中的，我们用 $(this).next() 来找到dt下面紧接的一个dd元素，这让我们可以快速地选择在被点击问题下面的答案。</p>\n\t<p class=\"log\">（译者Keel注：这个例子真是太酷了，FAQ中的答案可以收缩！从利用next()的思路到实现这些效果都有很多地方需要我们消化，注意 if (answer.is(':visible'))用法，注意answer.slideUp();不懂的地方赶紧查我在最开始提到的两个必看API文档）</p>\n\t<p>除了选择同级别的元素外，你也可以选择父级的元素。可能你想在用户鼠标移到文章某段的某个链接时，它的父级元素--也就是文章的这一段突出显示，试试这个：</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"a\").hover(function() {\n\t\t$(this).parents(\"p\").addClass(\"highlight\");\n\t}, function() {\n\t\t$(this).parents(\"p\").removeClass(\"highlight\");\n\t});\n});</pre>\n\t<p>测试效果可以看到，移到文章某段的链接时，它所在的段全用上highlight样式，移走之后又恢复原样。</p>\n\t<span class=\"log\">（译者Keel注：highlight是core.css中定义的样式，你也可以改变它，注意这里有第二个function()这是hover方法的特点，请在API文档中查阅hover，上面也有例子说明）</span>\n\n\t<p>在我们继续之前我们先来看看这一步： jQuery会让代码变得更短从而更容易理解和维护，下面是$(document).ready(callback)的缩写法：</p>\n\t<pre>\n$(function() {\n\t// code to execute when the DOM is ready\n});</pre>\n\t<p>应用到我们的Hello world例子中，可以这样:</p>\n\t<pre>\n$(function() {\n\t$(\"a\").click(function() {\n\t\talert(\"Hello world!\");\n\t});\n});</pre>\n\t<p>现在，我们手上有了这些基础的知识，我们可以更进一步的探索其它方面的东西，就从AJAX开始！</p>\n\n\t<h4>本章的相关链接:</h4>\n\t<ul>\n\t\t<li><a href=\"http://api.jquery.com/\">jQuery API documentation</a></li>\n\t\t<li><a href=\"http://visualjquery.com/\">Visual jQuery - A categorized browsable API documentation</a></li>\n\t\t<li><a href=\"http://jquery.com/docs/Base/Expression/CSS/\">jQuery Expressions: CSS</a></li>\n\t\t<li><a href=\"http://jquery.com/docs/Base/Expression/XPath/\">jQuery Expressions: XPath</a></li>\n\t\t<li><a href=\"http://jquery.com/docs/Base/Expression/Custom/\">jQuery Expressions: Custom</a></li>\n\t\t<li><a href=\"http://jquery.com/docs/EventModule/\">jQuery Special Events</a></li>\n\t\t<li><a href=\"http://jquery.com/docs/Base/Traverse/\">jQuery DOM Traversing</a></li>\n\t</ul>\n</div>\n\n<div>\n\t<h2 id=\"rate\">Rate me:使用AJAX</h2>\n\t<p>在这一部分我们写了一个小小的AJAX应用，它能够rate一些东西<span class=\"log\">（译Keel注：就是对某些东西投票）</span>，就像在youtube.com上面看到的一样。</p>\n\t<p>首先我们需要一些服务器端代码，这个例子中用到了一个PHP文件，读取rating参数然后返回rating总数和平均数。看一下<a\n\t\thref=\"rate.phps\">rate.php</a>代码.</p>\n\t<p>虽然这些例子也可以不使用AJAX来实现，但显示我们不会那么做，我们用jQuery生成一个DIV容器，ID是\"rating\".</p>\n\t<pre>\n$(document).ready(function() {\n\t// generate markup\n\tvar ratingMarkup = [\"Please rate: \"];\n\tfor(var i=1; i &lt;= 5; i++) {\n\t\tratingMarkup[ratingMarkup.length] = \"&lt;a href='#'&gt;\" + i + \"&lt;/a&gt;&nbsp;\";\n\t}\n\t// add markup to container and applier click handlers to anchors\n\t$(\"#rating\").append( ratingMarkup.join('') ).find(\"a\").click(function(e) {\n\t\te.preventDefault();\n\t\t// send requests\n\t\t$.post(\"rate.php\", {rating: $(this).html()}, function(xml) {\n\t\t\t// format result\n\t\t\tvar result = [\n\t\t\t\t\"Thanks for rating, current average: \",\n\t\t\t\t$(\"average\", xml).text(),\n\t\t\t\t\", number of votes: \",\n\t\t\t\t$(\"count\", xml).text()\n\t\t\t];\n\t\t\t// output result\n\t\t\t$(\"#rating\").html(result.join(''));\n\t\t} );\n\t});\n});</pre>\n\t<p>这段代码生成了5个链接，并将它们追加到id为\"rating\"容器中，当其中一个链接被点击时，该链接标明的分数就会以rating参数形式发送到rate.php，然后，结果将以XML形式会从服务器端传回来，添加到容器中，替代这些链接。</p>\n\t<p>如果你没有一个安装过PHP的webserver，你可以看看这个<a href=\"example-rateme.html\">在线的例子</a>.</p>\n\t<p>不使用javascript实现的例子可以访问 <a\n\t\thref=\"http://www.softonic.de/ie/51494\">softonic.de</a> 点击 \"Kurz bewerten!\"</p>\n\t<p>更多的AJAX方法可以从<a class=\"doc\"\n\t\thref=\"http://jquery.com/docs/AJAXModule/\" title=\"Documentation for AJAX methods\">这里</a> 找到，或者看看<a href=\"http://visualjquery.com/\">API文档</a> 下面的AJAX filed under AJAX.</p>\n\n\t<p class=\"log\">（译者Keel注：这个在线实例从国内访问还是比较慢的，点击后要等一会儿才能看到结果，可以考虑对它进行修改，比如加上loading，投票后加上再投票的返回链接等。此外，这个例子中还是有很多需要进一步消化的地方，看不懂的地方请参考API文档。）</p>\n\n\n\t<p>一个在使用AJAX载入内容时经常发生的问题是：当载入一个事件句柄到一个HTML文档时，还需要在载入内容上应用这些事件，你不得不在内容加载完成后应用这些事件句柄，为了防止代码重复执行，你可能用到如下一个function:</p>\n\t<pre>\n// lets use the shortcut\n$(function() {\n\tvar addClickHandlers = function() {\n\t\t$(\"a.clickMeToLoadContent\").click(function() {\n\t\t\t$(\"#target\").load(this.href, addClickHandlers);\n\t\t});\n\t};\n\taddClickHandlers();\n});</pre>\n\t<p>现在，addClickHandlers只在DOM载入完成后执行一次，这是在用户每次点击具有clickMeToLoadContent 这个样式的链接并且内容加载完成后.</p>\n\t<p>请注意addClickHandlers函数是作为一个局部变量定义的，而不是全局变量(如：function addClickHandlers() {...})，这样做是为了防止与其他的全局变量或者函数相冲突.</p>\n  <p>另一个常见的问题是关于回调(callback)的参数。你可以通过一个额外的参数指定回调的方法，简单的办法是将这个回调方法包含在一个其它的function中:</p>\n  <pre>\n// get some data\nvar foobar = ...;\n// specify handler, it needs data as a paramter\nvar handler = function(data) {\n  ...\n};\n// add click handler and pass foobar!\n$('a').click( function(event) { handler(foobar); } );\n\n// if you need the context of the original handler, use apply:\n$('a').click( function(event) { handler.apply(this, [foobar]); } );</pre>\n\t<p>用到简单的AJAX后，我们可以认为已经非常之“web2.0”了，但是到现在为止，我们还缺少一些酷炫的效果。下一节将会谈到这些效果.</p>\n\n\t<h4>本章的相关链接:</h4>\n\t<ul>\n\t\t<li><a href=\"http://jquery.com/docs/AJAXModule/\">jQuery AJAX Module</a></li>\n\t\t<li><a href=\"http://api.jquery.com/\">jQuery API: Contains description and examples for append and all other jQuery methods</a></li>\n\t\t<li><a href=\"http://jquery.com/demo/thickbox/\">ThickBox: A jQuery plugin that uses jQuery to enhance the famous lightbox</a></li>\n\t</ul>\n</div>\n\n\n<div>\n\t<h2 id=\"animate\">Animate me(让我生动起来):使用FX</h2>\n\t<p>一些动态的效果可以使用 <code>show()</code> 和 <code>hide()</code>来表现:</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"a\").toggle(function() {\n\t\t$(\".stuff\").hide('slow');\n\t}, function() {\n\t\t$(\".stuff\").show('fast');\n\t});\n});</pre>\n\t<p>你可以与 <code>animate()</code>联合起来创建一些效果,如一个带渐显的滑动效果:</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"a\").toggle(function() {\n\t\t$(\".stuff\").animate({\n\t\t\theight: 'hide',\n\t\t\topacity: 'hide'\n\t\t}, 'slow');\n\t}, function() {\n\t\t$(\".stuff\").animate({\n\t\t\theight: 'show',\n\t\t\topacity: 'show'\n\t\t}, 'slow');\n\t});\n});</pre>\n\t<p>很多不错的效果可以访问<a href=\"http://interface.eyecon.ro/\">interface plugin collection</a>. 这个站点提供了很多demos和文档</p>\n\t<p>这些效果插件是位于jQuery插件列表的前面的，当然也有很多其他的插件，比如我们下一章讲到的表格排序插件。</p>\n\n\t<h4>本章的相关链接:</h4>\n\t<ul>\n\t\t<li><a href=\"http://jquery.com/docs/FxModule/\">jQuery FX Module</a></li>\n\t\t<li><a href=\"http://interface.eyecon.ro/\">Interface plugin</a></li>\n\t</ul>\n</div>\n\n\n\n<div>\n\t<h2 id=\"sort\">Sort me(将我有序化):使用tablesorter插件(表格排序)</h2>\n\t<p>这个表格排序插件能让我们在客户端按某一列进行排序，引入jQuery和这个插件的js文件，然后告诉插件你想要哪个表格拥有排序功能。</p>\n\t<p>要测试这个例子，先在starterkit.html中加上像下面这一行的代码：</p>\n<pre>\n&lt;script src=\"lib/jquery.tablesorter.js\" type=\"text/javascript\"&gt;&lt;/script&gt;</pre>\n\t<p>然后可以这样调用不着:</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"#large\").tableSorter();\n});</pre>\n\t<p>现在点击表格的第一行head区域，你可以看到排序的效果，再次点击会按倒过来的顺序进行排列。</p>\n\t<p>这个表格还可以加一些突出显示的效果，我们可以做这样一个隔行背景色（斑马线）效果:</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"#large\").tableSorter({\n\t\tstripingRowClass: ['odd','even'],\t// Class names for striping supplyed as a array.\n\t\tstripRowsOnStartUp: true\t\t// Strip rows on tableSorter init.\n\t});\n});</pre>\n\t<p>关于这个插件的更多例子和文档可以在 <a\n\t\thref=\"http://motherrussia.polyester.se/jquery-plugins/tablesorter/\">tablesorter首页</a>找到.</p>\n\t<p>几乎所有的特件都是这样用的:先include插件的js文件,然后在某些元素上使用插件定义的方法,当然也有一些参数选项是可以配置的</p>\n\t<p>经常更新的插件列表可以从jQuery官方站 <a href=\"http://jquery.com/plugins/\" title=\"Plugins for jQuery\">on the jQuery site</a>找到.</p>\n\t<p>当你更经常地使用jQuery时,你会发现将你自己的代码打包成插件是很有用处的,它能方便地让你的公司或者其他人进行重用.下一章我们将谈到如何构建一个自己的插件.</p>\n\n\t<h4>本章的相关链接:</h4>\n\t<ul>\n\t\t<li><a href=\"http://jquery.com/plugins/\">Plugins for jQuery</a></li>\n\t\t<li><a href=\"http://motherrussia.polyester.se/jquery-plugins/tablesorter/\">Tablesorter Plugin</a></li>\n\t</ul>\n</div>\n\n\n<div>\n\t<h2 id=\"plug\">Plug me:制作自己的插件</h2>\n\t<p>写一个自己的jQuery插件是非常容易的,如果你按照下面的原则来做,可以让其他人也容易地结合使用你的插件.</p>\n\t<ol>\n\t\t<li>为你的插件取一个名字,在这个例子里面我们叫它\"foobar\".</li>\n\t\t<li>创建一个像这样的文件:jquery.[yourpluginname].js,比如我们创建一个jquery.foobar.js</li>\n\t\t<li>创建一个或更多的插件方法,使用继承jQuery对象的方式,如:\n\t\t\t<pre>\njQuery.fn.foobar = function() {\n\t// do something\n};</pre>\n\t\t</li>\n\t\t<li>可选的:创建一个用于帮助说明的函数,如:\n\t\t\t<pre>\njQuery.fooBar = {\n\theight: 5,\n\tcalculateBar = function() { ... },\n\tcheckDependencies = function() { ... }\n};</pre>\n\t\t\t<p>你现在可以在你的插件中使用这些帮助函数了:</p>\n\t\t\t<pre>\njQuery.fn.foobar = function() {\n\t// do something\n\tjQuery.foobar.checkDependencies(value);\n\t// do something else\n};</pre>\n\t\t</li>\n\t\t<li>可选的l:创建一个默认的初始参数配置,这些配置也可以由用户自行设定,如:\n\t\t\t<pre>\njQuery.fn.foobar = function(options) {\n\tvar settings = {\n\t\tvalue: 5,\n\t\tname: \"pete\",\n\t\tbar: 655\n\t};\n\tif(options) {\n\t\tjQuery.extend(settings, options);\n\t}\n};</pre>\n\t\t<p>现在可以无需做任何配置地使用插件了,默认的参数在此时生效:</p>\n\t\t\t<pre>\n$(\"...\").foobar();</pre>\n\t\t<p>或者加入这些参数定义:</p>\n\t\t\t<pre>\n$(\"...\").foobar({\n\tvalue: 123,\n\tbar: 9\n});</pre>\n\t\t</li>\n\t</ol>\n\t<p>如果你release你的插件, 你还应该提供一些例子和文档,大部分的插件都具备这些良好的参考文档.</p>\n\t<p>现在你应该有了写一个插件的基础,让我们试着用这些知识写一个自己的插件.</p>\n\t<p>很多人试着控制所有的radio或者checkbox是否被选中,比如:</p>\n<pre>\n$(\"input[type='checkbox']\").each(function() {\n\tthis.checked = true;\n\t// or, to uncheck\n\tthis.checked = false;\n\t// or, to toggle\n\tthis.checked = !this.checked;\n});</pre>\n\t<div class=\"red\">注：在jQuery1.2及以上版本中，选择所有checkbox应该使用 input:checkbox , 因此以上代码第一行可写为: <br />  $('input:checkbox').each(function() {</div>\n\t<p>无论何时候，当你的代码出现each时，你应该重写上面的代码来构造一个插件,很直接地:</p>\n\t<pre>\n$.fn.check = function() {\n\treturn this.each(function() {\n\t\tthis.checked = true;\n\t});\n};</pre>\n\t<p>这个插件现在可以这样用:</p>\n\t<pre>$('input:checkbox').check();\n</pre> <div class=\"red\">注：在jQuery1.2及以上版本中，选择所有checkbox应该使用 input:checkbox 原文为：$(\"input[type='checkbox']\").check();</div>\n\t<p>现在你应该还可以写出uncheck()和toggleCheck()了.但是先停一下,让我们的插件接收一些参数.</p>\n\t<pre>\n$.fn.check = function(mode) {\n\tvar mode = mode || 'on'; // if mode is undefined, use 'on' as default\n\treturn this.each(function() {\n\t\tswitch(mode) {\n\t\tcase 'on':\n\t\t\tthis.checked = true;\n\t\t\tbreak;\n\t\tcase 'off':\n\t\t\tthis.checked = false;\n\t\t\tbreak;\n\t\tcase 'toggle':\n\t\t\tthis.checked = !this.checked;\n\t\t\tbreak;\n\t\t}\n\t});\n};</pre>\n\t<p>这里我们设置了默认的参数,所以将\"on\"参数省略也是可以的,当然也可以加上\"on\",\"off\", 或 \"toggle\",如:</p>\n<pre>\n$(\"input[type='checkbox']\").check();\n$(\"input[type='checkbox']\").check('on');\n$(\"input[type='checkbox']\").check('off');\n$(\"input[type='checkbox']\").check('toggle');</pre>\n\t<p>如果有多于一个的参数设置会稍稍有点复杂,在使用时如果只想设置第二个参数,则要在第一个参数位置写入null.</p>\n\t<p>从上一章的tablesorter插件用法我们可以看到,既可以省略所有参数来使用或者通过一个 key/value 对来重新设置每个参数.</p>\n\t<p>作为一个练习,你可以试着将 <a href=\"#rate\">第四章</a> 的功能重写为一个插件.这个插件的骨架应该是像这样的:</p>\n\t<pre>\n$.fn.rateMe = function(options) {\n\tvar container = this; // instead of selecting a static container with $(\"#rating\"), we now use the jQuery context\n\n\tvar settings = {\n\t\turl: \"rate.php\"\n\t\t// put more defaults here\n\t\t// remember to put a comma (\",\") after each pair, but not after the last one!\n\t};\n\n\tif(options) { // check if options are present before extending the settings\n\t\t$.extend(settings, options);\n\t}\n\n\t// ...\n\t// rest of the code\n\t// ...\n\n\treturn this; // if possible, return \"this\" to not break the chain\n});</pre>\n</div>\n\n<div>\n\t<h2 id=\"next\">Next steps(下一步)</h2>\n\t<p>如果你想做更好的javascript开发,建议你使用一个叫 <a href=\"http://getfirebug.com/\">FireBug</a>的firefox插件. 它提供了断点调试(比alert强多了)、观察DOM变化等很多漂亮的功能</p>\n\t<p>如果你还有未解决的问题，或者新的想法与建议，你可以使用jQuery的邮件列表 <a href=\"http://jquery.com/discuss\">jQuery mailing\n\tlist</a>.</p>\n\t<p>关于这个指南的任何事情，你可以写<a href=\"mailto:enchos[at]gmx[dot]net\">mail</a>给作者或者发表评论在他的日志：<a href=\"http://bassistance.de/index.php/2006/09/12/jquery-getting-started-guide/\">blog</a>.</p>\n\n\t<p class=\"log\">关于这个指南的翻译任何事情，你可以写<a href=\"mailto:keel.sike[at]gmail.com\">mail</a>给我.或者在 <a href=\"http://cc9c.blogspot.com/\">BLOG</a>中留言.</p>\n</div>\n\n\n<div>\n\t<h3>还有什么...</h3>\n\t<p>大大感谢John Resig创造了这么好的library! 感谢jQuery community 为John提供了如此多的咖啡和其他的一切!</p>\n</div>\n\n<h4><a href=\"http://bassistance.de\">&copy; 2006, Jörn Zaefferer</a> - last update: 2006-09-12</h4>\n<h4>中文版翻译:<a href=\"http://www.k99k.com/\">Keel</a> 上次更新:2006-12-13   --  最后更新: 2009-3-10<!-- 2006-12-13 -->\n<a href=\"http://www.k99k.com\">访问本站首页</a></h4>\n<div id=\"ad\">\n<script type=\"text/javascript\"><!--\ngoogle_ad_client = \"pub-9953772310597878\";\n/* jquery-728x90, 创建于 10-4-6 */\ngoogle_ad_slot = \"0735632391\";\ngoogle_ad_width = 728;\ngoogle_ad_height = 90;\n//-->\n</script>\n<script type=\"text/javascript\"\nsrc=\"http://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n\n</div>\n<script type=\"text/javascript\">\nvar gaJsHost = ((\"https:\" == document.location.protocol) ? \"https://ssl.\" : \"http://www.\");\ndocument.write(unescape(\"%3Cscript src='\" + gaJsHost + \"google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E\"));\n</script>\n<script type=\"text/javascript\">\ntry {\nvar pageTracker = _gat._getTracker(\"UA-333331-1\");\npageTracker._trackPageview();\n} catch(err) {}</script>\n\n\n</body>\n</html>\n","date":"2016-03-09T13:32:04.000Z","updated":"2016-03-09T13:32:04.000Z","path":"jQuery_getting_started.html","title":"","comments":1,"layout":"page","_id":"cj9ja9jlo0000pvvpwt1aj7sz","content":"<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<title>jQuery中文入门教程_译自Getting Started with jQuery</title>\n<meta name=\"Author\" content=\"Keel\">\n<meta name=\"Keywords\" content=\"jQuery\">\n<meta name=\"Description\" content=\"jQuery 中文入门指南，翻译加实例，jQuery的起点教程，译自Getting Started with jQuery\">\n<style type=\"text/css\">\n<!--\npre {\n\twhite-space: pre;\n\tbackground-color: #eee;\n\twidth: 90%;\n\tborder: 1px dotted black;\n\tdisplay: block;\n\tpadding: 7px;\n}\nh2 {\n\tmargin-top: 2em;\n}\nh4 { margin-bottom: 0em; }\n.log {\n\tcolor:green;\n}\n.red{color:red;font-weight: bold;font-size: 9pt;}\n#ad{position:absolute;left:5px;top:5px;width:728px; height:90px; }\n#org{padding-top:90px;position:relative ;top:1px:width:1px; }\n-->\n</style>\n</head>\n<body>\n<h1>jQuery中文入门指南，翻译加实例，jQuery的起点教程</h1>\n<div>\n\t<h3>中文版译者：<a href=\"http://www.k99k.com/\" target=\"_blank\" rel=\"external\">Keel</a></h3>\n\t<p>此文以实例为基础一步步说明了jQuery的工作方式。现以中文翻译（添加我的补充说明）如下。如有相关意见或建议请 <a href=\"mailto:keel.sike(at)gmail.com\" target=\"_blank\" rel=\"external\">EMAIL</a> 告知。或者在 <a href=\"http://cc9c.blogspot.com/\" target=\"_blank\" rel=\"external\">BLOG</a>中留言。</p>\n\t<p>英文原版：<a href=\"http://docs.jquery.com/Tutorials:Getting_Started_with_jQuery\" target=\"_blank\" rel=\"external\">http://docs.jquery.com/Tutorials:Getting_Started_with_jQuery<!-- http://jquery.bassistance.de/jquery-getting-started.html --></a> ，感谢原文作者 <a href=\"http://bassistance.de/\" target=\"_blank\" rel=\"external\">Jörn Zaefferer</a> <strong>本文发布已征求原作者同意。</strong> </p>\n\t<p class=\"red\"> 说明:在本教程发布之后，得到了几个网友的指正，对部分内容作了修正，但在jQuery版本不断更新的情况下，教程中的某些内容已经过时（尤其是1.3以上版本），在忠于原文的基础上，我将这部分内容加以标红的补充说明，希望更多的前端开发者能对此文提出宝贵意见，谢谢！ --2009-3-10</p>\n\t<p>另外我认为在学习过程中,有两个API文档你要打开随时查看:</p>\n\t<ul>\n\t<li><a href=\"http://api.jquery.com/\" target=\"_blank\">http://api.jquery.com/</a> <span class=\"red\">[注：已更新为jquery新地址]</span></li>\n\t<li><a href=\"http://visualjquery.com/\" target=\"_blank\">http://visualjquery.com/</a></li>\n\t</ul>\n如果想了解更多jQuery及插件信息，可<a href=\"http://www.k99k.com\" target=\"_blank\" rel=\"external\">访问本站首页</a>.</div>\n<div id=\"org\">\n<h4>以下部分为原文翻译:</h4>\n<hr>\n<div>\n<h2>jQuery入门指南教程</h2>\n<p>\n这个指南是一个对jQuery库的说明，要求读者了解HTML(DOM)和CSS的一些常识。它包括了一个简单的Hello World的例子，选择器和事件基础，AJAX、FX的用法，以及如何制作jQuery的插件。\n\n这个指南包括了很多代码，你可以copy它们，并试着修改它们，看看产生的效果。\n</p>\n<h2>内容提要</h2>\n\t<ol>\n\t\t<li><a href=\"#setup\">安装</a></li>\n\t\t<li><a href=\"#hello\">Hello jQuery</a></li>\n\t\t<li><a href=\"#find\">Find me:使用选择器和事件</a></li>\n\t\t<li><a href=\"#rate\">Rate me:使用AJAX</a></li>\n\t\t<li><a href=\"#animate\">Animate me(让我生动起来):使用FX</a></li>\n\t\t<li><a href=\"#sort\">Sort me(将我有序化):使用tablesorter插件(表格排序)</a></li>\n\t\t<li><a href=\"#plug\">Plug me:制作您自己的插件</a></li>\n\t\t<li><a href=\"#next\">Next steps(下一步)</a></li>\n\t</ol>\n</div>\n\n<div>\n\t<h2 id=\"setup\">安装</h2>\n\t<p>一开始,我们需要一个jQuery的库,最新的下载可以到<a href=\"http://docs.jquery.com/Downloading_jQuery\" target=\"_blank\" rel=\"external\">这里</a>找到。这个指南提供一个基本包含实例的包供下载.</p>\n\t<p>下载：<a class=\"download\" href=\"jquery-starterkit.zip\">jQuery Starterkit</a></p>\n\t<p class=\"log\">\n\t\t(译者Keel注:一定要下载这个包，光看文章不实践肯定是不行的。)\n\t</p>\n\t<p class=\"instruction\">下载后解压缩，然后用你最喜欢的文本编辑器打开starterkit.html和custom.js这两个文件。<span class=\"log\">(译者Keel注:这两个就是例子文件,所有的例子都用这两个例子作出,custom.js写jQuery代码,starterkit.html观察效果.建议用editPlus打开) </span></p>\n\n\t<p>现在,我们就已经做好了一切准备来进行这个著名的\"Hello world\"例子.</p>\n\n\t<h4>本章的相关链接:</h4>\n\t<ul>\n\t\t<li><a href=\"jquery-starterkit.zip\">Starterkit</a></li>\n\t\t<li><a href=\"http://docs.jquery.com/Downloading_jQuery\" target=\"_blank\" rel=\"external\">jQuery Downloads</a></li>\n\t</ul>\n</div>\n\n<div>\n\t<h2 id=\"hello\">Hello jQuery</h2>\n\t<p>在做所有事情之前,我们要让jQuery读取和处理文档的DOM,必须尽可能快地在DOM载入后开始执行事件,所以,我们用一个ready事件作为处理HTML文档的开始.看看我们打开的custom.js这个文件,里面已经准备好了:</p>\n\t<pre>\n$(document).ready(function() {\n\t// do stuff when DOM is ready\n});</pre>\n\n\t<p>放一个简单的alert事件在需要等DOM完成载入,所以我们把任务稍稍变复杂一点:在点击任何一个链接时显示一个alert.</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"a\").click(function() {\n\t\talert(\"Hello world!\");\n\t});\n});</pre>\n\n\t<p>这样在你点击页面的一个链接时都会触发这个\"Hello world\"的提示。</p>\n\t<p class=\"log\">(译者Keel注:请照此代码修改custom.js并保存,然后用浏览器打开starterkit.html观察效果。)</p>\n\t<p>让我们看一下这些修改是什么含义。$(\"a\") 是一个jQuery选择器(selector),在这里，它选择所有的a标签<span class=\"log\">（译者Keel注：即&lt;a&gt;&lt;/a&gt;）</span>，$号是 jQuery “类”(jQuery \"class\")的一个别称，因此$()构造了一个新的jQuery 对象(jQuery object)。函数 click() 是这个jQuery对象的一个方法，它绑定了一个单击事件到所有选中的标签(这里是所有的a标签),并在事件触发时执行了它所提供的alert方法.</p>\n\t<p>这里有一个拟行相似功能的代码:</p>\n\t<pre>\n&lt;a href=\"#\" onclick=\"alert('Hello world')\"&gt;Link&lt;/a&gt;</pre>\n\n\t<p>不同之处很明显,用jQuery不需要在每个a标签上写onclick事件,所以我们拥有了一个整洁的结构文档(HTML)和一个行为文档(JS),达到了将结构与行为分开的目的,就像我们使用CSS追求的一样.</p>\n\t<p>下面我们会更多地了解到选择器与事件.</p>\n\n\t<h4>本章的相关链接:</h4>\n\t<ul>\n\t\t<li><a href=\"http://docs.jquery.com/Core\" target=\"_blank\" rel=\"external\">jQuery Core</a></li>\n\t\t<li><a href=\"http://docs.jquery.com/Selectors\" target=\"_blank\" rel=\"external\">jQuery Selectors</a></li>\n\t\t<li><a href=\"http://docs.jquery.com/Events/\" target=\"_blank\" rel=\"external\">jQuery  Events</a></li>\n\t</ul>\n</div>\n\n<div>\n\t<h2 id=\"find\">Find me:使用选择器和事件</h2>\n\t<p>jQuery提供两种方式来选择html的elements，第一种是用CSS和Xpath选择器联合起来形成一个字符串来传送到jQuery的构造器（如：$(\"div &gt; ul a\")）；第二种是用jQuery对象的几个methods(方法)。这两种方式还可以联合起来混合使用。</p>\n\t<p>为了测试一下这些选择器，我们来试着在我们starterkit.html中选择并修改第一个ordered list.</p>\n\t<p>一开始，我们需要选择这个list本身，这个list有一个ID叫“orderedlist”，通常的javascript写法是document.getElementById(\"orderedlist\").在jQuery中，我们这样做：</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"#orderedlist\").addClass(\"red\");\n});</pre>\n\t<p>这里将starterkit中的一个CSS样式red附加到了orderedlist上<span class=\"log\">(译者Keel注：参考测试包中的css目录下的core.css，其中定义了red样式)</span>。因此，在你刷新了starterkit.html后，你将会看到第一个有序列表(ordered list )背景色变成了红色，而第二个有序列表没有变化.</p>\n\t<p>现在，让我们添加一些新的样式到list的子节点.</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"#orderedlist &gt; li\").addClass(\"blue\");\n});</pre>\n\t<p>这样，所有orderedlist中的li都附加了样式\"blue\"。</p>\n\t<p>现在我们再做个复杂一点的，当把鼠标放在li对象上面和移开时进行样式切换，但只在list的最后一个element上生效。</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"#orderedlist li:last\").hover(function() {\n\t\t$(this).addClass(\"green\");\n\t}, function() {\n\t\t$(this).removeClass(\"green\");\n\t});\n});</pre>\n\t<p>还有大量的类似的<a class=\"doc\" href=\"http://docs.jquery.com/CSS\" title=\"Documentation for CSS selectors\" target=\"_blank\" rel=\"external\">CSS</a>和<a class=\"doc\" href=\"http://jquery.com/docs/Base/Expression/XPath/\" title=\"Documentation for XPath selectors\" target=\"_blank\" rel=\"external\">XPath</a>例子，更多的例子和列表可以在<a class=\"doc\" href=\"http://docs.jquery.com/Selectors\" title=\"Documentation for base selectors\" target=\"_blank\" rel=\"external\">这里</a>找到。<span class=\"log\">（译者Keel注：入门看此文，修行在个人，要想在入门之后懂更多，所以这段话的几个链接迟早是要必看的！不会又要翻译吧...^_^!）</span></p>\n\t<p>每一个onXXX事件都有效，如onclick,onchange,onsubmit等，都有jQuery等价表示方法<span class=\"log\">（译者Keel注：jQuery不喜欢onXXX，所以都改成了XXX，去掉了on）</span>。<a class=\"doc\" href=\"http://docs.jquery.com/Events\" title=\"Documentation for advanced events\" target=\"_blank\" rel=\"external\">其他的一些事件</a>，如ready和hover,也提供了相应的方法。</p>\n\t<p>你可以在<a href=\"http://visualjquery.com/\" target=\"_blank\" rel=\"external\">Visual jQuery</a>找到全部的事件列表，在Events栏目下.</p>\n\t<p>用这些选择器和事件你已经可以做很多的事情了，但这里有一个更强的好东东！</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"#orderedlist\").find(\"li\").each(function(i) {\n\t\t$(this).html( $(this).html() + \" BAM! \" + i );\n\t});\n});</pre>\n\t<p>find() 让你在已经选择的element中作条件查找,因此 $(\"#orderedlist).find(\"li\") 就像 $(\"#orderedlist li\")一样。each()方法迭代了所有的li，并可以在此基础上作更多的处理。 大部分的方法,如addClass(), 都可以用它们自己的 each() 。在这个例子中, html()用来获取每个li的html文本, 追加一些文字，并将之设置为li的html文本。<span class=\"log\">（译者Keel注：从这个例子可以看到.html()方法是获取对象的html代码，而.html('xxx')是设置'xxx'为对象的html代码）</span></p>\n\t<p>另一个经常碰到的任务是在没有被jQuery覆盖的DOM元素上call一些方法，想像一个在你用AJAX方式成功提交后的reset：</p>\n\t<pre>\n$(document).ready(function() {\n\t// use this to reset a single form\n\t$(\"#reset\").click(function() {\n\t\t$(\"form\")[0].reset();\n\t});\n});</pre>\n<p class=\"log\">（译者Keel注：这里作者将form的id也写成了form，源文件有&lt;form id=\"form\"&gt;，这是非常不好的写法，你可以将这个ID改成form1或者testForm，然后用$(\"#form1\")或者$(\"#testForm\")来表示它，再进行测试。）</p>\n\t<p>上面这个代码选择了所有的\"form\"元素，并在其中的第一个上call了一个reset()。如果你有一个以上的form，你可以这样做：</p>\n\t<pre>\n$(document).ready(function() {\n\t// use this to reset several forms at once\n\t$(\"#reset\").click(function() {\n\t\t$(\"form\").each(function() {\n\t\t\tthis.reset();\n\t\t});\n\t});\n});</pre>\n<p class=\"log\">（译者Keel注：请注意一定要亲自将这些代码写在custom.js中并在starterkit.html上测试效果才能有所体会！必要时要观察starterkit.html的html代码）</p>\n\t<p>这样你在点击Reset链接后，就选择了文档中所有的form元素，并对它们都执行了一次reset()。</p>\n\t<p>还有一个你可能要面对的问题是不希望某些特定的元素被选择。jQuery 提供了filter() 和not() 方法来解决这个问题。 filter()以过滤表达式来减少不符合的被选择项, not()则用来取消所有符合过滤表达式的被选择项. 考虑一个无序的list，你想要选择所有的没有ul子元素的li元素。</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"li\").not(\":has(ul)\").css(\"border\", \"1px solid black\");//原文为$(\"li\").not(\"[ul]\").css(\"border\", \"1px solid black\");\n});</pre>\n\t<p>这个代码选择了所有的li元素，然后去除了有ul子元素的li元素。刷新浏览器后，所有的li元素都有了一个边框，只有ul子元素的那个li元素例外。</p>\n\t<p class=\"log\">（译者Keel注：请注意体会方便之极的css()方法，并再次提醒请务必实际测试观察效果，比方说换个CSS样式呢？再加一个CSS样式呢？像这样：$(\"li\").not(\"[ul]\").css(\"border\", \"1px solid black\").css(\"color\",\"red\");）</p>\n\t<p>上面代码中的[expression] 语法是从XPath而来，可以在子元素和属性(elements and attributes)上用作过滤器，比如你可能想选择所有的带有name属性的链接:</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"a[name]\").css(\"background-color\",\"#eee\"); //原文为“$(\"a[@name]\").background(\"#eee\");”在jQuery1.2及以上版本中,@符号应该去除,background方法被css方法取代\n});</pre>\n\t<p>这个代码给所有带有name属性的链接加了一个背景色。<span class=\"log\">（译者Keel注：这个颜色太不明显了，建议写成$(\"a[name]\").css(\"background-color\",\"#eee\");）</span> <span class=\"red\">[注：在jQuery1.2及以上版本中,@符号应该去除,下文中不再说明]</span></p>\n\t<p>更常见的情况是以name来选择链接，你可能需要选择一个有特点href属性的链接，这在不同的浏览器下对href的理解可能会不一致，所以我们的部分匹配(\"*=\")的方式来代替完全匹配(\"=\")：</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"a[href*=/content/gallery]\").click(function() {\n\t\t// do something with all links that point somewhere to /content/gallery\n\t});\n});</pre>\n\t<p>到现在为止，选择器都用来选择子元素或者是过滤元素。另外还有一种情况是选择上一个或者下一个元素，比如一个FAQ的页面，答案首先会隐藏，当问题点击时，答案显示出来，jQuery代码如下：</p>\n\t<pre>\n$(document).ready(function() {\n\t$('#faq').find('dd').hide().end().find('dt').click(function() {\n         var answer = $(this).next();\n         if (answer.is(':visible')) {\n             answer.slideUp();\n         } else {\n             answer.slideDown();\n         }\n     });\n});</pre>\n\t<p>这里我们用了一些链式表达法来减少代码量，而且看上去更直观更容易理解。像'#faq' 只选择了一次，利用end()方法，第一次find()方法会结束(undone)，所以我们可以接着在后面继续find('dt')，而不需要再写$('#faq').find('dt')。</p>\n\t<p>在点击事件中的，我们用 $(this).next() 来找到dt下面紧接的一个dd元素，这让我们可以快速地选择在被点击问题下面的答案。</p>\n\t<p class=\"log\">（译者Keel注：这个例子真是太酷了，FAQ中的答案可以收缩！从利用next()的思路到实现这些效果都有很多地方需要我们消化，注意 if (answer.is(':visible'))用法，注意answer.slideUp();不懂的地方赶紧查我在最开始提到的两个必看API文档）</p>\n\t<p>除了选择同级别的元素外，你也可以选择父级的元素。可能你想在用户鼠标移到文章某段的某个链接时，它的父级元素--也就是文章的这一段突出显示，试试这个：</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"a\").hover(function() {\n\t\t$(this).parents(\"p\").addClass(\"highlight\");\n\t}, function() {\n\t\t$(this).parents(\"p\").removeClass(\"highlight\");\n\t});\n});</pre>\n\t<p>测试效果可以看到，移到文章某段的链接时，它所在的段全用上highlight样式，移走之后又恢复原样。</p>\n\t<span class=\"log\">（译者Keel注：highlight是core.css中定义的样式，你也可以改变它，注意这里有第二个function()这是hover方法的特点，请在API文档中查阅hover，上面也有例子说明）</span>\n\n\t<p>在我们继续之前我们先来看看这一步： jQuery会让代码变得更短从而更容易理解和维护，下面是$(document).ready(callback)的缩写法：</p>\n\t<pre>\n$(function() {\n\t// code to execute when the DOM is ready\n});</pre>\n\t<p>应用到我们的Hello world例子中，可以这样:</p>\n\t<pre>\n$(function() {\n\t$(\"a\").click(function() {\n\t\talert(\"Hello world!\");\n\t});\n});</pre>\n\t<p>现在，我们手上有了这些基础的知识，我们可以更进一步的探索其它方面的东西，就从AJAX开始！</p>\n\n\t<h4>本章的相关链接:</h4>\n\t<ul>\n\t\t<li><a href=\"http://api.jquery.com/\" target=\"_blank\" rel=\"external\">jQuery API documentation</a></li>\n\t\t<li><a href=\"http://visualjquery.com/\" target=\"_blank\" rel=\"external\">Visual jQuery - A categorized browsable API documentation</a></li>\n\t\t<li><a href=\"http://jquery.com/docs/Base/Expression/CSS/\" target=\"_blank\" rel=\"external\">jQuery Expressions: CSS</a></li>\n\t\t<li><a href=\"http://jquery.com/docs/Base/Expression/XPath/\" target=\"_blank\" rel=\"external\">jQuery Expressions: XPath</a></li>\n\t\t<li><a href=\"http://jquery.com/docs/Base/Expression/Custom/\" target=\"_blank\" rel=\"external\">jQuery Expressions: Custom</a></li>\n\t\t<li><a href=\"http://jquery.com/docs/EventModule/\" target=\"_blank\" rel=\"external\">jQuery Special Events</a></li>\n\t\t<li><a href=\"http://jquery.com/docs/Base/Traverse/\" target=\"_blank\" rel=\"external\">jQuery DOM Traversing</a></li>\n\t</ul>\n</div>\n\n<div>\n\t<h2 id=\"rate\">Rate me:使用AJAX</h2>\n\t<p>在这一部分我们写了一个小小的AJAX应用，它能够rate一些东西<span class=\"log\">（译Keel注：就是对某些东西投票）</span>，就像在youtube.com上面看到的一样。</p>\n\t<p>首先我们需要一些服务器端代码，这个例子中用到了一个PHP文件，读取rating参数然后返回rating总数和平均数。看一下<a href=\"rate.phps\">rate.php</a>代码.</p>\n\t<p>虽然这些例子也可以不使用AJAX来实现，但显示我们不会那么做，我们用jQuery生成一个DIV容器，ID是\"rating\".</p>\n\t<pre>\n$(document).ready(function() {\n\t// generate markup\n\tvar ratingMarkup = [\"Please rate: \"];\n\tfor(var i=1; i &lt;= 5; i++) {\n\t\tratingMarkup[ratingMarkup.length] = \"&lt;a href='#'&gt;\" + i + \"&lt;/a&gt;&nbsp;\";\n\t}\n\t// add markup to container and applier click handlers to anchors\n\t$(\"#rating\").append( ratingMarkup.join('') ).find(\"a\").click(function(e) {\n\t\te.preventDefault();\n\t\t// send requests\n\t\t$.post(\"rate.php\", {rating: $(this).html()}, function(xml) {\n\t\t\t// format result\n\t\t\tvar result = [\n\t\t\t\t\"Thanks for rating, current average: \",\n\t\t\t\t$(\"average\", xml).text(),\n\t\t\t\t\", number of votes: \",\n\t\t\t\t$(\"count\", xml).text()\n\t\t\t];\n\t\t\t// output result\n\t\t\t$(\"#rating\").html(result.join(''));\n\t\t} );\n\t});\n});</pre>\n\t<p>这段代码生成了5个链接，并将它们追加到id为\"rating\"容器中，当其中一个链接被点击时，该链接标明的分数就会以rating参数形式发送到rate.php，然后，结果将以XML形式会从服务器端传回来，添加到容器中，替代这些链接。</p>\n\t<p>如果你没有一个安装过PHP的webserver，你可以看看这个<a href=\"example-rateme.html\">在线的例子</a>.</p>\n\t<p>不使用javascript实现的例子可以访问 <a href=\"http://www.softonic.de/ie/51494\" target=\"_blank\" rel=\"external\">softonic.de</a> 点击 \"Kurz bewerten!\"</p>\n\t<p>更多的AJAX方法可以从<a class=\"doc\" href=\"http://jquery.com/docs/AJAXModule/\" title=\"Documentation for AJAX methods\" target=\"_blank\" rel=\"external\">这里</a> 找到，或者看看<a href=\"http://visualjquery.com/\" target=\"_blank\" rel=\"external\">API文档</a> 下面的AJAX filed under AJAX.</p>\n\n\t<p class=\"log\">（译者Keel注：这个在线实例从国内访问还是比较慢的，点击后要等一会儿才能看到结果，可以考虑对它进行修改，比如加上loading，投票后加上再投票的返回链接等。此外，这个例子中还是有很多需要进一步消化的地方，看不懂的地方请参考API文档。）</p>\n\n\n\t<p>一个在使用AJAX载入内容时经常发生的问题是：当载入一个事件句柄到一个HTML文档时，还需要在载入内容上应用这些事件，你不得不在内容加载完成后应用这些事件句柄，为了防止代码重复执行，你可能用到如下一个function:</p>\n\t<pre>\n// lets use the shortcut\n$(function() {\n\tvar addClickHandlers = function() {\n\t\t$(\"a.clickMeToLoadContent\").click(function() {\n\t\t\t$(\"#target\").load(this.href, addClickHandlers);\n\t\t});\n\t};\n\taddClickHandlers();\n});</pre>\n\t<p>现在，addClickHandlers只在DOM载入完成后执行一次，这是在用户每次点击具有clickMeToLoadContent 这个样式的链接并且内容加载完成后.</p>\n\t<p>请注意addClickHandlers函数是作为一个局部变量定义的，而不是全局变量(如：function addClickHandlers() {...})，这样做是为了防止与其他的全局变量或者函数相冲突.</p>\n  <p>另一个常见的问题是关于回调(callback)的参数。你可以通过一个额外的参数指定回调的方法，简单的办法是将这个回调方法包含在一个其它的function中:</p>\n  <pre>\n// get some data\nvar foobar = ...;\n// specify handler, it needs data as a paramter\nvar handler = function(data) {\n  ...\n};\n// add click handler and pass foobar!\n$('a').click( function(event) { handler(foobar); } );\n\n// if you need the context of the original handler, use apply:\n$('a').click( function(event) { handler.apply(this, [foobar]); } );</pre>\n\t<p>用到简单的AJAX后，我们可以认为已经非常之“web2.0”了，但是到现在为止，我们还缺少一些酷炫的效果。下一节将会谈到这些效果.</p>\n\n\t<h4>本章的相关链接:</h4>\n\t<ul>\n\t\t<li><a href=\"http://jquery.com/docs/AJAXModule/\" target=\"_blank\" rel=\"external\">jQuery AJAX Module</a></li>\n\t\t<li><a href=\"http://api.jquery.com/\" target=\"_blank\" rel=\"external\">jQuery API: Contains description and examples for append and all other jQuery methods</a></li>\n\t\t<li><a href=\"http://jquery.com/demo/thickbox/\" target=\"_blank\" rel=\"external\">ThickBox: A jQuery plugin that uses jQuery to enhance the famous lightbox</a></li>\n\t</ul>\n</div>\n\n\n<div>\n\t<h2 id=\"animate\">Animate me(让我生动起来):使用FX</h2>\n\t<p>一些动态的效果可以使用 <code>show()</code> 和 <code>hide()</code>来表现:</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"a\").toggle(function() {\n\t\t$(\".stuff\").hide('slow');\n\t}, function() {\n\t\t$(\".stuff\").show('fast');\n\t});\n});</pre>\n\t<p>你可以与 <code>animate()</code>联合起来创建一些效果,如一个带渐显的滑动效果:</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"a\").toggle(function() {\n\t\t$(\".stuff\").animate({\n\t\t\theight: 'hide',\n\t\t\topacity: 'hide'\n\t\t}, 'slow');\n\t}, function() {\n\t\t$(\".stuff\").animate({\n\t\t\theight: 'show',\n\t\t\topacity: 'show'\n\t\t}, 'slow');\n\t});\n});</pre>\n\t<p>很多不错的效果可以访问<a href=\"http://interface.eyecon.ro/\" target=\"_blank\" rel=\"external\">interface plugin collection</a>. 这个站点提供了很多demos和文档</p>\n\t<p>这些效果插件是位于jQuery插件列表的前面的，当然也有很多其他的插件，比如我们下一章讲到的表格排序插件。</p>\n\n\t<h4>本章的相关链接:</h4>\n\t<ul>\n\t\t<li><a href=\"http://jquery.com/docs/FxModule/\" target=\"_blank\" rel=\"external\">jQuery FX Module</a></li>\n\t\t<li><a href=\"http://interface.eyecon.ro/\" target=\"_blank\" rel=\"external\">Interface plugin</a></li>\n\t</ul>\n</div>\n\n\n\n<div>\n\t<h2 id=\"sort\">Sort me(将我有序化):使用tablesorter插件(表格排序)</h2>\n\t<p>这个表格排序插件能让我们在客户端按某一列进行排序，引入jQuery和这个插件的js文件，然后告诉插件你想要哪个表格拥有排序功能。</p>\n\t<p>要测试这个例子，先在starterkit.html中加上像下面这一行的代码：</p>\n<pre>\n&lt;script src=\"lib/jquery.tablesorter.js\" type=\"text/javascript\"&gt;&lt;/script&gt;</pre>\n\t<p>然后可以这样调用不着:</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"#large\").tableSorter();\n});</pre>\n\t<p>现在点击表格的第一行head区域，你可以看到排序的效果，再次点击会按倒过来的顺序进行排列。</p>\n\t<p>这个表格还可以加一些突出显示的效果，我们可以做这样一个隔行背景色（斑马线）效果:</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"#large\").tableSorter({\n\t\tstripingRowClass: ['odd','even'],\t// Class names for striping supplyed as a array.\n\t\tstripRowsOnStartUp: true\t\t// Strip rows on tableSorter init.\n\t});\n});</pre>\n\t<p>关于这个插件的更多例子和文档可以在 <a href=\"http://motherrussia.polyester.se/jquery-plugins/tablesorter/\" target=\"_blank\" rel=\"external\">tablesorter首页</a>找到.</p>\n\t<p>几乎所有的特件都是这样用的:先include插件的js文件,然后在某些元素上使用插件定义的方法,当然也有一些参数选项是可以配置的</p>\n\t<p>经常更新的插件列表可以从jQuery官方站 <a href=\"http://jquery.com/plugins/\" title=\"Plugins for jQuery\" target=\"_blank\" rel=\"external\">on the jQuery site</a>找到.</p>\n\t<p>当你更经常地使用jQuery时,你会发现将你自己的代码打包成插件是很有用处的,它能方便地让你的公司或者其他人进行重用.下一章我们将谈到如何构建一个自己的插件.</p>\n\n\t<h4>本章的相关链接:</h4>\n\t<ul>\n\t\t<li><a href=\"http://jquery.com/plugins/\" target=\"_blank\" rel=\"external\">Plugins for jQuery</a></li>\n\t\t<li><a href=\"http://motherrussia.polyester.se/jquery-plugins/tablesorter/\" target=\"_blank\" rel=\"external\">Tablesorter Plugin</a></li>\n\t</ul>\n</div>\n\n\n<div>\n\t<h2 id=\"plug\">Plug me:制作自己的插件</h2>\n\t<p>写一个自己的jQuery插件是非常容易的,如果你按照下面的原则来做,可以让其他人也容易地结合使用你的插件.</p>\n\t<ol>\n\t\t<li>为你的插件取一个名字,在这个例子里面我们叫它\"foobar\".</li>\n\t\t<li>创建一个像这样的文件:jquery.[yourpluginname].js,比如我们创建一个jquery.foobar.js</li>\n\t\t<li>创建一个或更多的插件方法,使用继承jQuery对象的方式,如:\n\t\t\t<pre>\njQuery.fn.foobar = function() {\n\t// do something\n};</pre>\n\t\t</li>\n\t\t<li>可选的:创建一个用于帮助说明的函数,如:\n\t\t\t<pre>\njQuery.fooBar = {\n\theight: 5,\n\tcalculateBar = function() { ... },\n\tcheckDependencies = function() { ... }\n};</pre>\n\t\t\t<p>你现在可以在你的插件中使用这些帮助函数了:</p>\n\t\t\t<pre>\njQuery.fn.foobar = function() {\n\t// do something\n\tjQuery.foobar.checkDependencies(value);\n\t// do something else\n};</pre>\n\t\t</li>\n\t\t<li>可选的l:创建一个默认的初始参数配置,这些配置也可以由用户自行设定,如:\n\t\t\t<pre>\njQuery.fn.foobar = function(options) {\n\tvar settings = {\n\t\tvalue: 5,\n\t\tname: \"pete\",\n\t\tbar: 655\n\t};\n\tif(options) {\n\t\tjQuery.extend(settings, options);\n\t}\n};</pre>\n\t\t<p>现在可以无需做任何配置地使用插件了,默认的参数在此时生效:</p>\n\t\t\t<pre>\n$(\"...\").foobar();</pre>\n\t\t<p>或者加入这些参数定义:</p>\n\t\t\t<pre>\n$(\"...\").foobar({\n\tvalue: 123,\n\tbar: 9\n});</pre>\n\t\t</li>\n\t</ol>\n\t<p>如果你release你的插件, 你还应该提供一些例子和文档,大部分的插件都具备这些良好的参考文档.</p>\n\t<p>现在你应该有了写一个插件的基础,让我们试着用这些知识写一个自己的插件.</p>\n\t<p>很多人试着控制所有的radio或者checkbox是否被选中,比如:</p>\n<pre>\n$(\"input[type='checkbox']\").each(function() {\n\tthis.checked = true;\n\t// or, to uncheck\n\tthis.checked = false;\n\t// or, to toggle\n\tthis.checked = !this.checked;\n});</pre>\n\t<div class=\"red\">注：在jQuery1.2及以上版本中，选择所有checkbox应该使用 input:checkbox , 因此以上代码第一行可写为: <br>  $('input:checkbox').each(function() {</div>\n\t<p>无论何时候，当你的代码出现each时，你应该重写上面的代码来构造一个插件,很直接地:</p>\n\t<pre>\n$.fn.check = function() {\n\treturn this.each(function() {\n\t\tthis.checked = true;\n\t});\n};</pre>\n\t<p>这个插件现在可以这样用:</p>\n\t<pre>$('input:checkbox').check();\n</pre> <div class=\"red\">注：在jQuery1.2及以上版本中，选择所有checkbox应该使用 input:checkbox 原文为：$(\"input[type='checkbox']\").check();</div>\n\t<p>现在你应该还可以写出uncheck()和toggleCheck()了.但是先停一下,让我们的插件接收一些参数.</p>\n\t<pre>\n$.fn.check = function(mode) {\n\tvar mode = mode || 'on'; // if mode is undefined, use 'on' as default\n\treturn this.each(function() {\n\t\tswitch(mode) {\n\t\tcase 'on':\n\t\t\tthis.checked = true;\n\t\t\tbreak;\n\t\tcase 'off':\n\t\t\tthis.checked = false;\n\t\t\tbreak;\n\t\tcase 'toggle':\n\t\t\tthis.checked = !this.checked;\n\t\t\tbreak;\n\t\t}\n\t});\n};</pre>\n\t<p>这里我们设置了默认的参数,所以将\"on\"参数省略也是可以的,当然也可以加上\"on\",\"off\", 或 \"toggle\",如:</p>\n<pre>\n$(\"input[type='checkbox']\").check();\n$(\"input[type='checkbox']\").check('on');\n$(\"input[type='checkbox']\").check('off');\n$(\"input[type='checkbox']\").check('toggle');</pre>\n\t<p>如果有多于一个的参数设置会稍稍有点复杂,在使用时如果只想设置第二个参数,则要在第一个参数位置写入null.</p>\n\t<p>从上一章的tablesorter插件用法我们可以看到,既可以省略所有参数来使用或者通过一个 key/value 对来重新设置每个参数.</p>\n\t<p>作为一个练习,你可以试着将 <a href=\"#rate\">第四章</a> 的功能重写为一个插件.这个插件的骨架应该是像这样的:</p>\n\t<pre>\n$.fn.rateMe = function(options) {\n\tvar container = this; // instead of selecting a static container with $(\"#rating\"), we now use the jQuery context\n\n\tvar settings = {\n\t\turl: \"rate.php\"\n\t\t// put more defaults here\n\t\t// remember to put a comma (\",\") after each pair, but not after the last one!\n\t};\n\n\tif(options) { // check if options are present before extending the settings\n\t\t$.extend(settings, options);\n\t}\n\n\t// ...\n\t// rest of the code\n\t// ...\n\n\treturn this; // if possible, return \"this\" to not break the chain\n});</pre>\n</div>\n\n<div>\n\t<h2 id=\"next\">Next steps(下一步)</h2>\n\t<p>如果你想做更好的javascript开发,建议你使用一个叫 <a href=\"http://getfirebug.com/\" target=\"_blank\" rel=\"external\">FireBug</a>的firefox插件. 它提供了断点调试(比alert强多了)、观察DOM变化等很多漂亮的功能</p>\n\t<p>如果你还有未解决的问题，或者新的想法与建议，你可以使用jQuery的邮件列表 <a href=\"http://jquery.com/discuss\" target=\"_blank\" rel=\"external\">jQuery mailing\n\tlist</a>.</p>\n\t<p>关于这个指南的任何事情，你可以写<a href=\"mailto:enchos[at]gmx[dot]net\" target=\"_blank\" rel=\"external\">mail</a>给作者或者发表评论在他的日志：<a href=\"http://bassistance.de/index.php/2006/09/12/jquery-getting-started-guide/\" target=\"_blank\" rel=\"external\">blog</a>.</p>\n\n\t<p class=\"log\">关于这个指南的翻译任何事情，你可以写<a href=\"mailto:keel.sike[at]gmail.com\" target=\"_blank\" rel=\"external\">mail</a>给我.或者在 <a href=\"http://cc9c.blogspot.com/\" target=\"_blank\" rel=\"external\">BLOG</a>中留言.</p>\n</div>\n\n\n<div>\n\t<h3>还有什么...</h3>\n\t<p>大大感谢John Resig创造了这么好的library! 感谢jQuery community 为John提供了如此多的咖啡和其他的一切!</p>\n</div>\n\n<h4><a href=\"http://bassistance.de\" target=\"_blank\" rel=\"external\">&copy; 2006, Jörn Zaefferer</a> - last update: 2006-09-12</h4>\n<h4>中文版翻译:<a href=\"http://www.k99k.com/\" target=\"_blank\" rel=\"external\">Keel</a> 上次更新:2006-12-13   --  最后更新: 2009-3-10<!-- 2006-12-13 -->\n<a href=\"http://www.k99k.com\" target=\"_blank\" rel=\"external\">访问本站首页</a></h4>\n<div id=\"ad\">\n<script type=\"text/javascript\"><!--\ngoogle_ad_client = \"pub-9953772310597878\";\n/* jquery-728x90, 创建于 10-4-6 */\ngoogle_ad_slot = \"0735632391\";\ngoogle_ad_width = 728;\ngoogle_ad_height = 90;\n//-->\n</script>\n<script type=\"text/javascript\" src=\"http://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n\n</div>\n<script type=\"text/javascript\">\nvar gaJsHost = ((\"https:\" == document.location.protocol) ? \"https://ssl.\" : \"http://www.\");\ndocument.write(unescape(\"%3Cscript src='\" + gaJsHost + \"google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E\"));\n</script>\n<script type=\"text/javascript\">\ntry {\nvar pageTracker = _gat._getTracker(\"UA-333331-1\");\npageTracker._trackPageview();\n} catch(err) {}</script>\n\n\n</body>\n</html>\n","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<title>jQuery中文入门教程_译自Getting Started with jQuery</title>\n<meta name=\"Author\" content=\"Keel\">\n<meta name=\"Keywords\" content=\"jQuery\">\n<meta name=\"Description\" content=\"jQuery 中文入门指南，翻译加实例，jQuery的起点教程，译自Getting Started with jQuery\">\n<style type=\"text/css\">\n<!--\npre {\n\twhite-space: pre;\n\tbackground-color: #eee;\n\twidth: 90%;\n\tborder: 1px dotted black;\n\tdisplay: block;\n\tpadding: 7px;\n}\nh2 {\n\tmargin-top: 2em;\n}\nh4 { margin-bottom: 0em; }\n.log {\n\tcolor:green;\n}\n.red{color:red;font-weight: bold;font-size: 9pt;}\n#ad{position:absolute;left:5px;top:5px;width:728px; height:90px; }\n#org{padding-top:90px;position:relative ;top:1px:width:1px; }\n-->\n</style>\n</head>\n<body>\n<h1>jQuery中文入门指南，翻译加实例，jQuery的起点教程</h1>\n<div>\n\t<h3>中文版译者：<a href=\"http://www.k99k.com/\" target=\"_blank\" rel=\"external\">Keel</a></h3>\n\t<p>此文以实例为基础一步步说明了jQuery的工作方式。现以中文翻译（添加我的补充说明）如下。如有相关意见或建议请 <a href=\"mailto:keel.sike(at)gmail.com\" target=\"_blank\" rel=\"external\">EMAIL</a> 告知。或者在 <a href=\"http://cc9c.blogspot.com/\" target=\"_blank\" rel=\"external\">BLOG</a>中留言。</p>\n\t<p>英文原版：<a href=\"http://docs.jquery.com/Tutorials:Getting_Started_with_jQuery\" target=\"_blank\" rel=\"external\">http://docs.jquery.com/Tutorials:Getting_Started_with_jQuery<!-- http://jquery.bassistance.de/jquery-getting-started.html --></a> ，感谢原文作者 <a href=\"http://bassistance.de/\" target=\"_blank\" rel=\"external\">Jörn Zaefferer</a> <strong>本文发布已征求原作者同意。</strong> </p>\n\t<p class=\"red\"> 说明:在本教程发布之后，得到了几个网友的指正，对部分内容作了修正，但在jQuery版本不断更新的情况下，教程中的某些内容已经过时（尤其是1.3以上版本），在忠于原文的基础上，我将这部分内容加以标红的补充说明，希望更多的前端开发者能对此文提出宝贵意见，谢谢！ --2009-3-10</p>\n\t<p>另外我认为在学习过程中,有两个API文档你要打开随时查看:</p>\n\t<ul>\n\t<li><a href=\"http://api.jquery.com/\" target=\"_blank\">http://api.jquery.com/</a> <span class=\"red\">[注：已更新为jquery新地址]</span></li>\n\t<li><a href=\"http://visualjquery.com/\" target=\"_blank\">http://visualjquery.com/</a></li>\n\t</ul>\n如果想了解更多jQuery及插件信息，可<a href=\"http://www.k99k.com\" target=\"_blank\" rel=\"external\">访问本站首页</a>.</div>\n<div id=\"org\">\n<h4>以下部分为原文翻译:</h4>\n<hr>\n<div>\n<h2>jQuery入门指南教程</h2>\n<p>\n这个指南是一个对jQuery库的说明，要求读者了解HTML(DOM)和CSS的一些常识。它包括了一个简单的Hello World的例子，选择器和事件基础，AJAX、FX的用法，以及如何制作jQuery的插件。\n\n这个指南包括了很多代码，你可以copy它们，并试着修改它们，看看产生的效果。\n</p>\n<h2>内容提要</h2>\n\t<ol>\n\t\t<li><a href=\"#setup\">安装</a></li>\n\t\t<li><a href=\"#hello\">Hello jQuery</a></li>\n\t\t<li><a href=\"#find\">Find me:使用选择器和事件</a></li>\n\t\t<li><a href=\"#rate\">Rate me:使用AJAX</a></li>\n\t\t<li><a href=\"#animate\">Animate me(让我生动起来):使用FX</a></li>\n\t\t<li><a href=\"#sort\">Sort me(将我有序化):使用tablesorter插件(表格排序)</a></li>\n\t\t<li><a href=\"#plug\">Plug me:制作您自己的插件</a></li>\n\t\t<li><a href=\"#next\">Next steps(下一步)</a></li>\n\t</ol>\n</div>\n\n<div>\n\t<h2 id=\"setup\">安装</h2>\n\t<p>一开始,我们需要一个jQuery的库,最新的下载可以到<a href=\"http://docs.jquery.com/Downloading_jQuery\" target=\"_blank\" rel=\"external\">这里</a>找到。这个指南提供一个基本包含实例的包供下载.</p>\n\t<p>下载：<a class=\"download\" href=\"jquery-starterkit.zip\">jQuery Starterkit</a></p>\n\t<p class=\"log\">\n\t\t(译者Keel注:一定要下载这个包，光看文章不实践肯定是不行的。)\n\t</p>\n\t<p class=\"instruction\">下载后解压缩，然后用你最喜欢的文本编辑器打开starterkit.html和custom.js这两个文件。<span class=\"log\">(译者Keel注:这两个就是例子文件,所有的例子都用这两个例子作出,custom.js写jQuery代码,starterkit.html观察效果.建议用editPlus打开) </span></p>\n\n\t<p>现在,我们就已经做好了一切准备来进行这个著名的\"Hello world\"例子.</p>\n\n\t<h4>本章的相关链接:</h4>\n\t<ul>\n\t\t<li><a href=\"jquery-starterkit.zip\">Starterkit</a></li>\n\t\t<li><a href=\"http://docs.jquery.com/Downloading_jQuery\" target=\"_blank\" rel=\"external\">jQuery Downloads</a></li>\n\t</ul>\n</div>\n\n<div>\n\t<h2 id=\"hello\">Hello jQuery</h2>\n\t<p>在做所有事情之前,我们要让jQuery读取和处理文档的DOM,必须尽可能快地在DOM载入后开始执行事件,所以,我们用一个ready事件作为处理HTML文档的开始.看看我们打开的custom.js这个文件,里面已经准备好了:</p>\n\t<pre>\n$(document).ready(function() {\n\t// do stuff when DOM is ready\n});</pre>\n\n\t<p>放一个简单的alert事件在需要等DOM完成载入,所以我们把任务稍稍变复杂一点:在点击任何一个链接时显示一个alert.</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"a\").click(function() {\n\t\talert(\"Hello world!\");\n\t});\n});</pre>\n\n\t<p>这样在你点击页面的一个链接时都会触发这个\"Hello world\"的提示。</p>\n\t<p class=\"log\">(译者Keel注:请照此代码修改custom.js并保存,然后用浏览器打开starterkit.html观察效果。)</p>\n\t<p>让我们看一下这些修改是什么含义。$(\"a\") 是一个jQuery选择器(selector),在这里，它选择所有的a标签<span class=\"log\">（译者Keel注：即&lt;a&gt;&lt;/a&gt;）</span>，$号是 jQuery “类”(jQuery \"class\")的一个别称，因此$()构造了一个新的jQuery 对象(jQuery object)。函数 click() 是这个jQuery对象的一个方法，它绑定了一个单击事件到所有选中的标签(这里是所有的a标签),并在事件触发时执行了它所提供的alert方法.</p>\n\t<p>这里有一个拟行相似功能的代码:</p>\n\t<pre>\n&lt;a href=\"#\" onclick=\"alert('Hello world')\"&gt;Link&lt;/a&gt;</pre>\n\n\t<p>不同之处很明显,用jQuery不需要在每个a标签上写onclick事件,所以我们拥有了一个整洁的结构文档(HTML)和一个行为文档(JS),达到了将结构与行为分开的目的,就像我们使用CSS追求的一样.</p>\n\t<p>下面我们会更多地了解到选择器与事件.</p>\n\n\t<h4>本章的相关链接:</h4>\n\t<ul>\n\t\t<li><a href=\"http://docs.jquery.com/Core\" target=\"_blank\" rel=\"external\">jQuery Core</a></li>\n\t\t<li><a href=\"http://docs.jquery.com/Selectors\" target=\"_blank\" rel=\"external\">jQuery Selectors</a></li>\n\t\t<li><a href=\"http://docs.jquery.com/Events/\" target=\"_blank\" rel=\"external\">jQuery  Events</a></li>\n\t</ul>\n</div>\n\n<div>\n\t<h2 id=\"find\">Find me:使用选择器和事件</h2>\n\t<p>jQuery提供两种方式来选择html的elements，第一种是用CSS和Xpath选择器联合起来形成一个字符串来传送到jQuery的构造器（如：$(\"div &gt; ul a\")）；第二种是用jQuery对象的几个methods(方法)。这两种方式还可以联合起来混合使用。</p>\n\t<p>为了测试一下这些选择器，我们来试着在我们starterkit.html中选择并修改第一个ordered list.</p>\n\t<p>一开始，我们需要选择这个list本身，这个list有一个ID叫“orderedlist”，通常的javascript写法是document.getElementById(\"orderedlist\").在jQuery中，我们这样做：</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"#orderedlist\").addClass(\"red\");\n});</pre>\n\t<p>这里将starterkit中的一个CSS样式red附加到了orderedlist上<span class=\"log\">(译者Keel注：参考测试包中的css目录下的core.css，其中定义了red样式)</span>。因此，在你刷新了starterkit.html后，你将会看到第一个有序列表(ordered list )背景色变成了红色，而第二个有序列表没有变化.</p>\n\t<p>现在，让我们添加一些新的样式到list的子节点.</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"#orderedlist &gt; li\").addClass(\"blue\");\n});</pre>\n\t<p>这样，所有orderedlist中的li都附加了样式\"blue\"。</p>\n\t<p>现在我们再做个复杂一点的，当把鼠标放在li对象上面和移开时进行样式切换，但只在list的最后一个element上生效。</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"#orderedlist li:last\").hover(function() {\n\t\t$(this).addClass(\"green\");\n\t}, function() {\n\t\t$(this).removeClass(\"green\");\n\t});\n});</pre>\n\t<p>还有大量的类似的<a class=\"doc\" href=\"http://docs.jquery.com/CSS\" title=\"Documentation for CSS selectors\" target=\"_blank\" rel=\"external\">CSS</a>和<a class=\"doc\" href=\"http://jquery.com/docs/Base/Expression/XPath/\" title=\"Documentation for XPath selectors\" target=\"_blank\" rel=\"external\">XPath</a>例子，更多的例子和列表可以在<a class=\"doc\" href=\"http://docs.jquery.com/Selectors\" title=\"Documentation for base selectors\" target=\"_blank\" rel=\"external\">这里</a>找到。<span class=\"log\">（译者Keel注：入门看此文，修行在个人，要想在入门之后懂更多，所以这段话的几个链接迟早是要必看的！不会又要翻译吧...^_^!）</span></p>\n\t<p>每一个onXXX事件都有效，如onclick,onchange,onsubmit等，都有jQuery等价表示方法<span class=\"log\">（译者Keel注：jQuery不喜欢onXXX，所以都改成了XXX，去掉了on）</span>。<a class=\"doc\" href=\"http://docs.jquery.com/Events\" title=\"Documentation for advanced events\" target=\"_blank\" rel=\"external\">其他的一些事件</a>，如ready和hover,也提供了相应的方法。</p>\n\t<p>你可以在<a href=\"http://visualjquery.com/\" target=\"_blank\" rel=\"external\">Visual jQuery</a>找到全部的事件列表，在Events栏目下.</p>\n\t<p>用这些选择器和事件你已经可以做很多的事情了，但这里有一个更强的好东东！</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"#orderedlist\").find(\"li\").each(function(i) {\n\t\t$(this).html( $(this).html() + \" BAM! \" + i );\n\t});\n});</pre>\n\t<p>find() 让你在已经选择的element中作条件查找,因此 $(\"#orderedlist).find(\"li\") 就像 $(\"#orderedlist li\")一样。each()方法迭代了所有的li，并可以在此基础上作更多的处理。 大部分的方法,如addClass(), 都可以用它们自己的 each() 。在这个例子中, html()用来获取每个li的html文本, 追加一些文字，并将之设置为li的html文本。<span class=\"log\">（译者Keel注：从这个例子可以看到.html()方法是获取对象的html代码，而.html('xxx')是设置'xxx'为对象的html代码）</span></p>\n\t<p>另一个经常碰到的任务是在没有被jQuery覆盖的DOM元素上call一些方法，想像一个在你用AJAX方式成功提交后的reset：</p>\n\t<pre>\n$(document).ready(function() {\n\t// use this to reset a single form\n\t$(\"#reset\").click(function() {\n\t\t$(\"form\")[0].reset();\n\t});\n});</pre>\n<p class=\"log\">（译者Keel注：这里作者将form的id也写成了form，源文件有&lt;form id=\"form\"&gt;，这是非常不好的写法，你可以将这个ID改成form1或者testForm，然后用$(\"#form1\")或者$(\"#testForm\")来表示它，再进行测试。）</p>\n\t<p>上面这个代码选择了所有的\"form\"元素，并在其中的第一个上call了一个reset()。如果你有一个以上的form，你可以这样做：</p>\n\t<pre>\n$(document).ready(function() {\n\t// use this to reset several forms at once\n\t$(\"#reset\").click(function() {\n\t\t$(\"form\").each(function() {\n\t\t\tthis.reset();\n\t\t});\n\t});\n});</pre>\n<p class=\"log\">（译者Keel注：请注意一定要亲自将这些代码写在custom.js中并在starterkit.html上测试效果才能有所体会！必要时要观察starterkit.html的html代码）</p>\n\t<p>这样你在点击Reset链接后，就选择了文档中所有的form元素，并对它们都执行了一次reset()。</p>\n\t<p>还有一个你可能要面对的问题是不希望某些特定的元素被选择。jQuery 提供了filter() 和not() 方法来解决这个问题。 filter()以过滤表达式来减少不符合的被选择项, not()则用来取消所有符合过滤表达式的被选择项. 考虑一个无序的list，你想要选择所有的没有ul子元素的li元素。</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"li\").not(\":has(ul)\").css(\"border\", \"1px solid black\");//原文为$(\"li\").not(\"[ul]\").css(\"border\", \"1px solid black\");\n});</pre>\n\t<p>这个代码选择了所有的li元素，然后去除了有ul子元素的li元素。刷新浏览器后，所有的li元素都有了一个边框，只有ul子元素的那个li元素例外。</p>\n\t<p class=\"log\">（译者Keel注：请注意体会方便之极的css()方法，并再次提醒请务必实际测试观察效果，比方说换个CSS样式呢？再加一个CSS样式呢？像这样：$(\"li\").not(\"[ul]\").css(\"border\", \"1px solid black\").css(\"color\",\"red\");）</p>\n\t<p>上面代码中的[expression] 语法是从XPath而来，可以在子元素和属性(elements and attributes)上用作过滤器，比如你可能想选择所有的带有name属性的链接:</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"a[name]\").css(\"background-color\",\"#eee\"); //原文为“$(\"a[@name]\").background(\"#eee\");”在jQuery1.2及以上版本中,@符号应该去除,background方法被css方法取代\n});</pre>\n\t<p>这个代码给所有带有name属性的链接加了一个背景色。<span class=\"log\">（译者Keel注：这个颜色太不明显了，建议写成$(\"a[name]\").css(\"background-color\",\"#eee\");）</span> <span class=\"red\">[注：在jQuery1.2及以上版本中,@符号应该去除,下文中不再说明]</span></p>\n\t<p>更常见的情况是以name来选择链接，你可能需要选择一个有特点href属性的链接，这在不同的浏览器下对href的理解可能会不一致，所以我们的部分匹配(\"*=\")的方式来代替完全匹配(\"=\")：</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"a[href*=/content/gallery]\").click(function() {\n\t\t// do something with all links that point somewhere to /content/gallery\n\t});\n});</pre>\n\t<p>到现在为止，选择器都用来选择子元素或者是过滤元素。另外还有一种情况是选择上一个或者下一个元素，比如一个FAQ的页面，答案首先会隐藏，当问题点击时，答案显示出来，jQuery代码如下：</p>\n\t<pre>\n$(document).ready(function() {\n\t$('#faq').find('dd').hide().end().find('dt').click(function() {\n         var answer = $(this).next();\n         if (answer.is(':visible')) {\n             answer.slideUp();\n         } else {\n             answer.slideDown();\n         }\n     });\n});</pre>\n\t<p>这里我们用了一些链式表达法来减少代码量，而且看上去更直观更容易理解。像'#faq' 只选择了一次，利用end()方法，第一次find()方法会结束(undone)，所以我们可以接着在后面继续find('dt')，而不需要再写$('#faq').find('dt')。</p>\n\t<p>在点击事件中的，我们用 $(this).next() 来找到dt下面紧接的一个dd元素，这让我们可以快速地选择在被点击问题下面的答案。</p>\n\t<p class=\"log\">（译者Keel注：这个例子真是太酷了，FAQ中的答案可以收缩！从利用next()的思路到实现这些效果都有很多地方需要我们消化，注意 if (answer.is(':visible'))用法，注意answer.slideUp();不懂的地方赶紧查我在最开始提到的两个必看API文档）</p>\n\t<p>除了选择同级别的元素外，你也可以选择父级的元素。可能你想在用户鼠标移到文章某段的某个链接时，它的父级元素--也就是文章的这一段突出显示，试试这个：</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"a\").hover(function() {\n\t\t$(this).parents(\"p\").addClass(\"highlight\");\n\t}, function() {\n\t\t$(this).parents(\"p\").removeClass(\"highlight\");\n\t});\n});</pre>\n\t<p>测试效果可以看到，移到文章某段的链接时，它所在的段全用上highlight样式，移走之后又恢复原样。</p>\n\t<span class=\"log\">（译者Keel注：highlight是core.css中定义的样式，你也可以改变它，注意这里有第二个function()这是hover方法的特点，请在API文档中查阅hover，上面也有例子说明）</span>\n\n\t<p>在我们继续之前我们先来看看这一步： jQuery会让代码变得更短从而更容易理解和维护，下面是$(document).ready(callback)的缩写法：</p>\n\t<pre>\n$(function() {\n\t// code to execute when the DOM is ready\n});</pre>\n\t<p>应用到我们的Hello world例子中，可以这样:</p>\n\t<pre>\n$(function() {\n\t$(\"a\").click(function() {\n\t\talert(\"Hello world!\");\n\t});\n});</pre>\n\t<p>现在，我们手上有了这些基础的知识，我们可以更进一步的探索其它方面的东西，就从AJAX开始！</p>\n\n\t<h4>本章的相关链接:</h4>\n\t<ul>\n\t\t<li><a href=\"http://api.jquery.com/\" target=\"_blank\" rel=\"external\">jQuery API documentation</a></li>\n\t\t<li><a href=\"http://visualjquery.com/\" target=\"_blank\" rel=\"external\">Visual jQuery - A categorized browsable API documentation</a></li>\n\t\t<li><a href=\"http://jquery.com/docs/Base/Expression/CSS/\" target=\"_blank\" rel=\"external\">jQuery Expressions: CSS</a></li>\n\t\t<li><a href=\"http://jquery.com/docs/Base/Expression/XPath/\" target=\"_blank\" rel=\"external\">jQuery Expressions: XPath</a></li>\n\t\t<li><a href=\"http://jquery.com/docs/Base/Expression/Custom/\" target=\"_blank\" rel=\"external\">jQuery Expressions: Custom</a></li>\n\t\t<li><a href=\"http://jquery.com/docs/EventModule/\" target=\"_blank\" rel=\"external\">jQuery Special Events</a></li>\n\t\t<li><a href=\"http://jquery.com/docs/Base/Traverse/\" target=\"_blank\" rel=\"external\">jQuery DOM Traversing</a></li>\n\t</ul>\n</div>\n\n<div>\n\t<h2 id=\"rate\">Rate me:使用AJAX</h2>\n\t<p>在这一部分我们写了一个小小的AJAX应用，它能够rate一些东西<span class=\"log\">（译Keel注：就是对某些东西投票）</span>，就像在youtube.com上面看到的一样。</p>\n\t<p>首先我们需要一些服务器端代码，这个例子中用到了一个PHP文件，读取rating参数然后返回rating总数和平均数。看一下<a href=\"rate.phps\">rate.php</a>代码.</p>\n\t<p>虽然这些例子也可以不使用AJAX来实现，但显示我们不会那么做，我们用jQuery生成一个DIV容器，ID是\"rating\".</p>\n\t<pre>\n$(document).ready(function() {\n\t// generate markup\n\tvar ratingMarkup = [\"Please rate: \"];\n\tfor(var i=1; i &lt;= 5; i++) {\n\t\tratingMarkup[ratingMarkup.length] = \"&lt;a href='#'&gt;\" + i + \"&lt;/a&gt;&nbsp;\";\n\t}\n\t// add markup to container and applier click handlers to anchors\n\t$(\"#rating\").append( ratingMarkup.join('') ).find(\"a\").click(function(e) {\n\t\te.preventDefault();\n\t\t// send requests\n\t\t$.post(\"rate.php\", {rating: $(this).html()}, function(xml) {\n\t\t\t// format result\n\t\t\tvar result = [\n\t\t\t\t\"Thanks for rating, current average: \",\n\t\t\t\t$(\"average\", xml).text(),\n\t\t\t\t\", number of votes: \",\n\t\t\t\t$(\"count\", xml).text()\n\t\t\t];\n\t\t\t// output result\n\t\t\t$(\"#rating\").html(result.join(''));\n\t\t} );\n\t});\n});</pre>\n\t<p>这段代码生成了5个链接，并将它们追加到id为\"rating\"容器中，当其中一个链接被点击时，该链接标明的分数就会以rating参数形式发送到rate.php，然后，结果将以XML形式会从服务器端传回来，添加到容器中，替代这些链接。</p>\n\t<p>如果你没有一个安装过PHP的webserver，你可以看看这个<a href=\"example-rateme.html\">在线的例子</a>.</p>\n\t<p>不使用javascript实现的例子可以访问 <a href=\"http://www.softonic.de/ie/51494\" target=\"_blank\" rel=\"external\">softonic.de</a> 点击 \"Kurz bewerten!\"</p>\n\t<p>更多的AJAX方法可以从<a class=\"doc\" href=\"http://jquery.com/docs/AJAXModule/\" title=\"Documentation for AJAX methods\" target=\"_blank\" rel=\"external\">这里</a> 找到，或者看看<a href=\"http://visualjquery.com/\" target=\"_blank\" rel=\"external\">API文档</a> 下面的AJAX filed under AJAX.</p>\n\n\t<p class=\"log\">（译者Keel注：这个在线实例从国内访问还是比较慢的，点击后要等一会儿才能看到结果，可以考虑对它进行修改，比如加上loading，投票后加上再投票的返回链接等。此外，这个例子中还是有很多需要进一步消化的地方，看不懂的地方请参考API文档。）</p>\n\n\n\t<p>一个在使用AJAX载入内容时经常发生的问题是：当载入一个事件句柄到一个HTML文档时，还需要在载入内容上应用这些事件，你不得不在内容加载完成后应用这些事件句柄，为了防止代码重复执行，你可能用到如下一个function:</p>\n\t<pre>\n// lets use the shortcut\n$(function() {\n\tvar addClickHandlers = function() {\n\t\t$(\"a.clickMeToLoadContent\").click(function() {\n\t\t\t$(\"#target\").load(this.href, addClickHandlers);\n\t\t});\n\t};\n\taddClickHandlers();\n});</pre>\n\t<p>现在，addClickHandlers只在DOM载入完成后执行一次，这是在用户每次点击具有clickMeToLoadContent 这个样式的链接并且内容加载完成后.</p>\n\t<p>请注意addClickHandlers函数是作为一个局部变量定义的，而不是全局变量(如：function addClickHandlers() {...})，这样做是为了防止与其他的全局变量或者函数相冲突.</p>\n  <p>另一个常见的问题是关于回调(callback)的参数。你可以通过一个额外的参数指定回调的方法，简单的办法是将这个回调方法包含在一个其它的function中:</p>\n  <pre>\n// get some data\nvar foobar = ...;\n// specify handler, it needs data as a paramter\nvar handler = function(data) {\n  ...\n};\n// add click handler and pass foobar!\n$('a').click( function(event) { handler(foobar); } );\n\n// if you need the context of the original handler, use apply:\n$('a').click( function(event) { handler.apply(this, [foobar]); } );</pre>\n\t<p>用到简单的AJAX后，我们可以认为已经非常之“web2.0”了，但是到现在为止，我们还缺少一些酷炫的效果。下一节将会谈到这些效果.</p>\n\n\t<h4>本章的相关链接:</h4>\n\t<ul>\n\t\t<li><a href=\"http://jquery.com/docs/AJAXModule/\" target=\"_blank\" rel=\"external\">jQuery AJAX Module</a></li>\n\t\t<li><a href=\"http://api.jquery.com/\" target=\"_blank\" rel=\"external\">jQuery API: Contains description and examples for append and all other jQuery methods</a></li>\n\t\t<li><a href=\"http://jquery.com/demo/thickbox/\" target=\"_blank\" rel=\"external\">ThickBox: A jQuery plugin that uses jQuery to enhance the famous lightbox</a></li>\n\t</ul>\n</div>\n\n\n<div>\n\t<h2 id=\"animate\">Animate me(让我生动起来):使用FX</h2>\n\t<p>一些动态的效果可以使用 <code>show()</code> 和 <code>hide()</code>来表现:</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"a\").toggle(function() {\n\t\t$(\".stuff\").hide('slow');\n\t}, function() {\n\t\t$(\".stuff\").show('fast');\n\t});\n});</pre>\n\t<p>你可以与 <code>animate()</code>联合起来创建一些效果,如一个带渐显的滑动效果:</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"a\").toggle(function() {\n\t\t$(\".stuff\").animate({\n\t\t\theight: 'hide',\n\t\t\topacity: 'hide'\n\t\t}, 'slow');\n\t}, function() {\n\t\t$(\".stuff\").animate({\n\t\t\theight: 'show',\n\t\t\topacity: 'show'\n\t\t}, 'slow');\n\t});\n});</pre>\n\t<p>很多不错的效果可以访问<a href=\"http://interface.eyecon.ro/\" target=\"_blank\" rel=\"external\">interface plugin collection</a>. 这个站点提供了很多demos和文档</p>\n\t<p>这些效果插件是位于jQuery插件列表的前面的，当然也有很多其他的插件，比如我们下一章讲到的表格排序插件。</p>\n\n\t<h4>本章的相关链接:</h4>\n\t<ul>\n\t\t<li><a href=\"http://jquery.com/docs/FxModule/\" target=\"_blank\" rel=\"external\">jQuery FX Module</a></li>\n\t\t<li><a href=\"http://interface.eyecon.ro/\" target=\"_blank\" rel=\"external\">Interface plugin</a></li>\n\t</ul>\n</div>\n\n\n\n<div>\n\t<h2 id=\"sort\">Sort me(将我有序化):使用tablesorter插件(表格排序)</h2>\n\t<p>这个表格排序插件能让我们在客户端按某一列进行排序，引入jQuery和这个插件的js文件，然后告诉插件你想要哪个表格拥有排序功能。</p>\n\t<p>要测试这个例子，先在starterkit.html中加上像下面这一行的代码：</p>\n<pre>\n&lt;script src=\"lib/jquery.tablesorter.js\" type=\"text/javascript\"&gt;&lt;/script&gt;</pre>\n\t<p>然后可以这样调用不着:</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"#large\").tableSorter();\n});</pre>\n\t<p>现在点击表格的第一行head区域，你可以看到排序的效果，再次点击会按倒过来的顺序进行排列。</p>\n\t<p>这个表格还可以加一些突出显示的效果，我们可以做这样一个隔行背景色（斑马线）效果:</p>\n\t<pre>\n$(document).ready(function() {\n\t$(\"#large\").tableSorter({\n\t\tstripingRowClass: ['odd','even'],\t// Class names for striping supplyed as a array.\n\t\tstripRowsOnStartUp: true\t\t// Strip rows on tableSorter init.\n\t});\n});</pre>\n\t<p>关于这个插件的更多例子和文档可以在 <a href=\"http://motherrussia.polyester.se/jquery-plugins/tablesorter/\" target=\"_blank\" rel=\"external\">tablesorter首页</a>找到.</p>\n\t<p>几乎所有的特件都是这样用的:先include插件的js文件,然后在某些元素上使用插件定义的方法,当然也有一些参数选项是可以配置的</p>\n\t<p>经常更新的插件列表可以从jQuery官方站 <a href=\"http://jquery.com/plugins/\" title=\"Plugins for jQuery\" target=\"_blank\" rel=\"external\">on the jQuery site</a>找到.</p>\n\t<p>当你更经常地使用jQuery时,你会发现将你自己的代码打包成插件是很有用处的,它能方便地让你的公司或者其他人进行重用.下一章我们将谈到如何构建一个自己的插件.</p>\n\n\t<h4>本章的相关链接:</h4>\n\t<ul>\n\t\t<li><a href=\"http://jquery.com/plugins/\" target=\"_blank\" rel=\"external\">Plugins for jQuery</a></li>\n\t\t<li><a href=\"http://motherrussia.polyester.se/jquery-plugins/tablesorter/\" target=\"_blank\" rel=\"external\">Tablesorter Plugin</a></li>\n\t</ul>\n</div>\n\n\n<div>\n\t<h2 id=\"plug\">Plug me:制作自己的插件</h2>\n\t<p>写一个自己的jQuery插件是非常容易的,如果你按照下面的原则来做,可以让其他人也容易地结合使用你的插件.</p>\n\t<ol>\n\t\t<li>为你的插件取一个名字,在这个例子里面我们叫它\"foobar\".</li>\n\t\t<li>创建一个像这样的文件:jquery.[yourpluginname].js,比如我们创建一个jquery.foobar.js</li>\n\t\t<li>创建一个或更多的插件方法,使用继承jQuery对象的方式,如:\n\t\t\t<pre>\njQuery.fn.foobar = function() {\n\t// do something\n};</pre>\n\t\t</li>\n\t\t<li>可选的:创建一个用于帮助说明的函数,如:\n\t\t\t<pre>\njQuery.fooBar = {\n\theight: 5,\n\tcalculateBar = function() { ... },\n\tcheckDependencies = function() { ... }\n};</pre>\n\t\t\t<p>你现在可以在你的插件中使用这些帮助函数了:</p>\n\t\t\t<pre>\njQuery.fn.foobar = function() {\n\t// do something\n\tjQuery.foobar.checkDependencies(value);\n\t// do something else\n};</pre>\n\t\t</li>\n\t\t<li>可选的l:创建一个默认的初始参数配置,这些配置也可以由用户自行设定,如:\n\t\t\t<pre>\njQuery.fn.foobar = function(options) {\n\tvar settings = {\n\t\tvalue: 5,\n\t\tname: \"pete\",\n\t\tbar: 655\n\t};\n\tif(options) {\n\t\tjQuery.extend(settings, options);\n\t}\n};</pre>\n\t\t<p>现在可以无需做任何配置地使用插件了,默认的参数在此时生效:</p>\n\t\t\t<pre>\n$(\"...\").foobar();</pre>\n\t\t<p>或者加入这些参数定义:</p>\n\t\t\t<pre>\n$(\"...\").foobar({\n\tvalue: 123,\n\tbar: 9\n});</pre>\n\t\t</li>\n\t</ol>\n\t<p>如果你release你的插件, 你还应该提供一些例子和文档,大部分的插件都具备这些良好的参考文档.</p>\n\t<p>现在你应该有了写一个插件的基础,让我们试着用这些知识写一个自己的插件.</p>\n\t<p>很多人试着控制所有的radio或者checkbox是否被选中,比如:</p>\n<pre>\n$(\"input[type='checkbox']\").each(function() {\n\tthis.checked = true;\n\t// or, to uncheck\n\tthis.checked = false;\n\t// or, to toggle\n\tthis.checked = !this.checked;\n});</pre>\n\t<div class=\"red\">注：在jQuery1.2及以上版本中，选择所有checkbox应该使用 input:checkbox , 因此以上代码第一行可写为: <br>  $('input:checkbox').each(function() {</div>\n\t<p>无论何时候，当你的代码出现each时，你应该重写上面的代码来构造一个插件,很直接地:</p>\n\t<pre>\n$.fn.check = function() {\n\treturn this.each(function() {\n\t\tthis.checked = true;\n\t});\n};</pre>\n\t<p>这个插件现在可以这样用:</p>\n\t<pre>$('input:checkbox').check();\n</pre> <div class=\"red\">注：在jQuery1.2及以上版本中，选择所有checkbox应该使用 input:checkbox 原文为：$(\"input[type='checkbox']\").check();</div>\n\t<p>现在你应该还可以写出uncheck()和toggleCheck()了.但是先停一下,让我们的插件接收一些参数.</p>\n\t<pre>\n$.fn.check = function(mode) {\n\tvar mode = mode || 'on'; // if mode is undefined, use 'on' as default\n\treturn this.each(function() {\n\t\tswitch(mode) {\n\t\tcase 'on':\n\t\t\tthis.checked = true;\n\t\t\tbreak;\n\t\tcase 'off':\n\t\t\tthis.checked = false;\n\t\t\tbreak;\n\t\tcase 'toggle':\n\t\t\tthis.checked = !this.checked;\n\t\t\tbreak;\n\t\t}\n\t});\n};</pre>\n\t<p>这里我们设置了默认的参数,所以将\"on\"参数省略也是可以的,当然也可以加上\"on\",\"off\", 或 \"toggle\",如:</p>\n<pre>\n$(\"input[type='checkbox']\").check();\n$(\"input[type='checkbox']\").check('on');\n$(\"input[type='checkbox']\").check('off');\n$(\"input[type='checkbox']\").check('toggle');</pre>\n\t<p>如果有多于一个的参数设置会稍稍有点复杂,在使用时如果只想设置第二个参数,则要在第一个参数位置写入null.</p>\n\t<p>从上一章的tablesorter插件用法我们可以看到,既可以省略所有参数来使用或者通过一个 key/value 对来重新设置每个参数.</p>\n\t<p>作为一个练习,你可以试着将 <a href=\"#rate\">第四章</a> 的功能重写为一个插件.这个插件的骨架应该是像这样的:</p>\n\t<pre>\n$.fn.rateMe = function(options) {\n\tvar container = this; // instead of selecting a static container with $(\"#rating\"), we now use the jQuery context\n\n\tvar settings = {\n\t\turl: \"rate.php\"\n\t\t// put more defaults here\n\t\t// remember to put a comma (\",\") after each pair, but not after the last one!\n\t};\n\n\tif(options) { // check if options are present before extending the settings\n\t\t$.extend(settings, options);\n\t}\n\n\t// ...\n\t// rest of the code\n\t// ...\n\n\treturn this; // if possible, return \"this\" to not break the chain\n});</pre>\n</div>\n\n<div>\n\t<h2 id=\"next\">Next steps(下一步)</h2>\n\t<p>如果你想做更好的javascript开发,建议你使用一个叫 <a href=\"http://getfirebug.com/\" target=\"_blank\" rel=\"external\">FireBug</a>的firefox插件. 它提供了断点调试(比alert强多了)、观察DOM变化等很多漂亮的功能</p>\n\t<p>如果你还有未解决的问题，或者新的想法与建议，你可以使用jQuery的邮件列表 <a href=\"http://jquery.com/discuss\" target=\"_blank\" rel=\"external\">jQuery mailing\n\tlist</a>.</p>\n\t<p>关于这个指南的任何事情，你可以写<a href=\"mailto:enchos[at]gmx[dot]net\" target=\"_blank\" rel=\"external\">mail</a>给作者或者发表评论在他的日志：<a href=\"http://bassistance.de/index.php/2006/09/12/jquery-getting-started-guide/\" target=\"_blank\" rel=\"external\">blog</a>.</p>\n\n\t<p class=\"log\">关于这个指南的翻译任何事情，你可以写<a href=\"mailto:keel.sike[at]gmail.com\" target=\"_blank\" rel=\"external\">mail</a>给我.或者在 <a href=\"http://cc9c.blogspot.com/\" target=\"_blank\" rel=\"external\">BLOG</a>中留言.</p>\n</div>\n\n\n<div>\n\t<h3>还有什么...</h3>\n\t<p>大大感谢John Resig创造了这么好的library! 感谢jQuery community 为John提供了如此多的咖啡和其他的一切!</p>\n</div>\n\n<h4><a href=\"http://bassistance.de\" target=\"_blank\" rel=\"external\">&copy; 2006, Jörn Zaefferer</a> - last update: 2006-09-12</h4>\n<h4>中文版翻译:<a href=\"http://www.k99k.com/\" target=\"_blank\" rel=\"external\">Keel</a> 上次更新:2006-12-13   --  最后更新: 2009-3-10<!-- 2006-12-13 -->\n<a href=\"http://www.k99k.com\" target=\"_blank\" rel=\"external\">访问本站首页</a></h4>\n<div id=\"ad\">\n<script type=\"text/javascript\"><!--\ngoogle_ad_client = \"pub-9953772310597878\";\n/* jquery-728x90, 创建于 10-4-6 */\ngoogle_ad_slot = \"0735632391\";\ngoogle_ad_width = 728;\ngoogle_ad_height = 90;\n//-->\n</script>\n<script type=\"text/javascript\" src=\"http://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n\n</div>\n<script type=\"text/javascript\">\nvar gaJsHost = ((\"https:\" == document.location.protocol) ? \"https://ssl.\" : \"http://www.\");\ndocument.write(unescape(\"%3Cscript src='\" + gaJsHost + \"google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E\"));\n</script>\n<script type=\"text/javascript\">\ntry {\nvar pageTracker = _gat._getTracker(\"UA-333331-1\");\npageTracker._trackPageview();\n} catch(err) {}</script>\n\n\n</body>\n</html>\n"},{"_content":"\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<!-- saved from url=(0037)http://www.bodurov.com/JsonFormatter/ -->\n<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\n  <title>Collapsible JSON Formatter - view your json code in colors</title>\n<meta name=\"description\" content=\"Collapsible JSON Formatter - view your json code in colors\">\n<meta name=\"keywords\" content=\"Json, Printer, Colorer, Format, Color, Collapsible\">\n<script>\n// we need tabs as spaces and not CSS magin-left\n// in order to ratain format when coping and pasing the code\nwindow.SINGLE_TAB = \"  \";\nwindow.ImgCollapsed = \"images/Collapsed.gif\";\nwindow.ImgExpanded = \"images/Expanded.gif\";\nwindow.QuoteKeys = true;\nfunction $id(id){ return document.getElementById(id); }\nfunction IsArray(obj) {\n  return obj &&\n          typeof obj === 'object' &&\n          typeof obj.length === 'number' &&\n          !(obj.propertyIsEnumerable('length'));\n}\nfunction Process(){\n  SetTab();\n  window.IsCollapsible = $id(\"CollapsibleView\").checked;\n  var json = $id(\"RawJson\").value;\n  var html = \"\";\n  try{\n    if(json == \"\") json = \"\\\"\\\"\";\n    var obj = eval(\"[\"+json+\"]\");\n    html = ProcessObject(obj[0], 0, false, false, false);\n    $id(\"Canvas\").innerHTML = \"<PRE class='CodeContainer'>\"+html+\"</PRE>\";\n  }catch(e){\n    alert(\"JSON is not well formated:\\n\"+e.message);\n    $id(\"Canvas\").innerHTML = \"\";\n  }\n}\nwindow._dateObj = new Date();\nwindow._regexpObj = new RegExp();\nfunction ProcessObject(obj, indent, addComma, isArray, isPropertyContent){\n  var html = \"\";\n  var comma = (addComma) ? \"<span class='Comma'>,</span> \" : \"\";\n  var type = typeof obj;\n  var clpsHtml =\"\";\n  if(IsArray(obj)){\n    if(obj.length == 0){\n      html += GetRow(indent, \"<span class='ArrayBrace'>[ ]</span>\"+comma, isPropertyContent);\n    }else{\n      clpsHtml = window.IsCollapsible ? \"<span><img src=\\\"\"+window.ImgExpanded+\"\\\" onClick=\\\"ExpImgClicked(this)\\\" /></span><span class='collapsible'>\" : \"\";\n      html += GetRow(indent, \"<span class='ArrayBrace'>[</span>\"+clpsHtml, isPropertyContent);\n      for(var i = 0; i < obj.length; i++){\n        html += ProcessObject(obj[i], indent + 1, i < (obj.length - 1), true, false);\n      }\n      clpsHtml = window.IsCollapsible ? \"</span>\" : \"\";\n      html += GetRow(indent, clpsHtml+\"<span class='ArrayBrace'>]</span>\"+comma);\n    }\n  }else if(type == 'object'){\n    if (obj == null){\n        html += FormatLiteral(\"null\", \"\", comma, indent, isArray, \"Null\");\n    }else if (obj.constructor == window._dateObj.constructor) {\n        html += FormatLiteral(\"new Date(\" + obj.getTime() + \") /*\" + obj.toLocaleString()+\"*/\", \"\", comma, indent, isArray, \"Date\");\n    }else if (obj.constructor == window._regexpObj.constructor) {\n        html += FormatLiteral(\"new RegExp(\" + obj + \")\", \"\", comma, indent, isArray, \"RegExp\");\n    }else{\n      var numProps = 0;\n      for(var prop in obj) numProps++;\n      if(numProps == 0){\n        html += GetRow(indent, \"<span class='ObjectBrace'>{ }</span>\"+comma, isPropertyContent);\n      }else{\n        clpsHtml = window.IsCollapsible ? \"<span><img src=\\\"\"+window.ImgExpanded+\"\\\" onClick=\\\"ExpImgClicked(this)\\\" /></span><span class='collapsible'>\" : \"\";\n        html += GetRow(indent, \"<span class='ObjectBrace'>{</span>\"+clpsHtml, isPropertyContent);\n        var j = 0;\n        for(var prop in obj){\n          var quote = window.QuoteKeys ? \"\\\"\" : \"\";\n          html += GetRow(indent + 1, \"<span class='PropertyName'>\"+quote+prop+quote+\"</span>: \"+ProcessObject(obj[prop], indent + 1, ++j < numProps, false, true));\n        }\n        clpsHtml = window.IsCollapsible ? \"</span>\" : \"\";\n        html += GetRow(indent, clpsHtml+\"<span class='ObjectBrace'>}</span>\"+comma);\n      }\n    }\n  }else if(type == 'number'){\n    html += FormatLiteral(obj, \"\", comma, indent, isArray, \"Number\");\n  }else if(type == 'boolean'){\n    html += FormatLiteral(obj, \"\", comma, indent, isArray, \"Boolean\");\n  }else if(type == 'function'){\n    if (obj.constructor == window._regexpObj.constructor) {\n        html += FormatLiteral(\"new RegExp(\" + obj + \")\", \"\", comma, indent, isArray, \"RegExp\");\n    }else{\n        obj = FormatFunction(indent, obj);\n        html += FormatLiteral(obj, \"\", comma, indent, isArray, \"Function\");\n    }\n  }else if(type == 'undefined'){\n    html += FormatLiteral(\"undefined\", \"\", comma, indent, isArray, \"Null\");\n  }else{\n    html += FormatLiteral(obj.toString().split(\"\\\\\").join(\"\\\\\\\\\").split('\"').join('\\\\\"'), \"\\\"\", comma, indent, isArray, \"String\");\n  }\n  return html;\n}\nfunction FormatLiteral(literal, quote, comma, indent, isArray, style){\n  if(typeof literal == 'string')\n    literal = literal.split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\");\n  var str = \"<span class='\"+style+\"'>\"+quote+literal+quote+comma+\"</span>\";\n  if(isArray) str = GetRow(indent, str);\n  return str;\n}\nfunction FormatFunction(indent, obj){\n  var tabs = \"\";\n  for(var i = 0; i < indent; i++) tabs += window.TAB;\n  var funcStrArray = obj.toString().split(\"\\n\");\n  var str = \"\";\n  for(var i = 0; i < funcStrArray.length; i++){\n    str += ((i==0)?\"\":tabs) + funcStrArray[i] + \"\\n\";\n  }\n  return str;\n}\nfunction GetRow(indent, data, isPropertyContent){\n  var tabs = \"\";\n  for(var i = 0; i < indent && !isPropertyContent; i++) tabs += window.TAB;\n  if(data != null && data.length > 0 && data.charAt(data.length-1) != \"\\n\")\n    data = data+\"\\n\";\n  return tabs+data;\n}\nfunction CollapsibleViewClicked(){\n  $id(\"CollapsibleViewDetail\").style.visibility = $id(\"CollapsibleView\").checked ? \"visible\" : \"hidden\";\n  Process();\n}\n\nfunction QuoteKeysClicked(){\n  window.QuoteKeys = $id(\"QuoteKeys\").checked;\n  Process();\n}\n\nfunction CollapseAllClicked(){\n  EnsureIsPopulated();\n  TraverseChildren($id(\"Canvas\"), function(element){\n    if(element.className == 'collapsible'){\n      MakeContentVisible(element, false);\n    }\n  }, 0);\n}\nfunction ExpandAllClicked(){\n  EnsureIsPopulated();\n  TraverseChildren($id(\"Canvas\"), function(element){\n    if(element.className == 'collapsible'){\n      MakeContentVisible(element, true);\n    }\n  }, 0);\n}\nfunction MakeContentVisible(element, visible){\n  var img = element.previousSibling.firstChild;\n  if(!!img.tagName && img.tagName.toLowerCase() == \"img\"){\n    element.style.display = visible ? 'inline' : 'none';\n    element.previousSibling.firstChild.src = visible ? window.ImgExpanded : window.ImgCollapsed;\n  }\n}\nfunction TraverseChildren(element, func, depth){\n  for(var i = 0; i < element.childNodes.length; i++){\n    TraverseChildren(element.childNodes[i], func, depth + 1);\n  }\n  func(element, depth);\n}\nfunction ExpImgClicked(img){\n  var container = img.parentNode.nextSibling;\n  if(!container) return;\n  var disp = \"none\";\n  var src = window.ImgCollapsed;\n  if(container.style.display == \"none\"){\n      disp = \"inline\";\n      src = window.ImgExpanded;\n  }\n  container.style.display = disp;\n  img.src = src;\n}\nfunction CollapseLevel(level){\n  EnsureIsPopulated();\n  TraverseChildren($id(\"Canvas\"), function(element, depth){\n    if(element.className == 'collapsible'){\n      if(depth >= level){\n        MakeContentVisible(element, false);\n      }else{\n        MakeContentVisible(element, true);\n      }\n    }\n  }, 0);\n}\nfunction TabSizeChanged(){\n  Process();\n}\nfunction SetTab(){\n  var select = $id(\"TabSize\");\n  window.TAB = MultiplyString(parseInt(select.options[select.selectedIndex].value), window.SINGLE_TAB);\n}\nfunction EnsureIsPopulated(){\n  if(!$id(\"Canvas\").innerHTML && !!$id(\"RawJson\").value) Process();\n}\nfunction MultiplyString(num, str){\n  var sb =[];\n  for(var i = 0; i < num; i++){\n    sb.push(str);\n  }\n  return sb.join(\"\");\n}\nfunction SelectAllClicked(){\n\n  if(!!document.selection && !!document.selection.empty) {\n    document.selection.empty();\n  } else if(window.getSelection) {\n    var sel = window.getSelection();\n    if(sel.removeAllRanges) {\n      window.getSelection().removeAllRanges();\n    }\n  }\n\n  var range =\n      (!!document.body && !!document.body.createTextRange)\n          ? document.body.createTextRange()\n          : document.createRange();\n\n  if(!!range.selectNode)\n    range.selectNode($id(\"Canvas\"));\n  else if(range.moveToElementText)\n    range.moveToElementText($id(\"Canvas\"));\n\n  if(!!range.select)\n    range.select($id(\"Canvas\"));\n  else\n    window.getSelection().addRange(range);\n}\nfunction LinkToJson(){\n  var val = $id(\"RawJson\").value;\n  val = escape(val.split('/n').join(' ').split('/r').join(' '));\n  $id(\"InvisibleLinkUrl\").value = val;\n  $id(\"InvisibleLink\").submit();\n}\n</script>\n<style>\n*{\n  font-family: Georgia;\n}\n.Canvas\n{\n  font: 10pt Georgia;\n  background-color:#ECECEC;\n  color:#000000;\n  border:solid 1px #CECECE;\n}\n.ObjectBrace\n{\n  color:#00AA00;\n  font-weight:bold;\n}\n.ArrayBrace\n{\n  color:#0033FF;\n  font-weight:bold;\n}\n.PropertyName\n{\n  color:#CC0000;\n  font-weight:bold;\n}\n.String\n{\n  color:#007777;\n}\n.Number\n{\n  color:#AA00AA;\n}\n.Boolean\n{\n  color:#0000FF;\n}\n.Function\n{\n  color:#AA6633;\n  text-decoration:italic;\n}\n.Null\n{\n  color:#0000FF;\n}\n.Comma\n{\n  color:#000000;\n  font-weight:bold;\n}\nPRE.CodeContainer{\n  margin-top:0px;\n  margin-bottom:0px;\n}\nPRE.CodeContainer img{\n  cursor:pointer;\n  border:none;\n  margin-bottom:-1px;\n}\n#CollapsibleViewDetail a{\n  padding-left:10px;\n}\n#ControlsRow{\n  white-space:nowrap;\n  font: 11px Georgia;\n}\n#TabSizeHolder{\n  padding-left:10px;\n  padding-right:10px;\n}\n#HeaderTitle{\n  text-align:right;\n  font-size:11px;\n}\n#HeaderSubTitle{\n  margin-bottom:2px;\n  margin-top:0px\n}\n#RawJson{\n  width:99%;\n  height:130px;\n}\nA.OtherToolsLink { color:#555;text-decoration:none; }\nA.OtherToolsLink:hover { text-decoration:underline; }\n</style>\n</head>\n<body>\n<div id=\"HeaderTitle\"> Quick Json Formatter <span style=\"color:#aaa;font-weight:bold;font-style:italic\">Online</span> 1.0 Copyright (c) 2008-2009 Vladimir Bodurov &nbsp; <a href=\"http://blog.bodurov.com/Formatter-and-colorer-of-raw-JSON-code\">about this tool</a></div>\n<h3 id=\"HeaderSubTitle\">Collapsible JSON Formatter</h3>\n<div>Enter your JSON here: <span style=\"color:#777;font-size:10px\">(Your code will NOT be posted to a server, the program executes on the client)</span></div>\n\n<textarea id=\"RawJson\"></textarea>\n<div id=\"ControlsRow\">\n  <input type=\"button\" value=\"Format\" onclick=\"Process()\">\n  <span id=\"TabSizeHolder\">\n    tab size:\n    <select id=\"TabSize\" onchange=\"TabSizeChanged()\">\n      <option value=\"1\">1</option>\n      <option value=\"2\">2</option>\n      <option value=\"3\" selected=\"true\">3</option>\n      <option value=\"4\">4</option>\n      <option value=\"5\">5</option>\n      <option value=\"6\">6</option>\n    </select>\n  </span>\n  <label for=\"QuoteKeys\">\n    <input type=\"checkbox\" id=\"QuoteKeys\" onclick=\"QuoteKeysClicked()\" checked=\"true\">\n    Keys in Quotes\n  </label>&nbsp;\n  <a href=\"javascript:void(0);\" onclick=\"SelectAllClicked()\">select all</a>\n  &nbsp;\n  <span id=\"CollapsibleViewHolder\">\n      <label for=\"CollapsibleView\">\n        <input type=\"checkbox\" id=\"CollapsibleView\" onclick=\"CollapsibleViewClicked()\" checked=\"true\">\n        Collapsible View\n      </label>\n  </span>\n  <span id=\"CollapsibleViewDetail\">\n    <a href=\"javascript:void(0);\" onclick=\"ExpandAllClicked()\">expand all</a>\n    <a href=\"javascript:void(0);\" onclick=\"CollapseAllClicked()\">collapse all</a>\n    <a href=\"javascript:void(0);\" onclick=\"CollapseLevel(3)\">level 2+</a>\n    <a href=\"javascript:void(0);\" onclick=\"CollapseLevel(4)\">level 3+</a>\n    <a href=\"javascript:void(0);\" onclick=\"CollapseLevel(5)\">level 4+</a>\n    <a href=\"javascript:void(0);\" onclick=\"CollapseLevel(6)\">level 5+</a>\n    <a href=\"javascript:void(0);\" onclick=\"CollapseLevel(7)\">level 6+</a>\n    <a href=\"javascript:void(0);\" onclick=\"CollapseLevel(8)\">level 7+</a>\n    <a href=\"javascript:void(0);\" onclick=\"CollapseLevel(9)\">level 8+</a>\n  </span>\n</div>\n<div id=\"Canvas\" class=\"Canvas\"></div>\n\n\n\n</body></html>","source":"json.html","raw":"\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<!-- saved from url=(0037)http://www.bodurov.com/JsonFormatter/ -->\n<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\n  <title>Collapsible JSON Formatter - view your json code in colors</title>\n<meta name=\"description\" content=\"Collapsible JSON Formatter - view your json code in colors\">\n<meta name=\"keywords\" content=\"Json, Printer, Colorer, Format, Color, Collapsible\">\n<script>\n// we need tabs as spaces and not CSS magin-left\n// in order to ratain format when coping and pasing the code\nwindow.SINGLE_TAB = \"  \";\nwindow.ImgCollapsed = \"images/Collapsed.gif\";\nwindow.ImgExpanded = \"images/Expanded.gif\";\nwindow.QuoteKeys = true;\nfunction $id(id){ return document.getElementById(id); }\nfunction IsArray(obj) {\n  return obj &&\n          typeof obj === 'object' &&\n          typeof obj.length === 'number' &&\n          !(obj.propertyIsEnumerable('length'));\n}\nfunction Process(){\n  SetTab();\n  window.IsCollapsible = $id(\"CollapsibleView\").checked;\n  var json = $id(\"RawJson\").value;\n  var html = \"\";\n  try{\n    if(json == \"\") json = \"\\\"\\\"\";\n    var obj = eval(\"[\"+json+\"]\");\n    html = ProcessObject(obj[0], 0, false, false, false);\n    $id(\"Canvas\").innerHTML = \"<PRE class='CodeContainer'>\"+html+\"</PRE>\";\n  }catch(e){\n    alert(\"JSON is not well formated:\\n\"+e.message);\n    $id(\"Canvas\").innerHTML = \"\";\n  }\n}\nwindow._dateObj = new Date();\nwindow._regexpObj = new RegExp();\nfunction ProcessObject(obj, indent, addComma, isArray, isPropertyContent){\n  var html = \"\";\n  var comma = (addComma) ? \"<span class='Comma'>,</span> \" : \"\";\n  var type = typeof obj;\n  var clpsHtml =\"\";\n  if(IsArray(obj)){\n    if(obj.length == 0){\n      html += GetRow(indent, \"<span class='ArrayBrace'>[ ]</span>\"+comma, isPropertyContent);\n    }else{\n      clpsHtml = window.IsCollapsible ? \"<span><img src=\\\"\"+window.ImgExpanded+\"\\\" onClick=\\\"ExpImgClicked(this)\\\" /></span><span class='collapsible'>\" : \"\";\n      html += GetRow(indent, \"<span class='ArrayBrace'>[</span>\"+clpsHtml, isPropertyContent);\n      for(var i = 0; i < obj.length; i++){\n        html += ProcessObject(obj[i], indent + 1, i < (obj.length - 1), true, false);\n      }\n      clpsHtml = window.IsCollapsible ? \"</span>\" : \"\";\n      html += GetRow(indent, clpsHtml+\"<span class='ArrayBrace'>]</span>\"+comma);\n    }\n  }else if(type == 'object'){\n    if (obj == null){\n        html += FormatLiteral(\"null\", \"\", comma, indent, isArray, \"Null\");\n    }else if (obj.constructor == window._dateObj.constructor) {\n        html += FormatLiteral(\"new Date(\" + obj.getTime() + \") /*\" + obj.toLocaleString()+\"*/\", \"\", comma, indent, isArray, \"Date\");\n    }else if (obj.constructor == window._regexpObj.constructor) {\n        html += FormatLiteral(\"new RegExp(\" + obj + \")\", \"\", comma, indent, isArray, \"RegExp\");\n    }else{\n      var numProps = 0;\n      for(var prop in obj) numProps++;\n      if(numProps == 0){\n        html += GetRow(indent, \"<span class='ObjectBrace'>{ }</span>\"+comma, isPropertyContent);\n      }else{\n        clpsHtml = window.IsCollapsible ? \"<span><img src=\\\"\"+window.ImgExpanded+\"\\\" onClick=\\\"ExpImgClicked(this)\\\" /></span><span class='collapsible'>\" : \"\";\n        html += GetRow(indent, \"<span class='ObjectBrace'>{</span>\"+clpsHtml, isPropertyContent);\n        var j = 0;\n        for(var prop in obj){\n          var quote = window.QuoteKeys ? \"\\\"\" : \"\";\n          html += GetRow(indent + 1, \"<span class='PropertyName'>\"+quote+prop+quote+\"</span>: \"+ProcessObject(obj[prop], indent + 1, ++j < numProps, false, true));\n        }\n        clpsHtml = window.IsCollapsible ? \"</span>\" : \"\";\n        html += GetRow(indent, clpsHtml+\"<span class='ObjectBrace'>}</span>\"+comma);\n      }\n    }\n  }else if(type == 'number'){\n    html += FormatLiteral(obj, \"\", comma, indent, isArray, \"Number\");\n  }else if(type == 'boolean'){\n    html += FormatLiteral(obj, \"\", comma, indent, isArray, \"Boolean\");\n  }else if(type == 'function'){\n    if (obj.constructor == window._regexpObj.constructor) {\n        html += FormatLiteral(\"new RegExp(\" + obj + \")\", \"\", comma, indent, isArray, \"RegExp\");\n    }else{\n        obj = FormatFunction(indent, obj);\n        html += FormatLiteral(obj, \"\", comma, indent, isArray, \"Function\");\n    }\n  }else if(type == 'undefined'){\n    html += FormatLiteral(\"undefined\", \"\", comma, indent, isArray, \"Null\");\n  }else{\n    html += FormatLiteral(obj.toString().split(\"\\\\\").join(\"\\\\\\\\\").split('\"').join('\\\\\"'), \"\\\"\", comma, indent, isArray, \"String\");\n  }\n  return html;\n}\nfunction FormatLiteral(literal, quote, comma, indent, isArray, style){\n  if(typeof literal == 'string')\n    literal = literal.split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\");\n  var str = \"<span class='\"+style+\"'>\"+quote+literal+quote+comma+\"</span>\";\n  if(isArray) str = GetRow(indent, str);\n  return str;\n}\nfunction FormatFunction(indent, obj){\n  var tabs = \"\";\n  for(var i = 0; i < indent; i++) tabs += window.TAB;\n  var funcStrArray = obj.toString().split(\"\\n\");\n  var str = \"\";\n  for(var i = 0; i < funcStrArray.length; i++){\n    str += ((i==0)?\"\":tabs) + funcStrArray[i] + \"\\n\";\n  }\n  return str;\n}\nfunction GetRow(indent, data, isPropertyContent){\n  var tabs = \"\";\n  for(var i = 0; i < indent && !isPropertyContent; i++) tabs += window.TAB;\n  if(data != null && data.length > 0 && data.charAt(data.length-1) != \"\\n\")\n    data = data+\"\\n\";\n  return tabs+data;\n}\nfunction CollapsibleViewClicked(){\n  $id(\"CollapsibleViewDetail\").style.visibility = $id(\"CollapsibleView\").checked ? \"visible\" : \"hidden\";\n  Process();\n}\n\nfunction QuoteKeysClicked(){\n  window.QuoteKeys = $id(\"QuoteKeys\").checked;\n  Process();\n}\n\nfunction CollapseAllClicked(){\n  EnsureIsPopulated();\n  TraverseChildren($id(\"Canvas\"), function(element){\n    if(element.className == 'collapsible'){\n      MakeContentVisible(element, false);\n    }\n  }, 0);\n}\nfunction ExpandAllClicked(){\n  EnsureIsPopulated();\n  TraverseChildren($id(\"Canvas\"), function(element){\n    if(element.className == 'collapsible'){\n      MakeContentVisible(element, true);\n    }\n  }, 0);\n}\nfunction MakeContentVisible(element, visible){\n  var img = element.previousSibling.firstChild;\n  if(!!img.tagName && img.tagName.toLowerCase() == \"img\"){\n    element.style.display = visible ? 'inline' : 'none';\n    element.previousSibling.firstChild.src = visible ? window.ImgExpanded : window.ImgCollapsed;\n  }\n}\nfunction TraverseChildren(element, func, depth){\n  for(var i = 0; i < element.childNodes.length; i++){\n    TraverseChildren(element.childNodes[i], func, depth + 1);\n  }\n  func(element, depth);\n}\nfunction ExpImgClicked(img){\n  var container = img.parentNode.nextSibling;\n  if(!container) return;\n  var disp = \"none\";\n  var src = window.ImgCollapsed;\n  if(container.style.display == \"none\"){\n      disp = \"inline\";\n      src = window.ImgExpanded;\n  }\n  container.style.display = disp;\n  img.src = src;\n}\nfunction CollapseLevel(level){\n  EnsureIsPopulated();\n  TraverseChildren($id(\"Canvas\"), function(element, depth){\n    if(element.className == 'collapsible'){\n      if(depth >= level){\n        MakeContentVisible(element, false);\n      }else{\n        MakeContentVisible(element, true);\n      }\n    }\n  }, 0);\n}\nfunction TabSizeChanged(){\n  Process();\n}\nfunction SetTab(){\n  var select = $id(\"TabSize\");\n  window.TAB = MultiplyString(parseInt(select.options[select.selectedIndex].value), window.SINGLE_TAB);\n}\nfunction EnsureIsPopulated(){\n  if(!$id(\"Canvas\").innerHTML && !!$id(\"RawJson\").value) Process();\n}\nfunction MultiplyString(num, str){\n  var sb =[];\n  for(var i = 0; i < num; i++){\n    sb.push(str);\n  }\n  return sb.join(\"\");\n}\nfunction SelectAllClicked(){\n\n  if(!!document.selection && !!document.selection.empty) {\n    document.selection.empty();\n  } else if(window.getSelection) {\n    var sel = window.getSelection();\n    if(sel.removeAllRanges) {\n      window.getSelection().removeAllRanges();\n    }\n  }\n\n  var range =\n      (!!document.body && !!document.body.createTextRange)\n          ? document.body.createTextRange()\n          : document.createRange();\n\n  if(!!range.selectNode)\n    range.selectNode($id(\"Canvas\"));\n  else if(range.moveToElementText)\n    range.moveToElementText($id(\"Canvas\"));\n\n  if(!!range.select)\n    range.select($id(\"Canvas\"));\n  else\n    window.getSelection().addRange(range);\n}\nfunction LinkToJson(){\n  var val = $id(\"RawJson\").value;\n  val = escape(val.split('/n').join(' ').split('/r').join(' '));\n  $id(\"InvisibleLinkUrl\").value = val;\n  $id(\"InvisibleLink\").submit();\n}\n</script>\n<style>\n*{\n  font-family: Georgia;\n}\n.Canvas\n{\n  font: 10pt Georgia;\n  background-color:#ECECEC;\n  color:#000000;\n  border:solid 1px #CECECE;\n}\n.ObjectBrace\n{\n  color:#00AA00;\n  font-weight:bold;\n}\n.ArrayBrace\n{\n  color:#0033FF;\n  font-weight:bold;\n}\n.PropertyName\n{\n  color:#CC0000;\n  font-weight:bold;\n}\n.String\n{\n  color:#007777;\n}\n.Number\n{\n  color:#AA00AA;\n}\n.Boolean\n{\n  color:#0000FF;\n}\n.Function\n{\n  color:#AA6633;\n  text-decoration:italic;\n}\n.Null\n{\n  color:#0000FF;\n}\n.Comma\n{\n  color:#000000;\n  font-weight:bold;\n}\nPRE.CodeContainer{\n  margin-top:0px;\n  margin-bottom:0px;\n}\nPRE.CodeContainer img{\n  cursor:pointer;\n  border:none;\n  margin-bottom:-1px;\n}\n#CollapsibleViewDetail a{\n  padding-left:10px;\n}\n#ControlsRow{\n  white-space:nowrap;\n  font: 11px Georgia;\n}\n#TabSizeHolder{\n  padding-left:10px;\n  padding-right:10px;\n}\n#HeaderTitle{\n  text-align:right;\n  font-size:11px;\n}\n#HeaderSubTitle{\n  margin-bottom:2px;\n  margin-top:0px\n}\n#RawJson{\n  width:99%;\n  height:130px;\n}\nA.OtherToolsLink { color:#555;text-decoration:none; }\nA.OtherToolsLink:hover { text-decoration:underline; }\n</style>\n</head>\n<body>\n<div id=\"HeaderTitle\"> Quick Json Formatter <span style=\"color:#aaa;font-weight:bold;font-style:italic\">Online</span> 1.0 Copyright (c) 2008-2009 Vladimir Bodurov &nbsp; <a href=\"http://blog.bodurov.com/Formatter-and-colorer-of-raw-JSON-code\">about this tool</a></div>\n<h3 id=\"HeaderSubTitle\">Collapsible JSON Formatter</h3>\n<div>Enter your JSON here: <span style=\"color:#777;font-size:10px\">(Your code will NOT be posted to a server, the program executes on the client)</span></div>\n\n<textarea id=\"RawJson\"></textarea>\n<div id=\"ControlsRow\">\n  <input type=\"button\" value=\"Format\" onclick=\"Process()\">\n  <span id=\"TabSizeHolder\">\n    tab size:\n    <select id=\"TabSize\" onchange=\"TabSizeChanged()\">\n      <option value=\"1\">1</option>\n      <option value=\"2\">2</option>\n      <option value=\"3\" selected=\"true\">3</option>\n      <option value=\"4\">4</option>\n      <option value=\"5\">5</option>\n      <option value=\"6\">6</option>\n    </select>\n  </span>\n  <label for=\"QuoteKeys\">\n    <input type=\"checkbox\" id=\"QuoteKeys\" onclick=\"QuoteKeysClicked()\" checked=\"true\">\n    Keys in Quotes\n  </label>&nbsp;\n  <a href=\"javascript:void(0);\" onclick=\"SelectAllClicked()\">select all</a>\n  &nbsp;\n  <span id=\"CollapsibleViewHolder\">\n      <label for=\"CollapsibleView\">\n        <input type=\"checkbox\" id=\"CollapsibleView\" onclick=\"CollapsibleViewClicked()\" checked=\"true\">\n        Collapsible View\n      </label>\n  </span>\n  <span id=\"CollapsibleViewDetail\">\n    <a href=\"javascript:void(0);\" onclick=\"ExpandAllClicked()\">expand all</a>\n    <a href=\"javascript:void(0);\" onclick=\"CollapseAllClicked()\">collapse all</a>\n    <a href=\"javascript:void(0);\" onclick=\"CollapseLevel(3)\">level 2+</a>\n    <a href=\"javascript:void(0);\" onclick=\"CollapseLevel(4)\">level 3+</a>\n    <a href=\"javascript:void(0);\" onclick=\"CollapseLevel(5)\">level 4+</a>\n    <a href=\"javascript:void(0);\" onclick=\"CollapseLevel(6)\">level 5+</a>\n    <a href=\"javascript:void(0);\" onclick=\"CollapseLevel(7)\">level 6+</a>\n    <a href=\"javascript:void(0);\" onclick=\"CollapseLevel(8)\">level 7+</a>\n    <a href=\"javascript:void(0);\" onclick=\"CollapseLevel(9)\">level 8+</a>\n  </span>\n</div>\n<div id=\"Canvas\" class=\"Canvas\"></div>\n\n\n\n</body></html>","date":"2017-11-02T09:15:40.424Z","updated":"2016-03-09T13:30:50.000Z","path":"json.html","title":"","comments":1,"layout":"page","_id":"cj9ja9jlq0001pvvpfz8ng4iq","content":"\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<!-- saved from url=(0037)http://www.bodurov.com/JsonFormatter/ -->\n<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\n  <title>Collapsible JSON Formatter - view your json code in colors</title>\n<meta name=\"description\" content=\"Collapsible JSON Formatter - view your json code in colors\">\n<meta name=\"keywords\" content=\"Json, Printer, Colorer, Format, Color, Collapsible\">\n<script>\n// we need tabs as spaces and not CSS magin-left\n// in order to ratain format when coping and pasing the code\nwindow.SINGLE_TAB = \"  \";\nwindow.ImgCollapsed = \"images/Collapsed.gif\";\nwindow.ImgExpanded = \"images/Expanded.gif\";\nwindow.QuoteKeys = true;\nfunction $id(id){ return document.getElementById(id); }\nfunction IsArray(obj) {\n  return obj &&\n          typeof obj === 'object' &&\n          typeof obj.length === 'number' &&\n          !(obj.propertyIsEnumerable('length'));\n}\nfunction Process(){\n  SetTab();\n  window.IsCollapsible = $id(\"CollapsibleView\").checked;\n  var json = $id(\"RawJson\").value;\n  var html = \"\";\n  try{\n    if(json == \"\") json = \"\\\"\\\"\";\n    var obj = eval(\"[\"+json+\"]\");\n    html = ProcessObject(obj[0], 0, false, false, false);\n    $id(\"Canvas\").innerHTML = \"<PRE class='CodeContainer'>\"+html+\"</PRE>\";\n  }catch(e){\n    alert(\"JSON is not well formated:\\n\"+e.message);\n    $id(\"Canvas\").innerHTML = \"\";\n  }\n}\nwindow._dateObj = new Date();\nwindow._regexpObj = new RegExp();\nfunction ProcessObject(obj, indent, addComma, isArray, isPropertyContent){\n  var html = \"\";\n  var comma = (addComma) ? \"<span class='Comma'>,</span> \" : \"\";\n  var type = typeof obj;\n  var clpsHtml =\"\";\n  if(IsArray(obj)){\n    if(obj.length == 0){\n      html += GetRow(indent, \"<span class='ArrayBrace'>[ ]</span>\"+comma, isPropertyContent);\n    }else{\n      clpsHtml = window.IsCollapsible ? \"<span><img src=\\\"\"+window.ImgExpanded+\"\\\" onClick=\\\"ExpImgClicked(this)\\\" /></span><span class='collapsible'>\" : \"\";\n      html += GetRow(indent, \"<span class='ArrayBrace'>[</span>\"+clpsHtml, isPropertyContent);\n      for(var i = 0; i < obj.length; i++){\n        html += ProcessObject(obj[i], indent + 1, i < (obj.length - 1), true, false);\n      }\n      clpsHtml = window.IsCollapsible ? \"</span>\" : \"\";\n      html += GetRow(indent, clpsHtml+\"<span class='ArrayBrace'>]</span>\"+comma);\n    }\n  }else if(type == 'object'){\n    if (obj == null){\n        html += FormatLiteral(\"null\", \"\", comma, indent, isArray, \"Null\");\n    }else if (obj.constructor == window._dateObj.constructor) {\n        html += FormatLiteral(\"new Date(\" + obj.getTime() + \") /*\" + obj.toLocaleString()+\"*/\", \"\", comma, indent, isArray, \"Date\");\n    }else if (obj.constructor == window._regexpObj.constructor) {\n        html += FormatLiteral(\"new RegExp(\" + obj + \")\", \"\", comma, indent, isArray, \"RegExp\");\n    }else{\n      var numProps = 0;\n      for(var prop in obj) numProps++;\n      if(numProps == 0){\n        html += GetRow(indent, \"<span class='ObjectBrace'>{ }</span>\"+comma, isPropertyContent);\n      }else{\n        clpsHtml = window.IsCollapsible ? \"<span><img src=\\\"\"+window.ImgExpanded+\"\\\" onClick=\\\"ExpImgClicked(this)\\\" /></span><span class='collapsible'>\" : \"\";\n        html += GetRow(indent, \"<span class='ObjectBrace'>{</span>\"+clpsHtml, isPropertyContent);\n        var j = 0;\n        for(var prop in obj){\n          var quote = window.QuoteKeys ? \"\\\"\" : \"\";\n          html += GetRow(indent + 1, \"<span class='PropertyName'>\"+quote+prop+quote+\"</span>: \"+ProcessObject(obj[prop], indent + 1, ++j < numProps, false, true));\n        }\n        clpsHtml = window.IsCollapsible ? \"</span>\" : \"\";\n        html += GetRow(indent, clpsHtml+\"<span class='ObjectBrace'>}</span>\"+comma);\n      }\n    }\n  }else if(type == 'number'){\n    html += FormatLiteral(obj, \"\", comma, indent, isArray, \"Number\");\n  }else if(type == 'boolean'){\n    html += FormatLiteral(obj, \"\", comma, indent, isArray, \"Boolean\");\n  }else if(type == 'function'){\n    if (obj.constructor == window._regexpObj.constructor) {\n        html += FormatLiteral(\"new RegExp(\" + obj + \")\", \"\", comma, indent, isArray, \"RegExp\");\n    }else{\n        obj = FormatFunction(indent, obj);\n        html += FormatLiteral(obj, \"\", comma, indent, isArray, \"Function\");\n    }\n  }else if(type == 'undefined'){\n    html += FormatLiteral(\"undefined\", \"\", comma, indent, isArray, \"Null\");\n  }else{\n    html += FormatLiteral(obj.toString().split(\"\\\\\").join(\"\\\\\\\\\").split('\"').join('\\\\\"'), \"\\\"\", comma, indent, isArray, \"String\");\n  }\n  return html;\n}\nfunction FormatLiteral(literal, quote, comma, indent, isArray, style){\n  if(typeof literal == 'string')\n    literal = literal.split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\");\n  var str = \"<span class='\"+style+\"'>\"+quote+literal+quote+comma+\"</span>\";\n  if(isArray) str = GetRow(indent, str);\n  return str;\n}\nfunction FormatFunction(indent, obj){\n  var tabs = \"\";\n  for(var i = 0; i < indent; i++) tabs += window.TAB;\n  var funcStrArray = obj.toString().split(\"\\n\");\n  var str = \"\";\n  for(var i = 0; i < funcStrArray.length; i++){\n    str += ((i==0)?\"\":tabs) + funcStrArray[i] + \"\\n\";\n  }\n  return str;\n}\nfunction GetRow(indent, data, isPropertyContent){\n  var tabs = \"\";\n  for(var i = 0; i < indent && !isPropertyContent; i++) tabs += window.TAB;\n  if(data != null && data.length > 0 && data.charAt(data.length-1) != \"\\n\")\n    data = data+\"\\n\";\n  return tabs+data;\n}\nfunction CollapsibleViewClicked(){\n  $id(\"CollapsibleViewDetail\").style.visibility = $id(\"CollapsibleView\").checked ? \"visible\" : \"hidden\";\n  Process();\n}\n\nfunction QuoteKeysClicked(){\n  window.QuoteKeys = $id(\"QuoteKeys\").checked;\n  Process();\n}\n\nfunction CollapseAllClicked(){\n  EnsureIsPopulated();\n  TraverseChildren($id(\"Canvas\"), function(element){\n    if(element.className == 'collapsible'){\n      MakeContentVisible(element, false);\n    }\n  }, 0);\n}\nfunction ExpandAllClicked(){\n  EnsureIsPopulated();\n  TraverseChildren($id(\"Canvas\"), function(element){\n    if(element.className == 'collapsible'){\n      MakeContentVisible(element, true);\n    }\n  }, 0);\n}\nfunction MakeContentVisible(element, visible){\n  var img = element.previousSibling.firstChild;\n  if(!!img.tagName && img.tagName.toLowerCase() == \"img\"){\n    element.style.display = visible ? 'inline' : 'none';\n    element.previousSibling.firstChild.src = visible ? window.ImgExpanded : window.ImgCollapsed;\n  }\n}\nfunction TraverseChildren(element, func, depth){\n  for(var i = 0; i < element.childNodes.length; i++){\n    TraverseChildren(element.childNodes[i], func, depth + 1);\n  }\n  func(element, depth);\n}\nfunction ExpImgClicked(img){\n  var container = img.parentNode.nextSibling;\n  if(!container) return;\n  var disp = \"none\";\n  var src = window.ImgCollapsed;\n  if(container.style.display == \"none\"){\n      disp = \"inline\";\n      src = window.ImgExpanded;\n  }\n  container.style.display = disp;\n  img.src = src;\n}\nfunction CollapseLevel(level){\n  EnsureIsPopulated();\n  TraverseChildren($id(\"Canvas\"), function(element, depth){\n    if(element.className == 'collapsible'){\n      if(depth >= level){\n        MakeContentVisible(element, false);\n      }else{\n        MakeContentVisible(element, true);\n      }\n    }\n  }, 0);\n}\nfunction TabSizeChanged(){\n  Process();\n}\nfunction SetTab(){\n  var select = $id(\"TabSize\");\n  window.TAB = MultiplyString(parseInt(select.options[select.selectedIndex].value), window.SINGLE_TAB);\n}\nfunction EnsureIsPopulated(){\n  if(!$id(\"Canvas\").innerHTML && !!$id(\"RawJson\").value) Process();\n}\nfunction MultiplyString(num, str){\n  var sb =[];\n  for(var i = 0; i < num; i++){\n    sb.push(str);\n  }\n  return sb.join(\"\");\n}\nfunction SelectAllClicked(){\n\n  if(!!document.selection && !!document.selection.empty) {\n    document.selection.empty();\n  } else if(window.getSelection) {\n    var sel = window.getSelection();\n    if(sel.removeAllRanges) {\n      window.getSelection().removeAllRanges();\n    }\n  }\n\n  var range =\n      (!!document.body && !!document.body.createTextRange)\n          ? document.body.createTextRange()\n          : document.createRange();\n\n  if(!!range.selectNode)\n    range.selectNode($id(\"Canvas\"));\n  else if(range.moveToElementText)\n    range.moveToElementText($id(\"Canvas\"));\n\n  if(!!range.select)\n    range.select($id(\"Canvas\"));\n  else\n    window.getSelection().addRange(range);\n}\nfunction LinkToJson(){\n  var val = $id(\"RawJson\").value;\n  val = escape(val.split('/n').join(' ').split('/r').join(' '));\n  $id(\"InvisibleLinkUrl\").value = val;\n  $id(\"InvisibleLink\").submit();\n}\n</script>\n<style>\n*{\n  font-family: Georgia;\n}\n.Canvas\n{\n  font: 10pt Georgia;\n  background-color:#ECECEC;\n  color:#000000;\n  border:solid 1px #CECECE;\n}\n.ObjectBrace\n{\n  color:#00AA00;\n  font-weight:bold;\n}\n.ArrayBrace\n{\n  color:#0033FF;\n  font-weight:bold;\n}\n.PropertyName\n{\n  color:#CC0000;\n  font-weight:bold;\n}\n.String\n{\n  color:#007777;\n}\n.Number\n{\n  color:#AA00AA;\n}\n.Boolean\n{\n  color:#0000FF;\n}\n.Function\n{\n  color:#AA6633;\n  text-decoration:italic;\n}\n.Null\n{\n  color:#0000FF;\n}\n.Comma\n{\n  color:#000000;\n  font-weight:bold;\n}\nPRE.CodeContainer{\n  margin-top:0px;\n  margin-bottom:0px;\n}\nPRE.CodeContainer img{\n  cursor:pointer;\n  border:none;\n  margin-bottom:-1px;\n}\n#CollapsibleViewDetail a{\n  padding-left:10px;\n}\n#ControlsRow{\n  white-space:nowrap;\n  font: 11px Georgia;\n}\n#TabSizeHolder{\n  padding-left:10px;\n  padding-right:10px;\n}\n#HeaderTitle{\n  text-align:right;\n  font-size:11px;\n}\n#HeaderSubTitle{\n  margin-bottom:2px;\n  margin-top:0px\n}\n#RawJson{\n  width:99%;\n  height:130px;\n}\nA.OtherToolsLink { color:#555;text-decoration:none; }\nA.OtherToolsLink:hover { text-decoration:underline; }\n</style>\n</head>\n<body>\n<div id=\"HeaderTitle\"> Quick Json Formatter <span style=\"color:#aaa;font-weight:bold;font-style:italic\">Online</span> 1.0 Copyright (c) 2008-2009 Vladimir Bodurov &nbsp; <a href=\"http://blog.bodurov.com/Formatter-and-colorer-of-raw-JSON-code\" target=\"_blank\" rel=\"external\">about this tool</a></div>\n<h3 id=\"HeaderSubTitle\">Collapsible JSON Formatter</h3>\n<div>Enter your JSON here: <span style=\"color:#777;font-size:10px\">(Your code will NOT be posted to a server, the program executes on the client)</span></div>\n\n<textarea id=\"RawJson\"></textarea>\n<div id=\"ControlsRow\">\n  <input type=\"button\" value=\"Format\" onclick=\"Process()\">\n  <span id=\"TabSizeHolder\">\n    tab size:\n    <select id=\"TabSize\" onchange=\"TabSizeChanged()\">\n      <option value=\"1\">1</option>\n      <option value=\"2\">2</option>\n      <option value=\"3\" selected=\"true\">3</option>\n      <option value=\"4\">4</option>\n      <option value=\"5\">5</option>\n      <option value=\"6\">6</option>\n    </select>\n  </span>\n  <label for=\"QuoteKeys\">\n    <input type=\"checkbox\" id=\"QuoteKeys\" onclick=\"QuoteKeysClicked()\" checked=\"true\">\n    Keys in Quotes\n  </label>&nbsp;\n  <a href=\"javascript:void(0);\" onclick=\"SelectAllClicked()\" target=\"_blank\" rel=\"external\">select all</a>\n  &nbsp;\n  <span id=\"CollapsibleViewHolder\">\n      <label for=\"CollapsibleView\">\n        <input type=\"checkbox\" id=\"CollapsibleView\" onclick=\"CollapsibleViewClicked()\" checked=\"true\">\n        Collapsible View\n      </label>\n  </span>\n  <span id=\"CollapsibleViewDetail\">\n    <a href=\"javascript:void(0);\" onclick=\"ExpandAllClicked()\" target=\"_blank\" rel=\"external\">expand all</a>\n    <a href=\"javascript:void(0);\" onclick=\"CollapseAllClicked()\" target=\"_blank\" rel=\"external\">collapse all</a>\n    <a href=\"javascript:void(0);\" onclick=\"CollapseLevel(3)\" target=\"_blank\" rel=\"external\">level 2+</a>\n    <a href=\"javascript:void(0);\" onclick=\"CollapseLevel(4)\" target=\"_blank\" rel=\"external\">level 3+</a>\n    <a href=\"javascript:void(0);\" onclick=\"CollapseLevel(5)\" target=\"_blank\" rel=\"external\">level 4+</a>\n    <a href=\"javascript:void(0);\" onclick=\"CollapseLevel(6)\" target=\"_blank\" rel=\"external\">level 5+</a>\n    <a href=\"javascript:void(0);\" onclick=\"CollapseLevel(7)\" target=\"_blank\" rel=\"external\">level 6+</a>\n    <a href=\"javascript:void(0);\" onclick=\"CollapseLevel(8)\" target=\"_blank\" rel=\"external\">level 7+</a>\n    <a href=\"javascript:void(0);\" onclick=\"CollapseLevel(9)\" target=\"_blank\" rel=\"external\">level 8+</a>\n  </span>\n</div>\n<div id=\"Canvas\" class=\"Canvas\"></div>\n\n\n\n</body></html>","site":{"data":{}},"excerpt":"","more":"\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<!-- saved from url=(0037)http://www.bodurov.com/JsonFormatter/ -->\n<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\n  <title>Collapsible JSON Formatter - view your json code in colors</title>\n<meta name=\"description\" content=\"Collapsible JSON Formatter - view your json code in colors\">\n<meta name=\"keywords\" content=\"Json, Printer, Colorer, Format, Color, Collapsible\">\n<script>\n// we need tabs as spaces and not CSS magin-left\n// in order to ratain format when coping and pasing the code\nwindow.SINGLE_TAB = \"  \";\nwindow.ImgCollapsed = \"images/Collapsed.gif\";\nwindow.ImgExpanded = \"images/Expanded.gif\";\nwindow.QuoteKeys = true;\nfunction $id(id){ return document.getElementById(id); }\nfunction IsArray(obj) {\n  return obj &&\n          typeof obj === 'object' &&\n          typeof obj.length === 'number' &&\n          !(obj.propertyIsEnumerable('length'));\n}\nfunction Process(){\n  SetTab();\n  window.IsCollapsible = $id(\"CollapsibleView\").checked;\n  var json = $id(\"RawJson\").value;\n  var html = \"\";\n  try{\n    if(json == \"\") json = \"\\\"\\\"\";\n    var obj = eval(\"[\"+json+\"]\");\n    html = ProcessObject(obj[0], 0, false, false, false);\n    $id(\"Canvas\").innerHTML = \"<PRE class='CodeContainer'>\"+html+\"</PRE>\";\n  }catch(e){\n    alert(\"JSON is not well formated:\\n\"+e.message);\n    $id(\"Canvas\").innerHTML = \"\";\n  }\n}\nwindow._dateObj = new Date();\nwindow._regexpObj = new RegExp();\nfunction ProcessObject(obj, indent, addComma, isArray, isPropertyContent){\n  var html = \"\";\n  var comma = (addComma) ? \"<span class='Comma'>,</span> \" : \"\";\n  var type = typeof obj;\n  var clpsHtml =\"\";\n  if(IsArray(obj)){\n    if(obj.length == 0){\n      html += GetRow(indent, \"<span class='ArrayBrace'>[ ]</span>\"+comma, isPropertyContent);\n    }else{\n      clpsHtml = window.IsCollapsible ? \"<span><img src=\\\"\"+window.ImgExpanded+\"\\\" onClick=\\\"ExpImgClicked(this)\\\" /></span><span class='collapsible'>\" : \"\";\n      html += GetRow(indent, \"<span class='ArrayBrace'>[</span>\"+clpsHtml, isPropertyContent);\n      for(var i = 0; i < obj.length; i++){\n        html += ProcessObject(obj[i], indent + 1, i < (obj.length - 1), true, false);\n      }\n      clpsHtml = window.IsCollapsible ? \"</span>\" : \"\";\n      html += GetRow(indent, clpsHtml+\"<span class='ArrayBrace'>]</span>\"+comma);\n    }\n  }else if(type == 'object'){\n    if (obj == null){\n        html += FormatLiteral(\"null\", \"\", comma, indent, isArray, \"Null\");\n    }else if (obj.constructor == window._dateObj.constructor) {\n        html += FormatLiteral(\"new Date(\" + obj.getTime() + \") /*\" + obj.toLocaleString()+\"*/\", \"\", comma, indent, isArray, \"Date\");\n    }else if (obj.constructor == window._regexpObj.constructor) {\n        html += FormatLiteral(\"new RegExp(\" + obj + \")\", \"\", comma, indent, isArray, \"RegExp\");\n    }else{\n      var numProps = 0;\n      for(var prop in obj) numProps++;\n      if(numProps == 0){\n        html += GetRow(indent, \"<span class='ObjectBrace'>{ }</span>\"+comma, isPropertyContent);\n      }else{\n        clpsHtml = window.IsCollapsible ? \"<span><img src=\\\"\"+window.ImgExpanded+\"\\\" onClick=\\\"ExpImgClicked(this)\\\" /></span><span class='collapsible'>\" : \"\";\n        html += GetRow(indent, \"<span class='ObjectBrace'>{</span>\"+clpsHtml, isPropertyContent);\n        var j = 0;\n        for(var prop in obj){\n          var quote = window.QuoteKeys ? \"\\\"\" : \"\";\n          html += GetRow(indent + 1, \"<span class='PropertyName'>\"+quote+prop+quote+\"</span>: \"+ProcessObject(obj[prop], indent + 1, ++j < numProps, false, true));\n        }\n        clpsHtml = window.IsCollapsible ? \"</span>\" : \"\";\n        html += GetRow(indent, clpsHtml+\"<span class='ObjectBrace'>}</span>\"+comma);\n      }\n    }\n  }else if(type == 'number'){\n    html += FormatLiteral(obj, \"\", comma, indent, isArray, \"Number\");\n  }else if(type == 'boolean'){\n    html += FormatLiteral(obj, \"\", comma, indent, isArray, \"Boolean\");\n  }else if(type == 'function'){\n    if (obj.constructor == window._regexpObj.constructor) {\n        html += FormatLiteral(\"new RegExp(\" + obj + \")\", \"\", comma, indent, isArray, \"RegExp\");\n    }else{\n        obj = FormatFunction(indent, obj);\n        html += FormatLiteral(obj, \"\", comma, indent, isArray, \"Function\");\n    }\n  }else if(type == 'undefined'){\n    html += FormatLiteral(\"undefined\", \"\", comma, indent, isArray, \"Null\");\n  }else{\n    html += FormatLiteral(obj.toString().split(\"\\\\\").join(\"\\\\\\\\\").split('\"').join('\\\\\"'), \"\\\"\", comma, indent, isArray, \"String\");\n  }\n  return html;\n}\nfunction FormatLiteral(literal, quote, comma, indent, isArray, style){\n  if(typeof literal == 'string')\n    literal = literal.split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\");\n  var str = \"<span class='\"+style+\"'>\"+quote+literal+quote+comma+\"</span>\";\n  if(isArray) str = GetRow(indent, str);\n  return str;\n}\nfunction FormatFunction(indent, obj){\n  var tabs = \"\";\n  for(var i = 0; i < indent; i++) tabs += window.TAB;\n  var funcStrArray = obj.toString().split(\"\\n\");\n  var str = \"\";\n  for(var i = 0; i < funcStrArray.length; i++){\n    str += ((i==0)?\"\":tabs) + funcStrArray[i] + \"\\n\";\n  }\n  return str;\n}\nfunction GetRow(indent, data, isPropertyContent){\n  var tabs = \"\";\n  for(var i = 0; i < indent && !isPropertyContent; i++) tabs += window.TAB;\n  if(data != null && data.length > 0 && data.charAt(data.length-1) != \"\\n\")\n    data = data+\"\\n\";\n  return tabs+data;\n}\nfunction CollapsibleViewClicked(){\n  $id(\"CollapsibleViewDetail\").style.visibility = $id(\"CollapsibleView\").checked ? \"visible\" : \"hidden\";\n  Process();\n}\n\nfunction QuoteKeysClicked(){\n  window.QuoteKeys = $id(\"QuoteKeys\").checked;\n  Process();\n}\n\nfunction CollapseAllClicked(){\n  EnsureIsPopulated();\n  TraverseChildren($id(\"Canvas\"), function(element){\n    if(element.className == 'collapsible'){\n      MakeContentVisible(element, false);\n    }\n  }, 0);\n}\nfunction ExpandAllClicked(){\n  EnsureIsPopulated();\n  TraverseChildren($id(\"Canvas\"), function(element){\n    if(element.className == 'collapsible'){\n      MakeContentVisible(element, true);\n    }\n  }, 0);\n}\nfunction MakeContentVisible(element, visible){\n  var img = element.previousSibling.firstChild;\n  if(!!img.tagName && img.tagName.toLowerCase() == \"img\"){\n    element.style.display = visible ? 'inline' : 'none';\n    element.previousSibling.firstChild.src = visible ? window.ImgExpanded : window.ImgCollapsed;\n  }\n}\nfunction TraverseChildren(element, func, depth){\n  for(var i = 0; i < element.childNodes.length; i++){\n    TraverseChildren(element.childNodes[i], func, depth + 1);\n  }\n  func(element, depth);\n}\nfunction ExpImgClicked(img){\n  var container = img.parentNode.nextSibling;\n  if(!container) return;\n  var disp = \"none\";\n  var src = window.ImgCollapsed;\n  if(container.style.display == \"none\"){\n      disp = \"inline\";\n      src = window.ImgExpanded;\n  }\n  container.style.display = disp;\n  img.src = src;\n}\nfunction CollapseLevel(level){\n  EnsureIsPopulated();\n  TraverseChildren($id(\"Canvas\"), function(element, depth){\n    if(element.className == 'collapsible'){\n      if(depth >= level){\n        MakeContentVisible(element, false);\n      }else{\n        MakeContentVisible(element, true);\n      }\n    }\n  }, 0);\n}\nfunction TabSizeChanged(){\n  Process();\n}\nfunction SetTab(){\n  var select = $id(\"TabSize\");\n  window.TAB = MultiplyString(parseInt(select.options[select.selectedIndex].value), window.SINGLE_TAB);\n}\nfunction EnsureIsPopulated(){\n  if(!$id(\"Canvas\").innerHTML && !!$id(\"RawJson\").value) Process();\n}\nfunction MultiplyString(num, str){\n  var sb =[];\n  for(var i = 0; i < num; i++){\n    sb.push(str);\n  }\n  return sb.join(\"\");\n}\nfunction SelectAllClicked(){\n\n  if(!!document.selection && !!document.selection.empty) {\n    document.selection.empty();\n  } else if(window.getSelection) {\n    var sel = window.getSelection();\n    if(sel.removeAllRanges) {\n      window.getSelection().removeAllRanges();\n    }\n  }\n\n  var range =\n      (!!document.body && !!document.body.createTextRange)\n          ? document.body.createTextRange()\n          : document.createRange();\n\n  if(!!range.selectNode)\n    range.selectNode($id(\"Canvas\"));\n  else if(range.moveToElementText)\n    range.moveToElementText($id(\"Canvas\"));\n\n  if(!!range.select)\n    range.select($id(\"Canvas\"));\n  else\n    window.getSelection().addRange(range);\n}\nfunction LinkToJson(){\n  var val = $id(\"RawJson\").value;\n  val = escape(val.split('/n').join(' ').split('/r').join(' '));\n  $id(\"InvisibleLinkUrl\").value = val;\n  $id(\"InvisibleLink\").submit();\n}\n</script>\n<style>\n*{\n  font-family: Georgia;\n}\n.Canvas\n{\n  font: 10pt Georgia;\n  background-color:#ECECEC;\n  color:#000000;\n  border:solid 1px #CECECE;\n}\n.ObjectBrace\n{\n  color:#00AA00;\n  font-weight:bold;\n}\n.ArrayBrace\n{\n  color:#0033FF;\n  font-weight:bold;\n}\n.PropertyName\n{\n  color:#CC0000;\n  font-weight:bold;\n}\n.String\n{\n  color:#007777;\n}\n.Number\n{\n  color:#AA00AA;\n}\n.Boolean\n{\n  color:#0000FF;\n}\n.Function\n{\n  color:#AA6633;\n  text-decoration:italic;\n}\n.Null\n{\n  color:#0000FF;\n}\n.Comma\n{\n  color:#000000;\n  font-weight:bold;\n}\nPRE.CodeContainer{\n  margin-top:0px;\n  margin-bottom:0px;\n}\nPRE.CodeContainer img{\n  cursor:pointer;\n  border:none;\n  margin-bottom:-1px;\n}\n#CollapsibleViewDetail a{\n  padding-left:10px;\n}\n#ControlsRow{\n  white-space:nowrap;\n  font: 11px Georgia;\n}\n#TabSizeHolder{\n  padding-left:10px;\n  padding-right:10px;\n}\n#HeaderTitle{\n  text-align:right;\n  font-size:11px;\n}\n#HeaderSubTitle{\n  margin-bottom:2px;\n  margin-top:0px\n}\n#RawJson{\n  width:99%;\n  height:130px;\n}\nA.OtherToolsLink { color:#555;text-decoration:none; }\nA.OtherToolsLink:hover { text-decoration:underline; }\n</style>\n</head>\n<body>\n<div id=\"HeaderTitle\"> Quick Json Formatter <span style=\"color:#aaa;font-weight:bold;font-style:italic\">Online</span> 1.0 Copyright (c) 2008-2009 Vladimir Bodurov &nbsp; <a href=\"http://blog.bodurov.com/Formatter-and-colorer-of-raw-JSON-code\" target=\"_blank\" rel=\"external\">about this tool</a></div>\n<h3 id=\"HeaderSubTitle\">Collapsible JSON Formatter</h3>\n<div>Enter your JSON here: <span style=\"color:#777;font-size:10px\">(Your code will NOT be posted to a server, the program executes on the client)</span></div>\n\n<textarea id=\"RawJson\"></textarea>\n<div id=\"ControlsRow\">\n  <input type=\"button\" value=\"Format\" onclick=\"Process()\">\n  <span id=\"TabSizeHolder\">\n    tab size:\n    <select id=\"TabSize\" onchange=\"TabSizeChanged()\">\n      <option value=\"1\">1</option>\n      <option value=\"2\">2</option>\n      <option value=\"3\" selected=\"true\">3</option>\n      <option value=\"4\">4</option>\n      <option value=\"5\">5</option>\n      <option value=\"6\">6</option>\n    </select>\n  </span>\n  <label for=\"QuoteKeys\">\n    <input type=\"checkbox\" id=\"QuoteKeys\" onclick=\"QuoteKeysClicked()\" checked=\"true\">\n    Keys in Quotes\n  </label>&nbsp;\n  <a href=\"javascript:void(0);\" onclick=\"SelectAllClicked()\" target=\"_blank\" rel=\"external\">select all</a>\n  &nbsp;\n  <span id=\"CollapsibleViewHolder\">\n      <label for=\"CollapsibleView\">\n        <input type=\"checkbox\" id=\"CollapsibleView\" onclick=\"CollapsibleViewClicked()\" checked=\"true\">\n        Collapsible View\n      </label>\n  </span>\n  <span id=\"CollapsibleViewDetail\">\n    <a href=\"javascript:void(0);\" onclick=\"ExpandAllClicked()\" target=\"_blank\" rel=\"external\">expand all</a>\n    <a href=\"javascript:void(0);\" onclick=\"CollapseAllClicked()\" target=\"_blank\" rel=\"external\">collapse all</a>\n    <a href=\"javascript:void(0);\" onclick=\"CollapseLevel(3)\" target=\"_blank\" rel=\"external\">level 2+</a>\n    <a href=\"javascript:void(0);\" onclick=\"CollapseLevel(4)\" target=\"_blank\" rel=\"external\">level 3+</a>\n    <a href=\"javascript:void(0);\" onclick=\"CollapseLevel(5)\" target=\"_blank\" rel=\"external\">level 4+</a>\n    <a href=\"javascript:void(0);\" onclick=\"CollapseLevel(6)\" target=\"_blank\" rel=\"external\">level 5+</a>\n    <a href=\"javascript:void(0);\" onclick=\"CollapseLevel(7)\" target=\"_blank\" rel=\"external\">level 6+</a>\n    <a href=\"javascript:void(0);\" onclick=\"CollapseLevel(8)\" target=\"_blank\" rel=\"external\">level 7+</a>\n    <a href=\"javascript:void(0);\" onclick=\"CollapseLevel(9)\" target=\"_blank\" rel=\"external\">level 8+</a>\n  </span>\n</div>\n<div id=\"Canvas\" class=\"Canvas\"></div>\n\n\n\n</body></html>"},{"title":"about","date":"2015-11-06T15:53:01.000Z","_content":"\n# 关于Keel\n-----\n改变不了世界，只能改变自己...\n\n愿世界和平...\n\n-----\n\n\n{% cq %}\n得到智慧的唯一办法，就是用青春去买。\n\n-Jack London\n{% endcq %}\n","source":"about/index.md","raw":"title: about\ndate: 2015-11-06 23:53:01\n---\n\n# 关于Keel\n-----\n改变不了世界，只能改变自己...\n\n愿世界和平...\n\n-----\n\n\n{% cq %}\n得到智慧的唯一办法，就是用青春去买。\n\n-Jack London\n{% endcq %}\n","updated":"2017-11-02T10:58:41.820Z","path":"about/index.html","comments":1,"layout":"page","_id":"cj9ja9jnx0003pvvp4vag2fj1","content":"<h1 id=\"关于Keel\"><a href=\"#关于Keel\" class=\"headerlink\" title=\"关于Keel\"></a>关于Keel</h1><hr>\n<p>改变不了世界，只能改变自己…</p>\n<p>愿世界和平…</p>\n<hr>\n<blockquote class=\"blockquote-center\"><p>得到智慧的唯一办法，就是用青春去买。</p>\n<p>-Jack London</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"关于Keel\"><a href=\"#关于Keel\" class=\"headerlink\" title=\"关于Keel\"></a>关于Keel</h1><hr>\n<p>改变不了世界，只能改变自己…</p>\n<p>愿世界和平…</p>\n<hr>\n<blockquote class=\"blockquote-center\"><p>得到智慧的唯一办法，就是用青春去买。</p>\n<p>-Jack London</p>\n</blockquote>\n"},{"title":"categories","date":"2015-11-06T15:51:53.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"title: categories\ndate: 2015-11-06 23:51:53\ntype: \"categories\"\ncomments: false\n---\n","updated":"2015-11-06T15:52:34.000Z","path":"categories/index.html","layout":"page","_id":"cj9ja9jo10005pvvppsydzgok","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Tagcloud","date":"2015-11-06T15:48:43.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"title: Tagcloud\ndate: 2015-11-06 23:48:43\ntype: \"tags\"\ncomments: false\n---\n","updated":"2015-11-06T15:50:37.000Z","path":"tags/index.html","layout":"page","_id":"cj9ja9jvh0015pvvpd6rw1sut","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"坑002:在mac上使用不同的ssh key访问不同的git服务端","date":"2015-11-09T14:15:00.000Z","_content":"# 缘起\n一个ssh key绑定了一个github账号之后,无法再次绑定到另一个github账号,但现在需要在同一台mac上访问两个github账号下的repo,比如说一个私人的,一个工作的,怎么办?\n\n# 填坑\n此坑本道祭了道 **\"寻龙符\"** 搞定! 也就是google了一下,嘿嘿,现总结如下:\n\n## 总体思路:\n1. 如果需要访问两个不同的github账号的repo,则需要两个ssh key分别绑定到这两个github账号上.\n2. 需要调整ssh配置和本地git项目的remote配置,使之分别对应到不同的ssh key上去.\n\n<!-- more -->\n## 填坑法:\n1. 生成一个新的ssh key,首先建议将~/.ssh目录备个份,`cp -r ~/.ssh ~/ssh_bak`,然后再执行以下指令,注意在提示保存位置时使用不同的文件名:\n  ```json\n  $ cd ~/.ssh\n  $ ssh-keygen -t rsa -C \"your_email@youremail.com\"\n  ```\n  好了之后,.ssh目录下应该多了一对公钥和私钥,为了好举例,我再生成一个,就变成了这样:\n  ```json\n  -rw-------   1 abc  staff   179  5  2 3:06 id_rsa\n  -rw-r--r--   1 abc  staff    10  5  2 3:06 id_rsa.pub\n  -rw-------   1 abc  staff   326 11  9 6:12 id_rsa_abc\n  -rw-r--r--   1 abc  staff    37 11  9 6:12 id_rsa_abc.pub\n  -rw-------   1 abc  staff   326 11  9 6:12 id_rsa_xyz\n  -rw-r--r--   1 abc  staff    37 11  9 6:12 id_rsa_xyz.pub\n  ```\n  生成之后,记得把id_rsa_abc.pub添加到对应的github账号中去.\n2. 把这两个key连同原来的key进行添加:\n  ```json\n  $ ssh-add ~/.ssh/id_rsa\n  $ ssh-add ~/.ssh/id_rsa_abc\n  $ ssh-add ~/.ssh/id_rsa_xyz\n  ```\n  查看添加结果:\n  ```json\n  $ ssh-add -l\n  ```\n3. 配置ssh的config:\n    ```json\n    $ vim ~/.ssh/config\n    ```\n    内容如下:\n    ```json\n    Host abc-github\n        HostName github.com\n        User git\n        IdentityFile ~/.ssh/id_rsa_abc\n    Host xyz-github\n        HostName github.com\n        User git\n        IdentityFile ~/.ssh/id_rsa_xyz\n    ```\n    注意这里第一行的Host实际上是一个别名,这个别名大有用处,第二行的HostName是真正的域名,第三行不解释,第四行就是ssh key的位置,那么如果还有更多的key,也是可以如法泡制的.\n4. 修改git项目的remote配置,这里我就直接修改`项目dir/.git/config`这个文件的remote部分了.\n  ```json\n  [remote \"origin\"]\n          url = git@abc-github:loyoo/testAAA.git\n          fetch = +refs/heads/*:refs/remotes/origin/*\n  ```\n  看见了没,这里用到了之前提到的 **别名** ,替换了原来的`github.com`,这就是解决问题的关键! 其实这样就结束了,这个项目现在就能使用id_rsa_abc来进行fetch和push操作了.\n\n# 总结\n网上的帮助有不少,但都没直接讲清楚这个 **别名** 的意思,有的写成了abc.github.com,特别容易造成误会,子域名?难道我还要改下hosts?\n其实就是别名而已.当然,如果你还有gitcafe或者oschina的账号,也是可以同上处理的.\n\n\n","source":"_posts/github-multiple-ssh-key.md","raw":"title: 坑002:在mac上使用不同的ssh key访问不同的git服务端\ndate: 2015-11-09 22:15:00\ntags:\n- github\n- ssh\n- git\ncategories: git\n---\n# 缘起\n一个ssh key绑定了一个github账号之后,无法再次绑定到另一个github账号,但现在需要在同一台mac上访问两个github账号下的repo,比如说一个私人的,一个工作的,怎么办?\n\n# 填坑\n此坑本道祭了道 **\"寻龙符\"** 搞定! 也就是google了一下,嘿嘿,现总结如下:\n\n## 总体思路:\n1. 如果需要访问两个不同的github账号的repo,则需要两个ssh key分别绑定到这两个github账号上.\n2. 需要调整ssh配置和本地git项目的remote配置,使之分别对应到不同的ssh key上去.\n\n<!-- more -->\n## 填坑法:\n1. 生成一个新的ssh key,首先建议将~/.ssh目录备个份,`cp -r ~/.ssh ~/ssh_bak`,然后再执行以下指令,注意在提示保存位置时使用不同的文件名:\n  ```json\n  $ cd ~/.ssh\n  $ ssh-keygen -t rsa -C \"your_email@youremail.com\"\n  ```\n  好了之后,.ssh目录下应该多了一对公钥和私钥,为了好举例,我再生成一个,就变成了这样:\n  ```json\n  -rw-------   1 abc  staff   179  5  2 3:06 id_rsa\n  -rw-r--r--   1 abc  staff    10  5  2 3:06 id_rsa.pub\n  -rw-------   1 abc  staff   326 11  9 6:12 id_rsa_abc\n  -rw-r--r--   1 abc  staff    37 11  9 6:12 id_rsa_abc.pub\n  -rw-------   1 abc  staff   326 11  9 6:12 id_rsa_xyz\n  -rw-r--r--   1 abc  staff    37 11  9 6:12 id_rsa_xyz.pub\n  ```\n  生成之后,记得把id_rsa_abc.pub添加到对应的github账号中去.\n2. 把这两个key连同原来的key进行添加:\n  ```json\n  $ ssh-add ~/.ssh/id_rsa\n  $ ssh-add ~/.ssh/id_rsa_abc\n  $ ssh-add ~/.ssh/id_rsa_xyz\n  ```\n  查看添加结果:\n  ```json\n  $ ssh-add -l\n  ```\n3. 配置ssh的config:\n    ```json\n    $ vim ~/.ssh/config\n    ```\n    内容如下:\n    ```json\n    Host abc-github\n        HostName github.com\n        User git\n        IdentityFile ~/.ssh/id_rsa_abc\n    Host xyz-github\n        HostName github.com\n        User git\n        IdentityFile ~/.ssh/id_rsa_xyz\n    ```\n    注意这里第一行的Host实际上是一个别名,这个别名大有用处,第二行的HostName是真正的域名,第三行不解释,第四行就是ssh key的位置,那么如果还有更多的key,也是可以如法泡制的.\n4. 修改git项目的remote配置,这里我就直接修改`项目dir/.git/config`这个文件的remote部分了.\n  ```json\n  [remote \"origin\"]\n          url = git@abc-github:loyoo/testAAA.git\n          fetch = +refs/heads/*:refs/remotes/origin/*\n  ```\n  看见了没,这里用到了之前提到的 **别名** ,替换了原来的`github.com`,这就是解决问题的关键! 其实这样就结束了,这个项目现在就能使用id_rsa_abc来进行fetch和push操作了.\n\n# 总结\n网上的帮助有不少,但都没直接讲清楚这个 **别名** 的意思,有的写成了abc.github.com,特别容易造成误会,子域名?难道我还要改下hosts?\n其实就是别名而已.当然,如果你还有gitcafe或者oschina的账号,也是可以同上处理的.\n\n\n","slug":"github-multiple-ssh-key","published":1,"updated":"2015-11-09T16:34:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9ja9jnr0002pvvpo8slqv4v","content":"<h1 id=\"缘起\"><a href=\"#缘起\" class=\"headerlink\" title=\"缘起\"></a>缘起</h1><p>一个ssh key绑定了一个github账号之后,无法再次绑定到另一个github账号,但现在需要在同一台mac上访问两个github账号下的repo,比如说一个私人的,一个工作的,怎么办?</p>\n<h1 id=\"填坑\"><a href=\"#填坑\" class=\"headerlink\" title=\"填坑\"></a>填坑</h1><p>此坑本道祭了道 <strong>“寻龙符”</strong> 搞定! 也就是google了一下,嘿嘿,现总结如下:</p>\n<h2 id=\"总体思路\"><a href=\"#总体思路\" class=\"headerlink\" title=\"总体思路:\"></a>总体思路:</h2><ol>\n<li>如果需要访问两个不同的github账号的repo,则需要两个ssh key分别绑定到这两个github账号上.</li>\n<li>需要调整ssh配置和本地git项目的remote配置,使之分别对应到不同的ssh key上去.</li>\n</ol>\n<a id=\"more\"></a>\n<h2 id=\"填坑法\"><a href=\"#填坑法\" class=\"headerlink\" title=\"填坑法:\"></a>填坑法:</h2><ol>\n<li><p>生成一个新的ssh key,首先建议将~/.ssh目录备个份,<code>cp -r ~/.ssh ~/ssh_bak</code>,然后再执行以下指令,注意在提示保存位置时使用不同的文件名:</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ cd ~/.ssh</div><div class=\"line\">$ ssh-keygen -t rsa -C \"your_email@youremail.com\"</div></pre></td></tr></table></figure>\n<p>好了之后,.ssh目录下应该多了一对公钥和私钥,为了好举例,我再生成一个,就变成了这样:</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">-rw-------   1 abc  staff   179  5  2 3:06 id_rsa</div><div class=\"line\">-rw-r--r--   1 abc  staff    10  5  2 3:06 id_rsa.pub</div><div class=\"line\">-rw-------   1 abc  staff   326 11  9 6:12 id_rsa_abc</div><div class=\"line\">-rw-r--r--   1 abc  staff    37 11  9 6:12 id_rsa_abc.pub</div><div class=\"line\">-rw-------   1 abc  staff   326 11  9 6:12 id_rsa_xyz</div><div class=\"line\">-rw-r--r--   1 abc  staff    37 11  9 6:12 id_rsa_xyz.pub</div></pre></td></tr></table></figure>\n<p>生成之后,记得把id_rsa_abc.pub添加到对应的github账号中去.</p>\n</li>\n<li><p>把这两个key连同原来的key进行添加:</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ssh-add ~/.ssh/id_rsa</div><div class=\"line\">$ ssh-add ~/.ssh/id_rsa_abc</div><div class=\"line\">$ ssh-add ~/.ssh/id_rsa_xyz</div></pre></td></tr></table></figure>\n<p>查看添加结果:</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ssh-add -l</div></pre></td></tr></table></figure>\n</li>\n<li><p>配置ssh的config:</p>\n <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ vim ~/.ssh/config</div></pre></td></tr></table></figure>\n<p> 内容如下:</p>\n <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">Host abc-github</div><div class=\"line\">    HostName github.com</div><div class=\"line\">    User git</div><div class=\"line\">    IdentityFile ~/.ssh/id_rsa_abc</div><div class=\"line\">Host xyz-github</div><div class=\"line\">    HostName github.com</div><div class=\"line\">    User git</div><div class=\"line\">    IdentityFile ~/.ssh/id_rsa_xyz</div></pre></td></tr></table></figure>\n<p> 注意这里第一行的Host实际上是一个别名,这个别名大有用处,第二行的HostName是真正的域名,第三行不解释,第四行就是ssh key的位置,那么如果还有更多的key,也是可以如法泡制的.</p>\n</li>\n<li><p>修改git项目的remote配置,这里我就直接修改<code>项目dir/.git/config</code>这个文件的remote部分了.</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">[remote <span class=\"string\">\"origin\"</span>]</div><div class=\"line\">        url = git@abc-github:loyoo/testAAA.git</div><div class=\"line\">        fetch = +refs/heads/*:refs/remotes/origin/*</div></pre></td></tr></table></figure>\n<p>看见了没,这里用到了之前提到的 <strong>别名</strong> ,替换了原来的<code>github.com</code>,这就是解决问题的关键! 其实这样就结束了,这个项目现在就能使用id_rsa_abc来进行fetch和push操作了.</p>\n</li>\n</ol>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>网上的帮助有不少,但都没直接讲清楚这个 <strong>别名</strong> 的意思,有的写成了abc.github.com,特别容易造成误会,子域名?难道我还要改下hosts?<br>其实就是别名而已.当然,如果你还有gitcafe或者oschina的账号,也是可以同上处理的.</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"缘起\"><a href=\"#缘起\" class=\"headerlink\" title=\"缘起\"></a>缘起</h1><p>一个ssh key绑定了一个github账号之后,无法再次绑定到另一个github账号,但现在需要在同一台mac上访问两个github账号下的repo,比如说一个私人的,一个工作的,怎么办?</p>\n<h1 id=\"填坑\"><a href=\"#填坑\" class=\"headerlink\" title=\"填坑\"></a>填坑</h1><p>此坑本道祭了道 <strong>“寻龙符”</strong> 搞定! 也就是google了一下,嘿嘿,现总结如下:</p>\n<h2 id=\"总体思路\"><a href=\"#总体思路\" class=\"headerlink\" title=\"总体思路:\"></a>总体思路:</h2><ol>\n<li>如果需要访问两个不同的github账号的repo,则需要两个ssh key分别绑定到这两个github账号上.</li>\n<li>需要调整ssh配置和本地git项目的remote配置,使之分别对应到不同的ssh key上去.</li>\n</ol>","more":"<h2 id=\"填坑法\"><a href=\"#填坑法\" class=\"headerlink\" title=\"填坑法:\"></a>填坑法:</h2><ol>\n<li><p>生成一个新的ssh key,首先建议将~/.ssh目录备个份,<code>cp -r ~/.ssh ~/ssh_bak</code>,然后再执行以下指令,注意在提示保存位置时使用不同的文件名:</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ cd ~/.ssh</div><div class=\"line\">$ ssh-keygen -t rsa -C \"your_email@youremail.com\"</div></pre></td></tr></table></figure>\n<p>好了之后,.ssh目录下应该多了一对公钥和私钥,为了好举例,我再生成一个,就变成了这样:</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">-rw-------   1 abc  staff   179  5  2 3:06 id_rsa</div><div class=\"line\">-rw-r--r--   1 abc  staff    10  5  2 3:06 id_rsa.pub</div><div class=\"line\">-rw-------   1 abc  staff   326 11  9 6:12 id_rsa_abc</div><div class=\"line\">-rw-r--r--   1 abc  staff    37 11  9 6:12 id_rsa_abc.pub</div><div class=\"line\">-rw-------   1 abc  staff   326 11  9 6:12 id_rsa_xyz</div><div class=\"line\">-rw-r--r--   1 abc  staff    37 11  9 6:12 id_rsa_xyz.pub</div></pre></td></tr></table></figure>\n<p>生成之后,记得把id_rsa_abc.pub添加到对应的github账号中去.</p>\n</li>\n<li><p>把这两个key连同原来的key进行添加:</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ssh-add ~/.ssh/id_rsa</div><div class=\"line\">$ ssh-add ~/.ssh/id_rsa_abc</div><div class=\"line\">$ ssh-add ~/.ssh/id_rsa_xyz</div></pre></td></tr></table></figure>\n<p>查看添加结果:</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ssh-add -l</div></pre></td></tr></table></figure>\n</li>\n<li><p>配置ssh的config:</p>\n <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ vim ~/.ssh/config</div></pre></td></tr></table></figure>\n<p> 内容如下:</p>\n <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">Host abc-github</div><div class=\"line\">    HostName github.com</div><div class=\"line\">    User git</div><div class=\"line\">    IdentityFile ~/.ssh/id_rsa_abc</div><div class=\"line\">Host xyz-github</div><div class=\"line\">    HostName github.com</div><div class=\"line\">    User git</div><div class=\"line\">    IdentityFile ~/.ssh/id_rsa_xyz</div></pre></td></tr></table></figure>\n<p> 注意这里第一行的Host实际上是一个别名,这个别名大有用处,第二行的HostName是真正的域名,第三行不解释,第四行就是ssh key的位置,那么如果还有更多的key,也是可以如法泡制的.</p>\n</li>\n<li><p>修改git项目的remote配置,这里我就直接修改<code>项目dir/.git/config</code>这个文件的remote部分了.</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">[remote <span class=\"string\">\"origin\"</span>]</div><div class=\"line\">        url = git@abc-github:loyoo/testAAA.git</div><div class=\"line\">        fetch = +refs/heads/*:refs/remotes/origin/*</div></pre></td></tr></table></figure>\n<p>看见了没,这里用到了之前提到的 <strong>别名</strong> ,替换了原来的<code>github.com</code>,这就是解决问题的关键! 其实这样就结束了,这个项目现在就能使用id_rsa_abc来进行fetch和push操作了.</p>\n</li>\n</ol>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>网上的帮助有不少,但都没直接讲清楚这个 <strong>别名</strong> 的意思,有的写成了abc.github.com,特别容易造成误会,子域名?难道我还要改下hosts?<br>其实就是别名而已.当然,如果你还有gitcafe或者oschina的账号,也是可以同上处理的.</p>"},{"title":"坑003:也谈node.js开发中的坑","date":"2015-12-09T13:12:00.000Z","_content":"# 缘起\nnode.js因为javascript的缘故,存在各种大大小小的坑,尽管各种注意,仍然免不了中招.\n\n# 继承于javascript的坑\n## 弱类型\n  1. 判断对象是否不存在使用if(!obj), 此时如果obj为`''` 或 `0` 或 `false`,也会误认为不存在;\n  2. 字符串连接,一般会自动转成string, 但不巧如果头两个正好可以转数字,那么它会按数字相加.如:\n    ```\n    var a = 1,b = 'b',c = 10;\n    var s1 = a + c + b;\n    var s2 = '' + a + c + b;\n    console.log(s1); //\"11b\"\n    console.log(s2); //\"110b\"\n    ```\n\n<!-- more -->\n\n# node专属坑\n## 异步处理\n  1. error处理忘记return.\n  2. 循环中嵌套异步方法,如果循环次数不多,可使用递归的方式解决.\n  3. 一个异步方法中处理不当有可能会多次触发callback,又或者是一个callback都没触发,需要仔细处理逻辑流程.\n## http\n  1. request结束的event\n  2. 注意请求处理类型,有时候get和post方式不对,则请求看上去没有处理\n  3. 做proxy转发的时候注意http的head部分,请把host填对了再转\n  4.\n## 错误堆栈\n  1. node的错误堆栈有时根本看不出问题在哪,最好是自己来包装和抛出有用的错误信息,为此我写了vlog模块.\n## 其他\n  1. 随时添加吧...\n\n","source":"_posts/nodejs-trap.md","raw":"title: 坑003:也谈node.js开发中的坑\ndate: 2015-12-09 21:12:00\ntags:\n- node\n- javascript\ncategories: node\n---\n# 缘起\nnode.js因为javascript的缘故,存在各种大大小小的坑,尽管各种注意,仍然免不了中招.\n\n# 继承于javascript的坑\n## 弱类型\n  1. 判断对象是否不存在使用if(!obj), 此时如果obj为`''` 或 `0` 或 `false`,也会误认为不存在;\n  2. 字符串连接,一般会自动转成string, 但不巧如果头两个正好可以转数字,那么它会按数字相加.如:\n    ```\n    var a = 1,b = 'b',c = 10;\n    var s1 = a + c + b;\n    var s2 = '' + a + c + b;\n    console.log(s1); //\"11b\"\n    console.log(s2); //\"110b\"\n    ```\n\n<!-- more -->\n\n# node专属坑\n## 异步处理\n  1. error处理忘记return.\n  2. 循环中嵌套异步方法,如果循环次数不多,可使用递归的方式解决.\n  3. 一个异步方法中处理不当有可能会多次触发callback,又或者是一个callback都没触发,需要仔细处理逻辑流程.\n## http\n  1. request结束的event\n  2. 注意请求处理类型,有时候get和post方式不对,则请求看上去没有处理\n  3. 做proxy转发的时候注意http的head部分,请把host填对了再转\n  4.\n## 错误堆栈\n  1. node的错误堆栈有时根本看不出问题在哪,最好是自己来包装和抛出有用的错误信息,为此我写了vlog模块.\n## 其他\n  1. 随时添加吧...\n\n","slug":"nodejs-trap","published":1,"updated":"2016-05-03T14:01:33.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9ja9jny0004pvvph3dml8to","content":"<h1 id=\"缘起\"><a href=\"#缘起\" class=\"headerlink\" title=\"缘起\"></a>缘起</h1><p>node.js因为javascript的缘故,存在各种大大小小的坑,尽管各种注意,仍然免不了中招.</p>\n<h1 id=\"继承于javascript的坑\"><a href=\"#继承于javascript的坑\" class=\"headerlink\" title=\"继承于javascript的坑\"></a>继承于javascript的坑</h1><h2 id=\"弱类型\"><a href=\"#弱类型\" class=\"headerlink\" title=\"弱类型\"></a>弱类型</h2><ol>\n<li>判断对象是否不存在使用if(!obj), 此时如果obj为<code>&#39;&#39;</code> 或 <code>0</code> 或 <code>false</code>,也会误认为不存在;</li>\n<li>字符串连接,一般会自动转成string, 但不巧如果头两个正好可以转数字,那么它会按数字相加.如:<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">var a = 1,b = &apos;b&apos;,c = 10;</div><div class=\"line\">var s1 = a + c + b;</div><div class=\"line\">var s2 = &apos;&apos; + a + c + b;</div><div class=\"line\">console.log(s1); //&quot;11b&quot;</div><div class=\"line\">console.log(s2); //&quot;110b&quot;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<a id=\"more\"></a>\n<h1 id=\"node专属坑\"><a href=\"#node专属坑\" class=\"headerlink\" title=\"node专属坑\"></a>node专属坑</h1><h2 id=\"异步处理\"><a href=\"#异步处理\" class=\"headerlink\" title=\"异步处理\"></a>异步处理</h2><ol>\n<li>error处理忘记return.</li>\n<li>循环中嵌套异步方法,如果循环次数不多,可使用递归的方式解决.</li>\n<li>一个异步方法中处理不当有可能会多次触发callback,又或者是一个callback都没触发,需要仔细处理逻辑流程.<h2 id=\"http\"><a href=\"#http\" class=\"headerlink\" title=\"http\"></a>http</h2></li>\n<li>request结束的event</li>\n<li>注意请求处理类型,有时候get和post方式不对,则请求看上去没有处理</li>\n<li>做proxy转发的时候注意http的head部分,请把host填对了再转<br>4.<h2 id=\"错误堆栈\"><a href=\"#错误堆栈\" class=\"headerlink\" title=\"错误堆栈\"></a>错误堆栈</h2></li>\n<li>node的错误堆栈有时根本看不出问题在哪,最好是自己来包装和抛出有用的错误信息,为此我写了vlog模块.<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2></li>\n<li>随时添加吧…</li>\n</ol>\n","site":{"data":{}},"excerpt":"<h1 id=\"缘起\"><a href=\"#缘起\" class=\"headerlink\" title=\"缘起\"></a>缘起</h1><p>node.js因为javascript的缘故,存在各种大大小小的坑,尽管各种注意,仍然免不了中招.</p>\n<h1 id=\"继承于javascript的坑\"><a href=\"#继承于javascript的坑\" class=\"headerlink\" title=\"继承于javascript的坑\"></a>继承于javascript的坑</h1><h2 id=\"弱类型\"><a href=\"#弱类型\" class=\"headerlink\" title=\"弱类型\"></a>弱类型</h2><ol>\n<li>判断对象是否不存在使用if(!obj), 此时如果obj为<code>&#39;&#39;</code> 或 <code>0</code> 或 <code>false</code>,也会误认为不存在;</li>\n<li>字符串连接,一般会自动转成string, 但不巧如果头两个正好可以转数字,那么它会按数字相加.如:<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">var a = 1,b = &apos;b&apos;,c = 10;</div><div class=\"line\">var s1 = a + c + b;</div><div class=\"line\">var s2 = &apos;&apos; + a + c + b;</div><div class=\"line\">console.log(s1); //&quot;11b&quot;</div><div class=\"line\">console.log(s2); //&quot;110b&quot;</div></pre></td></tr></table></figure>\n</li>\n</ol>","more":"<h1 id=\"node专属坑\"><a href=\"#node专属坑\" class=\"headerlink\" title=\"node专属坑\"></a>node专属坑</h1><h2 id=\"异步处理\"><a href=\"#异步处理\" class=\"headerlink\" title=\"异步处理\"></a>异步处理</h2><ol>\n<li>error处理忘记return.</li>\n<li>循环中嵌套异步方法,如果循环次数不多,可使用递归的方式解决.</li>\n<li>一个异步方法中处理不当有可能会多次触发callback,又或者是一个callback都没触发,需要仔细处理逻辑流程.<h2 id=\"http\"><a href=\"#http\" class=\"headerlink\" title=\"http\"></a>http</h2></li>\n<li>request结束的event</li>\n<li>注意请求处理类型,有时候get和post方式不对,则请求看上去没有处理</li>\n<li>做proxy转发的时候注意http的head部分,请把host填对了再转<br>4.<h2 id=\"错误堆栈\"><a href=\"#错误堆栈\" class=\"headerlink\" title=\"错误堆栈\"></a>错误堆栈</h2></li>\n<li>node的错误堆栈有时根本看不出问题在哪,最好是自己来包装和抛出有用的错误信息,为此我写了vlog模块.<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2></li>\n<li>随时添加吧…</li>\n</ol>"},{"title":"坑001:Hexo的配置和ftpsync插件的坑","date":"2015-11-08T07:15:00.000Z","_content":"# 缘起\n入Hexo之门才一天,这就踩坑了! 正是应了\"凡悟道,必踩坑\"之理.\n\n# 小坑\n先说说头一天踩的小坑吧:\n1. _config.yml中的配置,这个配置文件对于字段键值的空白是尤其讲究啊!键名的冒号后面必须跟一个空格才还跟键值,否则报错.\n  如: `language:zh-Hans`错误, `language: zh-Hans`正确. 另外键名之前的空格也必须对齐,否则也报错!如:\n    ```json\n    deploy:\n    type: git\n      repo: https://github.com/xyz/xyz.github.io.git\n      branch: master\n      message:\n    ```\n  以上错误,\n    ```json\n    deploy:\n      type: git\n      repo: https://github.com/xyz/xyz.github.io.git\n      branch: master\n      message:\n    ```\n  以上正确.\n  总之,这个yml文件特别地敏感脆弱,就不要欺负她了.\n2. hexo配置在项目根目录下的_config.yml文件中,但别忘记了主题里面还有个配置是在thems/themName/_config.yml,这里可控制主题和显示相关的配置,嗯,是的,她们都一样敏感脆弱.\n3. 关于主题,这里注意有的主题会引入外部的字体之类,这些资源会拖慢整个页面的响应,建议找出他们并去除掉,另外配置里面一些默认为true的项目也看下是否真的需要,不需要就关掉.\n\n<!-- more -->\n# 大坑\nftpsync,这个必须是叫大坑了!\n1. 插件看上去特别\"简单\",但工作原理肯定与你想的不一样,它是真的就是\"同步\"!是把ftp的服务端目录和文件调整成本地一模一样,也就是原来服务器上的文件如果本地没有话是会被**删除**,**删除**,**删除**(重要的事说三遍)掉的!而不是一般deploy只负责上传的理解.我去查了hexo-deploy-ftpsync插件,它使用的是[node-ftpsync](https://github.com/evanplaice/node-ftpsync),人家的说明里明确说了:\n  > This is not ftp-deploy. This application will delete files and directories on the remote server to match the local machine. Use this application in production at your own risk.\n\n  好吧,我这下损失大了,服务器的文件还不知道去哪里找...\n2. 好吧,那我配置ignore总可以避免服务端文件被删除吧,但这个ignore简单的配置一个目录名居然不生效?那到底如何配置呢?经过多方试验,发现这里必须按如下配置:\n    ```json\n    port: 21\n    ignore: ['dir1','.DS_Store','file1.htm']\n    ```\n  注意中括号不可少.\n3. 下面是最大的坑了,话说最坑的必然留到最后...\n配置好后,执行一次`hexo g -d`,好,成功生成并上传了! 慢着,趁兴致我再来个小改或者再写篇美文post一下吧,好,再次`hexo g -d`,咦?怎么报错了?\n```\nError: 550 ./wwwroot/2015: Cannot create a file when that file already exists.\n    at Ftp.parse (/Users/keel/dev/hexo/node_modules/jsftp/lib/jsftp.js:257:11)\n    at Ftp.parseResponse (/Users/keel/dev/hexo/node_modules/jsftp/lib/jsftp.js:174:8)\n    at Stream.<anonymous> (/Users/keel/dev/hexo/node_modules/jsftp/lib/jsftp.js:146:24)\n    at emitOne (events.js:77:13)\n    at Stream.emit (events.js:169:7)\n    at ResponseParser.reemit (/Users/keel/dev/hexo/node_modules/duplexer/index.js:70:25)\n    at emitOne (events.js:77:13)\n    at ResponseParser.emit (events.js:169:7)\n    at readableAddChunk (_stream_readable.js:146:16)\n    at ResponseParser.Readable.push (_stream_readable.js:110:10)\n    at ResponseParser.Transform.push (_stream_transform.js:128:32)\n    at ResponseParser.<anonymous> (/Users/keel/dev/hexo/node_modules/ftp-response-parser/index.js:65:12)\n    at Array.forEach (native)\n    at ResponseParser._transform (/Users/keel/dev/hexo/node_modules/ftp-response-parser/index.js:48:9)\n    at ResponseParser.Transform._read (_stream_transform.js:167:10)\n    at ResponseParser.Transform._write (_stream_transform.js:155:12)\n    at doWrite (_stream_writable.js:292:12)\n    at writeOrBuffer (_stream_writable.js:278:5)\n    at ResponseParser.Writable.write (_stream_writable.js:207:11)\n    at Socket.ondata (_stream_readable.js:528:20)\n    at emitOne (events.js:77:13)\n    at Socket.emit (events.js:169:7)\n```\n难道是心神不聚所致? 此时捏个 **\"凝神自省决\"** :\n* 网络--ok\n* 配置--ok\n* ftpServer--ok, **注意这里ftp是windows服务器,很重要!** ,直接用ftp工具上传是ok的\n\n再次出手!还是报错!\n\n好吧,看错误应该是远端的目录已经存在了无法再创建,开启 **\"填坑大法第一式\"** :查log.\n开启ftpsync的verbose模式看看,果然够verbose,输出了一大版,原来这货是先取出远端的目录文件,再与本地的目录文件对比,然后将差异计算出来,最后执行相关的同步操作的.\n\n仔细看了好多次,终于看出门道了,remote部分列出的目录不对!本来远端有个2015的目录,但remote的log中却只有一个5的目录,因此在计算差异时有了再次创建2015的目录的任务,但远端已经有了,所以执行时创建会失败.问题根源应该是在获取remote目录列表上了.\n\n这是个大麻烦,很可能是个bug了,二话不说,先祭个 **\"寻字符\"** 吧,google,baidu,github狂搜一通,居然无解?那再祭起 **\"请神符\"** ,各论坛发问不提,还在github上提了相关的issue.\n\n本想着就此等结果了,但身为踩坑道人,为平坑劫,求人先求已,心想nodejs有个好处,这些modules实际上是在自己手上,不像jar包没法动手脚,它是可以就着log追过去尝试寻下报错的根源.嗯,可以试试开启 **\"填坑大法第二式\"** :debug:\n这个hexo-deploy-ftpsync是依赖于node-ftpsync的,而它是依赖于jsftp的,在node_modules里面找到jsftp猛下一顿console.log,尝试看下问题,\n...历经3小时...\n终于摸清了jsftp的ftp请求发送与接受处理流程,看来问题在接收上,jsftp还依赖一个作者的parse-listing项目,这个项目里对ftp返回内容做了解析,而这个解析是一个正则,经过验证,当目录为 ***纯数字*** 时,它会以为这是一个文件的大小,把它视作文件处理!\n\n好吧,本道可以填坑了,先结一个 **\"混元补天阵\"** :fix. 阵眼分别是fork,git clone,patch,mocha,待到阵法达成之时,再`hexo g -d`,终于没问题了. 为了积功德,结个好的因果,遵天理,进行 ** [pull request](https://github.com/keel/parse-listing/commit/0b130bc927afec17c593f5b276a434d0a11e6e68) ** ,再对之前提的各个issue(是的,从hexo开始到jsftp所有依赖的项目里我都提了issue),做了补完.\n\n至此,心愿已了,虽然费时甚多,但有了善果,可以愉快的睡了.","source":"_posts/hexo-ftpsync-bug.md","raw":"title: 坑001:Hexo的配置和ftpsync插件的坑\ndate: 2015-11-08 15:15:00\ntags:\n- hexo\n- nodejs\ncategories: nodejs\n---\n# 缘起\n入Hexo之门才一天,这就踩坑了! 正是应了\"凡悟道,必踩坑\"之理.\n\n# 小坑\n先说说头一天踩的小坑吧:\n1. _config.yml中的配置,这个配置文件对于字段键值的空白是尤其讲究啊!键名的冒号后面必须跟一个空格才还跟键值,否则报错.\n  如: `language:zh-Hans`错误, `language: zh-Hans`正确. 另外键名之前的空格也必须对齐,否则也报错!如:\n    ```json\n    deploy:\n    type: git\n      repo: https://github.com/xyz/xyz.github.io.git\n      branch: master\n      message:\n    ```\n  以上错误,\n    ```json\n    deploy:\n      type: git\n      repo: https://github.com/xyz/xyz.github.io.git\n      branch: master\n      message:\n    ```\n  以上正确.\n  总之,这个yml文件特别地敏感脆弱,就不要欺负她了.\n2. hexo配置在项目根目录下的_config.yml文件中,但别忘记了主题里面还有个配置是在thems/themName/_config.yml,这里可控制主题和显示相关的配置,嗯,是的,她们都一样敏感脆弱.\n3. 关于主题,这里注意有的主题会引入外部的字体之类,这些资源会拖慢整个页面的响应,建议找出他们并去除掉,另外配置里面一些默认为true的项目也看下是否真的需要,不需要就关掉.\n\n<!-- more -->\n# 大坑\nftpsync,这个必须是叫大坑了!\n1. 插件看上去特别\"简单\",但工作原理肯定与你想的不一样,它是真的就是\"同步\"!是把ftp的服务端目录和文件调整成本地一模一样,也就是原来服务器上的文件如果本地没有话是会被**删除**,**删除**,**删除**(重要的事说三遍)掉的!而不是一般deploy只负责上传的理解.我去查了hexo-deploy-ftpsync插件,它使用的是[node-ftpsync](https://github.com/evanplaice/node-ftpsync),人家的说明里明确说了:\n  > This is not ftp-deploy. This application will delete files and directories on the remote server to match the local machine. Use this application in production at your own risk.\n\n  好吧,我这下损失大了,服务器的文件还不知道去哪里找...\n2. 好吧,那我配置ignore总可以避免服务端文件被删除吧,但这个ignore简单的配置一个目录名居然不生效?那到底如何配置呢?经过多方试验,发现这里必须按如下配置:\n    ```json\n    port: 21\n    ignore: ['dir1','.DS_Store','file1.htm']\n    ```\n  注意中括号不可少.\n3. 下面是最大的坑了,话说最坑的必然留到最后...\n配置好后,执行一次`hexo g -d`,好,成功生成并上传了! 慢着,趁兴致我再来个小改或者再写篇美文post一下吧,好,再次`hexo g -d`,咦?怎么报错了?\n```\nError: 550 ./wwwroot/2015: Cannot create a file when that file already exists.\n    at Ftp.parse (/Users/keel/dev/hexo/node_modules/jsftp/lib/jsftp.js:257:11)\n    at Ftp.parseResponse (/Users/keel/dev/hexo/node_modules/jsftp/lib/jsftp.js:174:8)\n    at Stream.<anonymous> (/Users/keel/dev/hexo/node_modules/jsftp/lib/jsftp.js:146:24)\n    at emitOne (events.js:77:13)\n    at Stream.emit (events.js:169:7)\n    at ResponseParser.reemit (/Users/keel/dev/hexo/node_modules/duplexer/index.js:70:25)\n    at emitOne (events.js:77:13)\n    at ResponseParser.emit (events.js:169:7)\n    at readableAddChunk (_stream_readable.js:146:16)\n    at ResponseParser.Readable.push (_stream_readable.js:110:10)\n    at ResponseParser.Transform.push (_stream_transform.js:128:32)\n    at ResponseParser.<anonymous> (/Users/keel/dev/hexo/node_modules/ftp-response-parser/index.js:65:12)\n    at Array.forEach (native)\n    at ResponseParser._transform (/Users/keel/dev/hexo/node_modules/ftp-response-parser/index.js:48:9)\n    at ResponseParser.Transform._read (_stream_transform.js:167:10)\n    at ResponseParser.Transform._write (_stream_transform.js:155:12)\n    at doWrite (_stream_writable.js:292:12)\n    at writeOrBuffer (_stream_writable.js:278:5)\n    at ResponseParser.Writable.write (_stream_writable.js:207:11)\n    at Socket.ondata (_stream_readable.js:528:20)\n    at emitOne (events.js:77:13)\n    at Socket.emit (events.js:169:7)\n```\n难道是心神不聚所致? 此时捏个 **\"凝神自省决\"** :\n* 网络--ok\n* 配置--ok\n* ftpServer--ok, **注意这里ftp是windows服务器,很重要!** ,直接用ftp工具上传是ok的\n\n再次出手!还是报错!\n\n好吧,看错误应该是远端的目录已经存在了无法再创建,开启 **\"填坑大法第一式\"** :查log.\n开启ftpsync的verbose模式看看,果然够verbose,输出了一大版,原来这货是先取出远端的目录文件,再与本地的目录文件对比,然后将差异计算出来,最后执行相关的同步操作的.\n\n仔细看了好多次,终于看出门道了,remote部分列出的目录不对!本来远端有个2015的目录,但remote的log中却只有一个5的目录,因此在计算差异时有了再次创建2015的目录的任务,但远端已经有了,所以执行时创建会失败.问题根源应该是在获取remote目录列表上了.\n\n这是个大麻烦,很可能是个bug了,二话不说,先祭个 **\"寻字符\"** 吧,google,baidu,github狂搜一通,居然无解?那再祭起 **\"请神符\"** ,各论坛发问不提,还在github上提了相关的issue.\n\n本想着就此等结果了,但身为踩坑道人,为平坑劫,求人先求已,心想nodejs有个好处,这些modules实际上是在自己手上,不像jar包没法动手脚,它是可以就着log追过去尝试寻下报错的根源.嗯,可以试试开启 **\"填坑大法第二式\"** :debug:\n这个hexo-deploy-ftpsync是依赖于node-ftpsync的,而它是依赖于jsftp的,在node_modules里面找到jsftp猛下一顿console.log,尝试看下问题,\n...历经3小时...\n终于摸清了jsftp的ftp请求发送与接受处理流程,看来问题在接收上,jsftp还依赖一个作者的parse-listing项目,这个项目里对ftp返回内容做了解析,而这个解析是一个正则,经过验证,当目录为 ***纯数字*** 时,它会以为这是一个文件的大小,把它视作文件处理!\n\n好吧,本道可以填坑了,先结一个 **\"混元补天阵\"** :fix. 阵眼分别是fork,git clone,patch,mocha,待到阵法达成之时,再`hexo g -d`,终于没问题了. 为了积功德,结个好的因果,遵天理,进行 ** [pull request](https://github.com/keel/parse-listing/commit/0b130bc927afec17c593f5b276a434d0a11e6e68) ** ,再对之前提的各个issue(是的,从hexo开始到jsftp所有依赖的项目里我都提了issue),做了补完.\n\n至此,心愿已了,虽然费时甚多,但有了善果,可以愉快的睡了.","slug":"hexo-ftpsync-bug","published":1,"updated":"2015-11-09T02:54:20.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9ja9jo80008pvvpy95iqr1c","content":"<h1 id=\"缘起\"><a href=\"#缘起\" class=\"headerlink\" title=\"缘起\"></a>缘起</h1><p>入Hexo之门才一天,这就踩坑了! 正是应了”凡悟道,必踩坑”之理.</p>\n<h1 id=\"小坑\"><a href=\"#小坑\" class=\"headerlink\" title=\"小坑\"></a>小坑</h1><p>先说说头一天踩的小坑吧:</p>\n<ol>\n<li><p>_config.yml中的配置,这个配置文件对于字段键值的空白是尤其讲究啊!键名的冒号后面必须跟一个空格才还跟键值,否则报错.<br>如: <code>language:zh-Hans</code>错误, <code>language: zh-Hans</code>正确. 另外键名之前的空格也必须对齐,否则也报错!如:</p>\n <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">deploy:</div><div class=\"line\">type: git</div><div class=\"line\">  repo: https://github.com/xyz/xyz.github.io.git</div><div class=\"line\">  branch: master</div><div class=\"line\">  message:</div></pre></td></tr></table></figure>\n<p>以上错误,</p>\n <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">deploy:</div><div class=\"line\">  type: git</div><div class=\"line\">  repo: https://github.com/xyz/xyz.github.io.git</div><div class=\"line\">  branch: master</div><div class=\"line\">  message:</div></pre></td></tr></table></figure>\n<p>以上正确.<br>总之,这个yml文件特别地敏感脆弱,就不要欺负她了.</p>\n</li>\n<li>hexo配置在项目根目录下的_config.yml文件中,但别忘记了主题里面还有个配置是在thems/themName/_config.yml,这里可控制主题和显示相关的配置,嗯,是的,她们都一样敏感脆弱.</li>\n<li>关于主题,这里注意有的主题会引入外部的字体之类,这些资源会拖慢整个页面的响应,建议找出他们并去除掉,另外配置里面一些默认为true的项目也看下是否真的需要,不需要就关掉.</li>\n</ol>\n<a id=\"more\"></a>\n<h1 id=\"大坑\"><a href=\"#大坑\" class=\"headerlink\" title=\"大坑\"></a>大坑</h1><p>ftpsync,这个必须是叫大坑了!</p>\n<ol>\n<li><p>插件看上去特别”简单”,但工作原理肯定与你想的不一样,它是真的就是”同步”!是把ftp的服务端目录和文件调整成本地一模一样,也就是原来服务器上的文件如果本地没有话是会被<strong>删除</strong>,<strong>删除</strong>,<strong>删除</strong>(重要的事说三遍)掉的!而不是一般deploy只负责上传的理解.我去查了hexo-deploy-ftpsync插件,它使用的是<a href=\"https://github.com/evanplaice/node-ftpsync\" target=\"_blank\" rel=\"external\">node-ftpsync</a>,人家的说明里明确说了:</p>\n<blockquote>\n<p>This is not ftp-deploy. This application will delete files and directories on the remote server to match the local machine. Use this application in production at your own risk.</p>\n</blockquote>\n<p>好吧,我这下损失大了,服务器的文件还不知道去哪里找…</p>\n</li>\n<li><p>好吧,那我配置ignore总可以避免服务端文件被删除吧,但这个ignore简单的配置一个目录名居然不生效?那到底如何配置呢?经过多方试验,发现这里必须按如下配置:</p>\n <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">port: 21</div><div class=\"line\">ignore: ['dir1','.DS_Store','file1.htm']</div></pre></td></tr></table></figure>\n<p>注意中括号不可少.</p>\n</li>\n<li>下面是最大的坑了,话说最坑的必然留到最后…<br>配置好后,执行一次<code>hexo g -d</code>,好,成功生成并上传了! 慢着,趁兴致我再来个小改或者再写篇美文post一下吧,好,再次<code>hexo g -d</code>,咦?怎么报错了?<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">Error: 550 ./wwwroot/2015: Cannot create a file when that file already exists.</div><div class=\"line\">    at Ftp.parse (/Users/keel/dev/hexo/node_modules/jsftp/lib/jsftp.js:257:11)</div><div class=\"line\">    at Ftp.parseResponse (/Users/keel/dev/hexo/node_modules/jsftp/lib/jsftp.js:174:8)</div><div class=\"line\">    at Stream.&lt;anonymous&gt; (/Users/keel/dev/hexo/node_modules/jsftp/lib/jsftp.js:146:24)</div><div class=\"line\">    at emitOne (events.js:77:13)</div><div class=\"line\">    at Stream.emit (events.js:169:7)</div><div class=\"line\">    at ResponseParser.reemit (/Users/keel/dev/hexo/node_modules/duplexer/index.js:70:25)</div><div class=\"line\">    at emitOne (events.js:77:13)</div><div class=\"line\">    at ResponseParser.emit (events.js:169:7)</div><div class=\"line\">    at readableAddChunk (_stream_readable.js:146:16)</div><div class=\"line\">    at ResponseParser.Readable.push (_stream_readable.js:110:10)</div><div class=\"line\">    at ResponseParser.Transform.push (_stream_transform.js:128:32)</div><div class=\"line\">    at ResponseParser.&lt;anonymous&gt; (/Users/keel/dev/hexo/node_modules/ftp-response-parser/index.js:65:12)</div><div class=\"line\">    at Array.forEach (native)</div><div class=\"line\">    at ResponseParser._transform (/Users/keel/dev/hexo/node_modules/ftp-response-parser/index.js:48:9)</div><div class=\"line\">    at ResponseParser.Transform._read (_stream_transform.js:167:10)</div><div class=\"line\">    at ResponseParser.Transform._write (_stream_transform.js:155:12)</div><div class=\"line\">    at doWrite (_stream_writable.js:292:12)</div><div class=\"line\">    at writeOrBuffer (_stream_writable.js:278:5)</div><div class=\"line\">    at ResponseParser.Writable.write (_stream_writable.js:207:11)</div><div class=\"line\">    at Socket.ondata (_stream_readable.js:528:20)</div><div class=\"line\">    at emitOne (events.js:77:13)</div><div class=\"line\">    at Socket.emit (events.js:169:7)</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>难道是心神不聚所致? 此时捏个 <strong>“凝神自省决”</strong> :</p>\n<ul>\n<li>网络–ok</li>\n<li>配置–ok</li>\n<li>ftpServer–ok, <strong>注意这里ftp是windows服务器,很重要!</strong> ,直接用ftp工具上传是ok的</li>\n</ul>\n<p>再次出手!还是报错!</p>\n<p>好吧,看错误应该是远端的目录已经存在了无法再创建,开启 <strong>“填坑大法第一式”</strong> :查log.<br>开启ftpsync的verbose模式看看,果然够verbose,输出了一大版,原来这货是先取出远端的目录文件,再与本地的目录文件对比,然后将差异计算出来,最后执行相关的同步操作的.</p>\n<p>仔细看了好多次,终于看出门道了,remote部分列出的目录不对!本来远端有个2015的目录,但remote的log中却只有一个5的目录,因此在计算差异时有了再次创建2015的目录的任务,但远端已经有了,所以执行时创建会失败.问题根源应该是在获取remote目录列表上了.</p>\n<p>这是个大麻烦,很可能是个bug了,二话不说,先祭个 <strong>“寻字符”</strong> 吧,google,baidu,github狂搜一通,居然无解?那再祭起 <strong>“请神符”</strong> ,各论坛发问不提,还在github上提了相关的issue.</p>\n<p>本想着就此等结果了,但身为踩坑道人,为平坑劫,求人先求已,心想nodejs有个好处,这些modules实际上是在自己手上,不像jar包没法动手脚,它是可以就着log追过去尝试寻下报错的根源.嗯,可以试试开启 <strong>“填坑大法第二式”</strong> :debug:<br>这个hexo-deploy-ftpsync是依赖于node-ftpsync的,而它是依赖于jsftp的,在node_modules里面找到jsftp猛下一顿console.log,尝试看下问题,<br>…历经3小时…<br>终于摸清了jsftp的ftp请求发送与接受处理流程,看来问题在接收上,jsftp还依赖一个作者的parse-listing项目,这个项目里对ftp返回内容做了解析,而这个解析是一个正则,经过验证,当目录为 <strong><em>纯数字</em></strong> 时,它会以为这是一个文件的大小,把它视作文件处理!</p>\n<p>好吧,本道可以填坑了,先结一个 <strong>“混元补天阵”</strong> :fix. 阵眼分别是fork,git clone,patch,mocha,待到阵法达成之时,再<code>hexo g -d</code>,终于没问题了. 为了积功德,结个好的因果,遵天理,进行 <strong> <a href=\"https://github.com/keel/parse-listing/commit/0b130bc927afec17c593f5b276a434d0a11e6e68\" target=\"_blank\" rel=\"external\">pull request</a> </strong> ,再对之前提的各个issue(是的,从hexo开始到jsftp所有依赖的项目里我都提了issue),做了补完.</p>\n<p>至此,心愿已了,虽然费时甚多,但有了善果,可以愉快的睡了.</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"缘起\"><a href=\"#缘起\" class=\"headerlink\" title=\"缘起\"></a>缘起</h1><p>入Hexo之门才一天,这就踩坑了! 正是应了”凡悟道,必踩坑”之理.</p>\n<h1 id=\"小坑\"><a href=\"#小坑\" class=\"headerlink\" title=\"小坑\"></a>小坑</h1><p>先说说头一天踩的小坑吧:</p>\n<ol>\n<li><p>_config.yml中的配置,这个配置文件对于字段键值的空白是尤其讲究啊!键名的冒号后面必须跟一个空格才还跟键值,否则报错.<br>如: <code>language:zh-Hans</code>错误, <code>language: zh-Hans</code>正确. 另外键名之前的空格也必须对齐,否则也报错!如:</p>\n <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">deploy:</div><div class=\"line\">type: git</div><div class=\"line\">  repo: https://github.com/xyz/xyz.github.io.git</div><div class=\"line\">  branch: master</div><div class=\"line\">  message:</div></pre></td></tr></table></figure>\n<p>以上错误,</p>\n <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">deploy:</div><div class=\"line\">  type: git</div><div class=\"line\">  repo: https://github.com/xyz/xyz.github.io.git</div><div class=\"line\">  branch: master</div><div class=\"line\">  message:</div></pre></td></tr></table></figure>\n<p>以上正确.<br>总之,这个yml文件特别地敏感脆弱,就不要欺负她了.</p>\n</li>\n<li>hexo配置在项目根目录下的_config.yml文件中,但别忘记了主题里面还有个配置是在thems/themName/_config.yml,这里可控制主题和显示相关的配置,嗯,是的,她们都一样敏感脆弱.</li>\n<li>关于主题,这里注意有的主题会引入外部的字体之类,这些资源会拖慢整个页面的响应,建议找出他们并去除掉,另外配置里面一些默认为true的项目也看下是否真的需要,不需要就关掉.</li>\n</ol>","more":"<h1 id=\"大坑\"><a href=\"#大坑\" class=\"headerlink\" title=\"大坑\"></a>大坑</h1><p>ftpsync,这个必须是叫大坑了!</p>\n<ol>\n<li><p>插件看上去特别”简单”,但工作原理肯定与你想的不一样,它是真的就是”同步”!是把ftp的服务端目录和文件调整成本地一模一样,也就是原来服务器上的文件如果本地没有话是会被<strong>删除</strong>,<strong>删除</strong>,<strong>删除</strong>(重要的事说三遍)掉的!而不是一般deploy只负责上传的理解.我去查了hexo-deploy-ftpsync插件,它使用的是<a href=\"https://github.com/evanplaice/node-ftpsync\" target=\"_blank\" rel=\"external\">node-ftpsync</a>,人家的说明里明确说了:</p>\n<blockquote>\n<p>This is not ftp-deploy. This application will delete files and directories on the remote server to match the local machine. Use this application in production at your own risk.</p>\n</blockquote>\n<p>好吧,我这下损失大了,服务器的文件还不知道去哪里找…</p>\n</li>\n<li><p>好吧,那我配置ignore总可以避免服务端文件被删除吧,但这个ignore简单的配置一个目录名居然不生效?那到底如何配置呢?经过多方试验,发现这里必须按如下配置:</p>\n <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">port: 21</div><div class=\"line\">ignore: ['dir1','.DS_Store','file1.htm']</div></pre></td></tr></table></figure>\n<p>注意中括号不可少.</p>\n</li>\n<li>下面是最大的坑了,话说最坑的必然留到最后…<br>配置好后,执行一次<code>hexo g -d</code>,好,成功生成并上传了! 慢着,趁兴致我再来个小改或者再写篇美文post一下吧,好,再次<code>hexo g -d</code>,咦?怎么报错了?<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">Error: 550 ./wwwroot/2015: Cannot create a file when that file already exists.</div><div class=\"line\">    at Ftp.parse (/Users/keel/dev/hexo/node_modules/jsftp/lib/jsftp.js:257:11)</div><div class=\"line\">    at Ftp.parseResponse (/Users/keel/dev/hexo/node_modules/jsftp/lib/jsftp.js:174:8)</div><div class=\"line\">    at Stream.&lt;anonymous&gt; (/Users/keel/dev/hexo/node_modules/jsftp/lib/jsftp.js:146:24)</div><div class=\"line\">    at emitOne (events.js:77:13)</div><div class=\"line\">    at Stream.emit (events.js:169:7)</div><div class=\"line\">    at ResponseParser.reemit (/Users/keel/dev/hexo/node_modules/duplexer/index.js:70:25)</div><div class=\"line\">    at emitOne (events.js:77:13)</div><div class=\"line\">    at ResponseParser.emit (events.js:169:7)</div><div class=\"line\">    at readableAddChunk (_stream_readable.js:146:16)</div><div class=\"line\">    at ResponseParser.Readable.push (_stream_readable.js:110:10)</div><div class=\"line\">    at ResponseParser.Transform.push (_stream_transform.js:128:32)</div><div class=\"line\">    at ResponseParser.&lt;anonymous&gt; (/Users/keel/dev/hexo/node_modules/ftp-response-parser/index.js:65:12)</div><div class=\"line\">    at Array.forEach (native)</div><div class=\"line\">    at ResponseParser._transform (/Users/keel/dev/hexo/node_modules/ftp-response-parser/index.js:48:9)</div><div class=\"line\">    at ResponseParser.Transform._read (_stream_transform.js:167:10)</div><div class=\"line\">    at ResponseParser.Transform._write (_stream_transform.js:155:12)</div><div class=\"line\">    at doWrite (_stream_writable.js:292:12)</div><div class=\"line\">    at writeOrBuffer (_stream_writable.js:278:5)</div><div class=\"line\">    at ResponseParser.Writable.write (_stream_writable.js:207:11)</div><div class=\"line\">    at Socket.ondata (_stream_readable.js:528:20)</div><div class=\"line\">    at emitOne (events.js:77:13)</div><div class=\"line\">    at Socket.emit (events.js:169:7)</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>难道是心神不聚所致? 此时捏个 <strong>“凝神自省决”</strong> :</p>\n<ul>\n<li>网络–ok</li>\n<li>配置–ok</li>\n<li>ftpServer–ok, <strong>注意这里ftp是windows服务器,很重要!</strong> ,直接用ftp工具上传是ok的</li>\n</ul>\n<p>再次出手!还是报错!</p>\n<p>好吧,看错误应该是远端的目录已经存在了无法再创建,开启 <strong>“填坑大法第一式”</strong> :查log.<br>开启ftpsync的verbose模式看看,果然够verbose,输出了一大版,原来这货是先取出远端的目录文件,再与本地的目录文件对比,然后将差异计算出来,最后执行相关的同步操作的.</p>\n<p>仔细看了好多次,终于看出门道了,remote部分列出的目录不对!本来远端有个2015的目录,但remote的log中却只有一个5的目录,因此在计算差异时有了再次创建2015的目录的任务,但远端已经有了,所以执行时创建会失败.问题根源应该是在获取remote目录列表上了.</p>\n<p>这是个大麻烦,很可能是个bug了,二话不说,先祭个 <strong>“寻字符”</strong> 吧,google,baidu,github狂搜一通,居然无解?那再祭起 <strong>“请神符”</strong> ,各论坛发问不提,还在github上提了相关的issue.</p>\n<p>本想着就此等结果了,但身为踩坑道人,为平坑劫,求人先求已,心想nodejs有个好处,这些modules实际上是在自己手上,不像jar包没法动手脚,它是可以就着log追过去尝试寻下报错的根源.嗯,可以试试开启 <strong>“填坑大法第二式”</strong> :debug:<br>这个hexo-deploy-ftpsync是依赖于node-ftpsync的,而它是依赖于jsftp的,在node_modules里面找到jsftp猛下一顿console.log,尝试看下问题,<br>…历经3小时…<br>终于摸清了jsftp的ftp请求发送与接受处理流程,看来问题在接收上,jsftp还依赖一个作者的parse-listing项目,这个项目里对ftp返回内容做了解析,而这个解析是一个正则,经过验证,当目录为 <strong><em>纯数字</em></strong> 时,它会以为这是一个文件的大小,把它视作文件处理!</p>\n<p>好吧,本道可以填坑了,先结一个 <strong>“混元补天阵”</strong> :fix. 阵眼分别是fork,git clone,patch,mocha,待到阵法达成之时,再<code>hexo g -d</code>,终于没问题了. 为了积功德,结个好的因果,遵天理,进行 <strong> <a href=\"https://github.com/keel/parse-listing/commit/0b130bc927afec17c593f5b276a434d0a11e6e68\" target=\"_blank\" rel=\"external\">pull request</a> </strong> ,再对之前提的各个issue(是的,从hexo开始到jsftp所有依赖的项目里我都提了issue),做了补完.</p>\n<p>至此,心愿已了,虽然费时甚多,但有了善果,可以愉快的睡了.</p>"},{"title":"从hexo开始","date":"2015-11-06T16:16:21.000Z","_content":"# 回归\n\n还是纯静态站的构建,时隔这么久,没想到nodejs倒是出了一个不错的静态blog项目 -- hexo ,想当初用freemarker+fmpp实现的纯静态blog终于有了升级之日了.哦,记得那一版还是2008年1月.\n\n就是喜欢nodejs简单,直接,纯粹.\n\n说实话,之前对node一直报以非常怀疑的态度,如果不是因为项目的性能问题实在搞不定了,可能会错过很长时间,谁知道一旦尝试,爱不释手了...\n\n就这样开始吧.\n<!-- more -->\n# 开始\n\n``` javascript\nvar start = function (){\n  console.log('hello hexo.');\n}\n```\n\n嗯,就这样.","source":"_posts/try-hexo.md","raw":"title: 从hexo开始\ndate: 2015-11-07 00:16:21\ntags: hexo\ncategories: other\n---\n# 回归\n\n还是纯静态站的构建,时隔这么久,没想到nodejs倒是出了一个不错的静态blog项目 -- hexo ,想当初用freemarker+fmpp实现的纯静态blog终于有了升级之日了.哦,记得那一版还是2008年1月.\n\n就是喜欢nodejs简单,直接,纯粹.\n\n说实话,之前对node一直报以非常怀疑的态度,如果不是因为项目的性能问题实在搞不定了,可能会错过很长时间,谁知道一旦尝试,爱不释手了...\n\n就这样开始吧.\n<!-- more -->\n# 开始\n\n``` javascript\nvar start = function (){\n  console.log('hello hexo.');\n}\n```\n\n嗯,就这样.","slug":"try-hexo","published":1,"updated":"2015-11-06T18:07:38.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9ja9jod0009pvvpbbt40xt4","content":"<h1 id=\"回归\"><a href=\"#回归\" class=\"headerlink\" title=\"回归\"></a>回归</h1><p>还是纯静态站的构建,时隔这么久,没想到nodejs倒是出了一个不错的静态blog项目 – hexo ,想当初用freemarker+fmpp实现的纯静态blog终于有了升级之日了.哦,记得那一版还是2008年1月.</p>\n<p>就是喜欢nodejs简单,直接,纯粹.</p>\n<p>说实话,之前对node一直报以非常怀疑的态度,如果不是因为项目的性能问题实在搞不定了,可能会错过很长时间,谁知道一旦尝试,爱不释手了…</p>\n<p>就这样开始吧.<br><a id=\"more\"></a></p>\n<h1 id=\"开始\"><a href=\"#开始\" class=\"headerlink\" title=\"开始\"></a>开始</h1><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> start = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'hello hexo.'</span>);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>嗯,就这样.</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"回归\"><a href=\"#回归\" class=\"headerlink\" title=\"回归\"></a>回归</h1><p>还是纯静态站的构建,时隔这么久,没想到nodejs倒是出了一个不错的静态blog项目 – hexo ,想当初用freemarker+fmpp实现的纯静态blog终于有了升级之日了.哦,记得那一版还是2008年1月.</p>\n<p>就是喜欢nodejs简单,直接,纯粹.</p>\n<p>说实话,之前对node一直报以非常怀疑的态度,如果不是因为项目的性能问题实在搞不定了,可能会错过很长时间,谁知道一旦尝试,爱不释手了…</p>\n<p>就这样开始吧.<br>","more":"</p>\n<h1 id=\"开始\"><a href=\"#开始\" class=\"headerlink\" title=\"开始\"></a>开始</h1><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> start = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'hello hexo.'</span>);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>嗯,就这样.</p>"},{"title":"在CentOS6中升级openSSH到6.7版","date":"2015-11-08T01:16:21.000Z","_content":"# 缘起\n\n机房的例行漏洞扫描显示openSSH6.6及以下版本存在以下漏洞:\n> \"verify_host_key函数 SSHFP DNS RR 检查绕过漏洞(CVE-2014-2653),建议升级OpenSSH至6.6之后版本.\"\n\n实际上通过yum是无法直接升级到6.6以后版本的(CentOS7好像可以直接升级到更高版本),而rpm包能成功安装的最新版本也只是6.6p1版本,唯一的办法只能通过编译安装了,而这一过程比较痛苦,因为是ssh,所以远程安装时必须先启用telnet备用,待补好后再关闭,事实证明这一步骤__非常非常必要!__\n\n经过三四天的折腾,成功完成了20几台服务器的升级,在此记录下:\n\n<!-- more -->\n# 使用yum安装需要的telnet服务以及编译openssh需要的库\n登录后先跳转root权限,执行以下命令:\n\n```\ncd ~\nmkdir sshUpdate && cd sshUpdate \\\n&& yum install -y xinetd telnet-server make perl pam pam-devel zlib zlib-devel openssl-devel \\\n&& yum install -y gcc* \\\n&& vim /etc/xinetd.d/telnet\n```\n在这里将/etc/xinetd.d/telnet(这里telnet文件名也有可能为krb5-telnet) 中的disable=yes改为no,保存退出.\n\n# 启动telnet服务\n\n```\n/etc/init.d/xinetd restart && vim /etc/sysconfig/iptables\n```\n启动telnet服务并编辑iptables打开23端口,也就是telnet端口,打开后重启iptables\n\n```\nservice iptables restart\n```\n此时,应该可以另开一个terminal使用telnet <ip>方式尝试登录服务器了,如果有问题,需要检查上述步骤是否有误,特别要注意23端口除了iptables限制外,还有没有上层的路由或者云主机的管理系统没有打开.\n\n# 下载并编译安装openssh6.7p1\n这里推荐先用yum update openssl将openssl升级,至少是1.0.1版本.\n执行以下命令:\n\n```\ncd ~/sshUpdate \\\n&& wget http://ftp.openbsd.org/pub/OpenBSD/OpenSSH/portable/openssh-6.7p1.tar.gz && mv /etc/ssh /etc/ssh.bak \\\n&& rpm -e `rpm -qa | grep openssh` --nodeps \\\n&& tar zxf openssh-6.7p1.tar.gz && cd openssh-6.7p1 \\\n&& ./configure --prefix=/usr --sysconfdir=/etc/ssh --with-pam --with-zlib --with-md5-passwords \\\n&& make && make install \\\n&& ssh -V\n```\n以上指令会先下载6.7的源码,然后备份ssh并卸载当前的openssh,随后将源码进行编译,这里如果执行出错,请检查第一步的相关依赖包没有通过yum安装完整,如果没有,建议更换yum源,比如用阿里的源.\n最后一句会显示当前ssh的版本号,如果成功显示openSSH6.7p1,那基本上算是接近成功了.\n\n# 启用ssh服务\n\n```\ncp contrib/redhat/sshd.init /etc/init.d/sshd && chkconfig --add sshd \\\n&& service sshd start && vim /etc/ssh/sshd_config\n```\n这里将ssh服务做成开机启动并启动了sshd,打开sshd_config后,如果需要连接xshell4,则按下图进行以下修改:\n![sshd](/images/openssh_sshd_config.jpg)\n保存退出后,重启sshd并查一下sshd服务是否是自启动状态:\n\n```\nservice sshd restart && chkconfig --list sshd\n```\n\n# 关闭telnet\n停止telnet服务,并修改配置:\n\n```\n/etc/init.d/xinetd stop && vi /etc/xinetd.d/telnet\n```\n将之前改过的disable=yes又改回去成no.\n随后再将修改iptables将23端口关闭,并重启iptables服务.\n至此,可以再开ssh登录,用ssh -V查看版本号.\n\n\n","source":"_posts/update-openssh-6.md","raw":"title: 在CentOS6中升级openSSH到6.7版\ndate: 2015-11-08 09:16:21\ntags:\n- centos\n- ssh\n- linux\ncategories: linux\n---\n# 缘起\n\n机房的例行漏洞扫描显示openSSH6.6及以下版本存在以下漏洞:\n> \"verify_host_key函数 SSHFP DNS RR 检查绕过漏洞(CVE-2014-2653),建议升级OpenSSH至6.6之后版本.\"\n\n实际上通过yum是无法直接升级到6.6以后版本的(CentOS7好像可以直接升级到更高版本),而rpm包能成功安装的最新版本也只是6.6p1版本,唯一的办法只能通过编译安装了,而这一过程比较痛苦,因为是ssh,所以远程安装时必须先启用telnet备用,待补好后再关闭,事实证明这一步骤__非常非常必要!__\n\n经过三四天的折腾,成功完成了20几台服务器的升级,在此记录下:\n\n<!-- more -->\n# 使用yum安装需要的telnet服务以及编译openssh需要的库\n登录后先跳转root权限,执行以下命令:\n\n```\ncd ~\nmkdir sshUpdate && cd sshUpdate \\\n&& yum install -y xinetd telnet-server make perl pam pam-devel zlib zlib-devel openssl-devel \\\n&& yum install -y gcc* \\\n&& vim /etc/xinetd.d/telnet\n```\n在这里将/etc/xinetd.d/telnet(这里telnet文件名也有可能为krb5-telnet) 中的disable=yes改为no,保存退出.\n\n# 启动telnet服务\n\n```\n/etc/init.d/xinetd restart && vim /etc/sysconfig/iptables\n```\n启动telnet服务并编辑iptables打开23端口,也就是telnet端口,打开后重启iptables\n\n```\nservice iptables restart\n```\n此时,应该可以另开一个terminal使用telnet <ip>方式尝试登录服务器了,如果有问题,需要检查上述步骤是否有误,特别要注意23端口除了iptables限制外,还有没有上层的路由或者云主机的管理系统没有打开.\n\n# 下载并编译安装openssh6.7p1\n这里推荐先用yum update openssl将openssl升级,至少是1.0.1版本.\n执行以下命令:\n\n```\ncd ~/sshUpdate \\\n&& wget http://ftp.openbsd.org/pub/OpenBSD/OpenSSH/portable/openssh-6.7p1.tar.gz && mv /etc/ssh /etc/ssh.bak \\\n&& rpm -e `rpm -qa | grep openssh` --nodeps \\\n&& tar zxf openssh-6.7p1.tar.gz && cd openssh-6.7p1 \\\n&& ./configure --prefix=/usr --sysconfdir=/etc/ssh --with-pam --with-zlib --with-md5-passwords \\\n&& make && make install \\\n&& ssh -V\n```\n以上指令会先下载6.7的源码,然后备份ssh并卸载当前的openssh,随后将源码进行编译,这里如果执行出错,请检查第一步的相关依赖包没有通过yum安装完整,如果没有,建议更换yum源,比如用阿里的源.\n最后一句会显示当前ssh的版本号,如果成功显示openSSH6.7p1,那基本上算是接近成功了.\n\n# 启用ssh服务\n\n```\ncp contrib/redhat/sshd.init /etc/init.d/sshd && chkconfig --add sshd \\\n&& service sshd start && vim /etc/ssh/sshd_config\n```\n这里将ssh服务做成开机启动并启动了sshd,打开sshd_config后,如果需要连接xshell4,则按下图进行以下修改:\n![sshd](/images/openssh_sshd_config.jpg)\n保存退出后,重启sshd并查一下sshd服务是否是自启动状态:\n\n```\nservice sshd restart && chkconfig --list sshd\n```\n\n# 关闭telnet\n停止telnet服务,并修改配置:\n\n```\n/etc/init.d/xinetd stop && vi /etc/xinetd.d/telnet\n```\n将之前改过的disable=yes又改回去成no.\n随后再将修改iptables将23端口关闭,并重启iptables服务.\n至此,可以再开ssh登录,用ssh -V查看版本号.\n\n\n","slug":"update-openssh-6","published":1,"updated":"2015-11-08T16:14:07.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9ja9jof000apvvp0em5ysp7","content":"<h1 id=\"缘起\"><a href=\"#缘起\" class=\"headerlink\" title=\"缘起\"></a>缘起</h1><p>机房的例行漏洞扫描显示openSSH6.6及以下版本存在以下漏洞:</p>\n<blockquote>\n<p>“verify_host_key函数 SSHFP DNS RR 检查绕过漏洞(CVE-2014-2653),建议升级OpenSSH至6.6之后版本.”</p>\n</blockquote>\n<p>实际上通过yum是无法直接升级到6.6以后版本的(CentOS7好像可以直接升级到更高版本),而rpm包能成功安装的最新版本也只是6.6p1版本,唯一的办法只能通过编译安装了,而这一过程比较痛苦,因为是ssh,所以远程安装时必须先启用telnet备用,待补好后再关闭,事实证明这一步骤<strong>非常非常必要!</strong></p>\n<p>经过三四天的折腾,成功完成了20几台服务器的升级,在此记录下:</p>\n<a id=\"more\"></a>\n<h1 id=\"使用yum安装需要的telnet服务以及编译openssh需要的库\"><a href=\"#使用yum安装需要的telnet服务以及编译openssh需要的库\" class=\"headerlink\" title=\"使用yum安装需要的telnet服务以及编译openssh需要的库\"></a>使用yum安装需要的telnet服务以及编译openssh需要的库</h1><p>登录后先跳转root权限,执行以下命令:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd ~</div><div class=\"line\">mkdir sshUpdate &amp;&amp; cd sshUpdate \\</div><div class=\"line\">&amp;&amp; yum install -y xinetd telnet-server make perl pam pam-devel zlib zlib-devel openssl-devel \\</div><div class=\"line\">&amp;&amp; yum install -y gcc* \\</div><div class=\"line\">&amp;&amp; vim /etc/xinetd.d/telnet</div></pre></td></tr></table></figure>\n<p>在这里将/etc/xinetd.d/telnet(这里telnet文件名也有可能为krb5-telnet) 中的disable=yes改为no,保存退出.</p>\n<h1 id=\"启动telnet服务\"><a href=\"#启动telnet服务\" class=\"headerlink\" title=\"启动telnet服务\"></a>启动telnet服务</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/etc/init.d/xinetd restart &amp;&amp; vim /etc/sysconfig/iptables</div></pre></td></tr></table></figure>\n<p>启动telnet服务并编辑iptables打开23端口,也就是telnet端口,打开后重启iptables</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">service iptables restart</div></pre></td></tr></table></figure>\n<p>此时,应该可以另开一个terminal使用telnet <ip>方式尝试登录服务器了,如果有问题,需要检查上述步骤是否有误,特别要注意23端口除了iptables限制外,还有没有上层的路由或者云主机的管理系统没有打开.</ip></p>\n<h1 id=\"下载并编译安装openssh6-7p1\"><a href=\"#下载并编译安装openssh6-7p1\" class=\"headerlink\" title=\"下载并编译安装openssh6.7p1\"></a>下载并编译安装openssh6.7p1</h1><p>这里推荐先用yum update openssl将openssl升级,至少是1.0.1版本.<br>执行以下命令:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd ~/sshUpdate \\</div><div class=\"line\">&amp;&amp; wget http://ftp.openbsd.org/pub/OpenBSD/OpenSSH/portable/openssh-6.7p1.tar.gz &amp;&amp; mv /etc/ssh /etc/ssh.bak \\</div><div class=\"line\">&amp;&amp; rpm -e `rpm -qa | grep openssh` --nodeps \\</div><div class=\"line\">&amp;&amp; tar zxf openssh-6.7p1.tar.gz &amp;&amp; cd openssh-6.7p1 \\</div><div class=\"line\">&amp;&amp; ./configure --prefix=/usr --sysconfdir=/etc/ssh --with-pam --with-zlib --with-md5-passwords \\</div><div class=\"line\">&amp;&amp; make &amp;&amp; make install \\</div><div class=\"line\">&amp;&amp; ssh -V</div></pre></td></tr></table></figure>\n<p>以上指令会先下载6.7的源码,然后备份ssh并卸载当前的openssh,随后将源码进行编译,这里如果执行出错,请检查第一步的相关依赖包没有通过yum安装完整,如果没有,建议更换yum源,比如用阿里的源.<br>最后一句会显示当前ssh的版本号,如果成功显示openSSH6.7p1,那基本上算是接近成功了.</p>\n<h1 id=\"启用ssh服务\"><a href=\"#启用ssh服务\" class=\"headerlink\" title=\"启用ssh服务\"></a>启用ssh服务</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cp contrib/redhat/sshd.init /etc/init.d/sshd &amp;&amp; chkconfig --add sshd \\</div><div class=\"line\">&amp;&amp; service sshd start &amp;&amp; vim /etc/ssh/sshd_config</div></pre></td></tr></table></figure>\n<p>这里将ssh服务做成开机启动并启动了sshd,打开sshd_config后,如果需要连接xshell4,则按下图进行以下修改:<br><img src=\"/images/openssh_sshd_config.jpg\" alt=\"sshd\"><br>保存退出后,重启sshd并查一下sshd服务是否是自启动状态:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">service sshd restart &amp;&amp; chkconfig --list sshd</div></pre></td></tr></table></figure>\n<h1 id=\"关闭telnet\"><a href=\"#关闭telnet\" class=\"headerlink\" title=\"关闭telnet\"></a>关闭telnet</h1><p>停止telnet服务,并修改配置:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/etc/init.d/xinetd stop &amp;&amp; vi /etc/xinetd.d/telnet</div></pre></td></tr></table></figure>\n<p>将之前改过的disable=yes又改回去成no.<br>随后再将修改iptables将23端口关闭,并重启iptables服务.<br>至此,可以再开ssh登录,用ssh -V查看版本号.</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"缘起\"><a href=\"#缘起\" class=\"headerlink\" title=\"缘起\"></a>缘起</h1><p>机房的例行漏洞扫描显示openSSH6.6及以下版本存在以下漏洞:</p>\n<blockquote>\n<p>“verify_host_key函数 SSHFP DNS RR 检查绕过漏洞(CVE-2014-2653),建议升级OpenSSH至6.6之后版本.”</p>\n</blockquote>\n<p>实际上通过yum是无法直接升级到6.6以后版本的(CentOS7好像可以直接升级到更高版本),而rpm包能成功安装的最新版本也只是6.6p1版本,唯一的办法只能通过编译安装了,而这一过程比较痛苦,因为是ssh,所以远程安装时必须先启用telnet备用,待补好后再关闭,事实证明这一步骤<strong>非常非常必要!</strong></p>\n<p>经过三四天的折腾,成功完成了20几台服务器的升级,在此记录下:</p>","more":"<h1 id=\"使用yum安装需要的telnet服务以及编译openssh需要的库\"><a href=\"#使用yum安装需要的telnet服务以及编译openssh需要的库\" class=\"headerlink\" title=\"使用yum安装需要的telnet服务以及编译openssh需要的库\"></a>使用yum安装需要的telnet服务以及编译openssh需要的库</h1><p>登录后先跳转root权限,执行以下命令:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd ~</div><div class=\"line\">mkdir sshUpdate &amp;&amp; cd sshUpdate \\</div><div class=\"line\">&amp;&amp; yum install -y xinetd telnet-server make perl pam pam-devel zlib zlib-devel openssl-devel \\</div><div class=\"line\">&amp;&amp; yum install -y gcc* \\</div><div class=\"line\">&amp;&amp; vim /etc/xinetd.d/telnet</div></pre></td></tr></table></figure>\n<p>在这里将/etc/xinetd.d/telnet(这里telnet文件名也有可能为krb5-telnet) 中的disable=yes改为no,保存退出.</p>\n<h1 id=\"启动telnet服务\"><a href=\"#启动telnet服务\" class=\"headerlink\" title=\"启动telnet服务\"></a>启动telnet服务</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/etc/init.d/xinetd restart &amp;&amp; vim /etc/sysconfig/iptables</div></pre></td></tr></table></figure>\n<p>启动telnet服务并编辑iptables打开23端口,也就是telnet端口,打开后重启iptables</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">service iptables restart</div></pre></td></tr></table></figure>\n<p>此时,应该可以另开一个terminal使用telnet <ip>方式尝试登录服务器了,如果有问题,需要检查上述步骤是否有误,特别要注意23端口除了iptables限制外,还有没有上层的路由或者云主机的管理系统没有打开.</ip></p>\n<h1 id=\"下载并编译安装openssh6-7p1\"><a href=\"#下载并编译安装openssh6-7p1\" class=\"headerlink\" title=\"下载并编译安装openssh6.7p1\"></a>下载并编译安装openssh6.7p1</h1><p>这里推荐先用yum update openssl将openssl升级,至少是1.0.1版本.<br>执行以下命令:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd ~/sshUpdate \\</div><div class=\"line\">&amp;&amp; wget http://ftp.openbsd.org/pub/OpenBSD/OpenSSH/portable/openssh-6.7p1.tar.gz &amp;&amp; mv /etc/ssh /etc/ssh.bak \\</div><div class=\"line\">&amp;&amp; rpm -e `rpm -qa | grep openssh` --nodeps \\</div><div class=\"line\">&amp;&amp; tar zxf openssh-6.7p1.tar.gz &amp;&amp; cd openssh-6.7p1 \\</div><div class=\"line\">&amp;&amp; ./configure --prefix=/usr --sysconfdir=/etc/ssh --with-pam --with-zlib --with-md5-passwords \\</div><div class=\"line\">&amp;&amp; make &amp;&amp; make install \\</div><div class=\"line\">&amp;&amp; ssh -V</div></pre></td></tr></table></figure>\n<p>以上指令会先下载6.7的源码,然后备份ssh并卸载当前的openssh,随后将源码进行编译,这里如果执行出错,请检查第一步的相关依赖包没有通过yum安装完整,如果没有,建议更换yum源,比如用阿里的源.<br>最后一句会显示当前ssh的版本号,如果成功显示openSSH6.7p1,那基本上算是接近成功了.</p>\n<h1 id=\"启用ssh服务\"><a href=\"#启用ssh服务\" class=\"headerlink\" title=\"启用ssh服务\"></a>启用ssh服务</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cp contrib/redhat/sshd.init /etc/init.d/sshd &amp;&amp; chkconfig --add sshd \\</div><div class=\"line\">&amp;&amp; service sshd start &amp;&amp; vim /etc/ssh/sshd_config</div></pre></td></tr></table></figure>\n<p>这里将ssh服务做成开机启动并启动了sshd,打开sshd_config后,如果需要连接xshell4,则按下图进行以下修改:<br><img src=\"/images/openssh_sshd_config.jpg\" alt=\"sshd\"><br>保存退出后,重启sshd并查一下sshd服务是否是自启动状态:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">service sshd restart &amp;&amp; chkconfig --list sshd</div></pre></td></tr></table></figure>\n<h1 id=\"关闭telnet\"><a href=\"#关闭telnet\" class=\"headerlink\" title=\"关闭telnet\"></a>关闭telnet</h1><p>停止telnet服务,并修改配置:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/etc/init.d/xinetd stop &amp;&amp; vi /etc/xinetd.d/telnet</div></pre></td></tr></table></figure>\n<p>将之前改过的disable=yes又改回去成no.<br>随后再将修改iptables将23端口关闭,并重启iptables服务.<br>至此,可以再开ssh登录,用ssh -V查看版本号.</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cj9ja9jnr0002pvvpo8slqv4v","category_id":"cj9ja9jo30006pvvpax2efk6n","_id":"cj9ja9joi000dpvvpsx8azdba"},{"post_id":"cj9ja9jny0004pvvph3dml8to","category_id":"cj9ja9jog000bpvvp8896ru2e","_id":"cj9ja9joj000gpvvp5h6u950v"},{"post_id":"cj9ja9jo80008pvvpy95iqr1c","category_id":"cj9ja9joi000epvvp4zjf3y6v","_id":"cj9ja9jol000lpvvpn07hhhvn"},{"post_id":"cj9ja9jod0009pvvpbbt40xt4","category_id":"cj9ja9joj000hpvvpywp3oqbb","_id":"cj9ja9jom000ppvvpy7hui0gm"},{"post_id":"cj9ja9jof000apvvp0em5ysp7","category_id":"cj9ja9jol000mpvvpb6ef3bib","_id":"cj9ja9joo000tpvvp7l378ds8"}],"PostTag":[{"post_id":"cj9ja9jnr0002pvvpo8slqv4v","tag_id":"cj9ja9jo60007pvvp5p89u3iw","_id":"cj9ja9jok000jpvvpdgs5xnbt"},{"post_id":"cj9ja9jnr0002pvvpo8slqv4v","tag_id":"cj9ja9jog000cpvvp2prtr63r","_id":"cj9ja9jok000kpvvprwftf3zx"},{"post_id":"cj9ja9jnr0002pvvpo8slqv4v","tag_id":"cj9ja9joi000fpvvphvzil1ef","_id":"cj9ja9jom000opvvp5pnitzss"},{"post_id":"cj9ja9jny0004pvvph3dml8to","tag_id":"cj9ja9joj000ipvvpmpy5gg67","_id":"cj9ja9jon000rpvvpgivkxrco"},{"post_id":"cj9ja9jny0004pvvph3dml8to","tag_id":"cj9ja9jol000npvvp80zhznc5","_id":"cj9ja9joo000spvvp22h2a75s"},{"post_id":"cj9ja9jo80008pvvpy95iqr1c","tag_id":"cj9ja9jon000qpvvpeqazjyz8","_id":"cj9ja9jor000wpvvpozyueaq0"},{"post_id":"cj9ja9jo80008pvvpy95iqr1c","tag_id":"cj9ja9jop000upvvpbxs87brw","_id":"cj9ja9jos000xpvvpro8gizcb"},{"post_id":"cj9ja9jod0009pvvpbbt40xt4","tag_id":"cj9ja9jon000qpvvpeqazjyz8","_id":"cj9ja9jos000zpvvpmfkobjco"},{"post_id":"cj9ja9jof000apvvp0em5ysp7","tag_id":"cj9ja9jos000ypvvpicxpdim5","_id":"cj9ja9jot0012pvvpqy6di8yl"},{"post_id":"cj9ja9jof000apvvp0em5ysp7","tag_id":"cj9ja9jog000cpvvp2prtr63r","_id":"cj9ja9jot0013pvvpnc6hzgcf"},{"post_id":"cj9ja9jof000apvvp0em5ysp7","tag_id":"cj9ja9jot0011pvvpmcrv80xp","_id":"cj9ja9jot0014pvvp8sxdi2we"}],"Tag":[{"name":"github","_id":"cj9ja9jo60007pvvp5p89u3iw"},{"name":"ssh","_id":"cj9ja9jog000cpvvp2prtr63r"},{"name":"git","_id":"cj9ja9joi000fpvvphvzil1ef"},{"name":"node","_id":"cj9ja9joj000ipvvpmpy5gg67"},{"name":"javascript","_id":"cj9ja9jol000npvvp80zhznc5"},{"name":"hexo","_id":"cj9ja9jon000qpvvpeqazjyz8"},{"name":"nodejs","_id":"cj9ja9jop000upvvpbxs87brw"},{"name":"centos","_id":"cj9ja9jos000ypvvpicxpdim5"},{"name":"linux","_id":"cj9ja9jot0011pvvpmcrv80xp"}]}}